Warning: can not import net
Traceback (most recent call last):
  File "main.py", line 7, in <module>
    from predictor import Predictor
  File "/home/fengxy/code/src/predictor.py", line 8, in <module>
    from index import CN, JC, RWR, KI, CNA, ATT, EMB, KIA, RWRA, JCA
  File "/home/fengxy/code/src/index.py", line 69
    self.attribute = attribute
                             ^
TabError: inconsistent use of tabs and spaces in indentation
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | direct   |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
Traceback (most recent call last):
  File "main.py", line 69, in <module>
    main(args)
  File "main.py", line 58, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 113, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 99, in train_test_scores
    model.get_scores_matrix()
  File "/home/fengxy/code/src/index.py", line 74, in get_scores_matrix
    print('self.S.shape', self.S.shape)
AttributeError: 'JCA' object has no attribute 'S'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | direct   |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
Traceback (most recent call last):
  File "main.py", line 69, in <module>
    main(args)
  File "main.py", line 58, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 113, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 99, in train_test_scores
    model.get_scores_matrix()
  File "/home/fengxy/code/src/index.py", line 74, in get_scores_matrix
    print('self.S.shape', self.S.shape)
AttributeError: 'JCA' object has no attribute 'S'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | direct   |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
Traceback (most recent call last):
  File "main.py", line 69, in <module>
    main(args)
  File "main.py", line 58, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 113, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 99, in train_test_scores
    model.get_scores_matrix()
  File "/home/fengxy/code/src/index.py", line 74, in get_scores_matrix
    print('self.S.shape', self.S.shape)
AttributeError: 'JCA' object has no attribute 'S'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | direct   |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
Traceback (most recent call last):
  File "main.py", line 69, in <module>
    main(args)
  File "main.py", line 58, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 113, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 99, in train_test_scores
    model.get_scores_matrix()
  File "/home/fengxy/code/src/index.py", line 74, in get_scores_matrix
    print('self.S.shape', self.S.shape)
AttributeError: 'JCA' object has no attribute 'S'
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | cora   |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 1      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.900  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
Traceback (most recent call last):
  File "main.py", line 69, in <module>
    main(args)
  File "main.py", line 58, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 117, in predict
    X_test = X_test[shuffle_idx]
IndexError: index 6826 is out of bounds for axis 0 with size 0
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | cora   |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 1      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.100  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
Traceback (most recent call last):
  File "main.py", line 69, in <module>
    main(args)
  File "main.py", line 58, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 117, in predict
    X_test = X_test[shuffle_idx]
IndexError: index 1078 is out of bounds for axis 0 with size 0
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | cora   |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 1      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.500  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
Traceback (most recent call last):
  File "main.py", line 69, in <module>
    main(args)
  File "main.py", line 58, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 117, in predict
    X_test = X_test[shuffle_idx]
IndexError: index 3826 is out of bounds for axis 0 with size 0
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | cora   |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 0      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.500  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
Traceback (most recent call last):
  File "main.py", line 69, in <module>
    main(args)
  File "main.py", line 58, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 117, in predict
    X_test = X_test[shuffle_idx]
IndexError: index 3826 is out of bounds for axis 0 with size 0
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | cora   |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 0      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.100  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
Traceback (most recent call last):
  File "main.py", line 69, in <module>
    main(args)
  File "main.py", line 58, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 117, in predict
    X_test = X_test[shuffle_idx]
IndexError: index 1078 is out of bounds for axis 0 with size 0
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | cora   |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 0      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.100  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  False
Y_test.shape (1626,)
Y_prob.shape (1626,)
Y_pred.shape (1626,)
precision 0.7872078720787208
recall 0.7872078720787208
f1 0.7872078720787209
auc 0.8592271347067715
ap 0.8882173814519526
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  False
Y_test.shape (1626,)
Y_prob.shape (1626,)
Y_pred.shape (1626,)
precision 0.8118081180811808
recall 0.8118081180811808
f1 0.8118081180811808
auc 0.8941077418154254
ap 0.9138291577226161
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  False
Y_test.shape (1626,)
Y_prob.shape (1626,)
Y_pred.shape (1626,)
precision 0.8130381303813038
recall 0.8130381303813038
f1 0.8130381303813038
auc 0.8794103808196754
ap 0.902250007072335
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  False
Y_test.shape (1626,)
Y_prob.shape (1626,)
Y_pred.shape (1626,)
precision 0.8031980319803198
recall 0.8031980319803198
f1 0.8031980319803198
auc 0.8819036898856073
ap 0.9067750403737515
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  False
Y_test.shape (1626,)
Y_prob.shape (1626,)
Y_pred.shape (1626,)
precision 0.7933579335793358
recall 0.7933579335793358
f1 0.7933579335793358
auc 0.8771780522233267
ap 0.9013755664850103
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  False
Y_test.shape (1626,)
Y_prob.shape (1626,)
Y_pred.shape (1626,)
precision 0.7970479704797048
recall 0.7970479704797048
f1 0.7970479704797048
auc 0.8753965768439971
ap 0.8989085324629034
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  False
Y_test.shape (1626,)
Y_prob.shape (1626,)
Y_pred.shape (1626,)
precision 0.7945879458794588
recall 0.7945879458794588
f1 0.7945879458794588
auc 0.8807576452148286
ap 0.9050822164012776
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  False
Y_test.shape (1626,)
Y_prob.shape (1626,)
Y_pred.shape (1626,)
precision 0.7822878228782287
recall 0.7822878228782287
f1 0.7822878228782287
auc 0.8676518868509717
ap 0.8925724358110922
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  False
Y_test.shape (1626,)
Y_prob.shape (1626,)
Y_pred.shape (1626,)
precision 0.7945879458794588
recall 0.7945879458794588
f1 0.7945879458794588
auc 0.8711437298874835
ap 0.8970672126556918
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  False
Y_test.shape (1626,)
Y_prob.shape (1626,)
Y_pred.shape (1626,)
precision 0.8031980319803198
recall 0.8031980319803198
f1 0.8031980319803198
auc 0.8807334383306933
ap 0.9004492428718393
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | cora   |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 0      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.900  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  False
Y_test.shape (14646,)
Y_prob.shape (14646,)
Y_pred.shape (14646,)
precision 0.789157449132869
recall 0.789157449132869
f1 0.789157449132869
auc 0.8690355254412436
ap 0.8942337793203535
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  False
Y_test.shape (14646,)
Y_prob.shape (14646,)
Y_pred.shape (14646,)
precision 0.796258364058446
recall 0.796258364058446
f1 0.796258364058446
auc 0.8727806633939087
ap 0.8963406084286001
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  False
Y_test.shape (14646,)
Y_prob.shape (14646,)
Y_pred.shape (14646,)
precision 0.7917520142018298
recall 0.7917520142018298
f1 0.7917520142018298
auc 0.8677706523599629
ap 0.8946638708078283
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  False
Y_test.shape (14646,)
Y_prob.shape (14646,)
Y_pred.shape (14646,)
precision 0.7950293595520961
recall 0.7950293595520961
f1 0.7950293595520961
auc 0.8735201135994225
ap 0.8983384240530252
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  False
Y_test.shape (14646,)
Y_prob.shape (14646,)
Y_pred.shape (14646,)
precision 0.7922982384268742
recall 0.7922982384268742
f1 0.7922982384268742
auc 0.8709343315295739
ap 0.8952111926025805
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  False
Y_test.shape (14646,)
Y_prob.shape (14646,)
Y_pred.shape (14646,)
precision 0.7935272429332241
recall 0.7935272429332241
f1 0.7935272429332241
auc 0.8716202912192628
ap 0.8970768250165502
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  False
Y_test.shape (14646,)
Y_prob.shape (14646,)
Y_pred.shape (14646,)
precision 0.7924347944831354
recall 0.7924347944831354
f1 0.7924347944831354
auc 0.8705684571472346
ap 0.8962119460648018
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  False
Y_test.shape (14646,)
Y_prob.shape (14646,)
Y_pred.shape (14646,)
precision 0.7907961218080022
recall 0.7907961218080022
f1 0.7907961218080022
auc 0.8732839609438863
ap 0.8980277968663123
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  False
Y_test.shape (14646,)
Y_prob.shape (14646,)
Y_pred.shape (14646,)
precision 0.8014474941963676
recall 0.8014474941963676
f1 0.8014474941963676
auc 0.8786546996345769
ap 0.9025323989745193
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  False
Y_test.shape (14646,)
Y_prob.shape (14646,)
Y_pred.shape (14646,)
precision 0.794756247439574
recall 0.794756247439574
f1 0.794756247439574
auc 0.8738468840557779
ap 0.8965058405625218
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | cora   |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 0      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.500  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  False
Y_test.shape (8136,)
Y_prob.shape (8136,)
Y_pred.shape (8136,)
precision 0.8021140609636185
recall 0.8021140609636185
f1 0.8021140609636184
auc 0.8773654836800933
ap 0.9011695523823866
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  False
Y_test.shape (8136,)
Y_prob.shape (8136,)
Y_pred.shape (8136,)
precision 0.789331366764995
recall 0.789331366764995
f1 0.789331366764995
auc 0.8691008388371142
ap 0.8944712360961543
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  False
Y_test.shape (8136,)
Y_prob.shape (8136,)
Y_pred.shape (8136,)
precision 0.7935103244837758
recall 0.7935103244837758
f1 0.7935103244837757
auc 0.8760023491983382
ap 0.9002516310368905
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  False
Y_test.shape (8136,)
Y_prob.shape (8136,)
Y_pred.shape (8136,)
precision 0.8030973451327433
recall 0.8030973451327433
f1 0.8030973451327433
auc 0.8788137309784788
ap 0.9036539168006132
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  False
Y_test.shape (8136,)
Y_prob.shape (8136,)
Y_pred.shape (8136,)
precision 0.7954768928220256
recall 0.7954768928220256
f1 0.7954768928220256
auc 0.8741632536940838
ap 0.8984779802802542
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  False
Y_test.shape (8136,)
Y_prob.shape (8136,)
Y_pred.shape (8136,)
precision 0.7949852507374632
recall 0.7949852507374632
f1 0.7949852507374632
auc 0.8763839217085359
ap 0.8991307507777005
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  False
Y_test.shape (8136,)
Y_prob.shape (8136,)
Y_pred.shape (8136,)
precision 0.7947394296951819
recall 0.7947394296951819
f1 0.7947394296951819
auc 0.8765087357111987
ap 0.9004212049743119
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  False
Y_test.shape (8136,)
Y_prob.shape (8136,)
Y_pred.shape (8136,)
precision 0.8018682399213373
recall 0.8018682399213373
f1 0.8018682399213373
auc 0.8822205399071246
ap 0.9045636079997106
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  False
Y_test.shape (8136,)
Y_prob.shape (8136,)
Y_pred.shape (8136,)
precision 0.7898230088495575
recall 0.7898230088495575
f1 0.7898230088495576
auc 0.8718072874216009
ap 0.897263004484915
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  False
Y_test.shape (8136,)
Y_prob.shape (8136,)
Y_pred.shape (8136,)
precision 0.7989183874139626
recall 0.7989183874139626
f1 0.7989183874139626
auc 0.8760226530012404
ap 0.9009854328139435
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | cora   |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 1      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.900  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  True
precision 0.91701244813278
recall 0.6337566571077428
f1 0.749515503875969
auc 0.8690358704210389
ap 0.8942282188438191
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  True
precision 0.9208560468402988
recall 0.6228321726068551
f1 0.7430759204952753
auc 0.8727519927757874
ap 0.8963219823571167
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  True
precision 0.9226976927627687
recall 0.6389457872456643
f1 0.7550427626270776
auc 0.8677777291076553
ap 0.8946554039068892
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  True
precision 0.9194331197825665
recall 0.6467294824525468
f1 0.7593394260060927
auc 0.8735252416774604
ap 0.8983115895842634
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  True
precision 0.9158970328158774
recall 0.6364877782329647
f1 0.7510473735095069
auc 0.8709324947452584
ap 0.8951935836915761
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  True
precision 0.9204233633869071
recall 0.641267240202103
f1 0.7558953722334004
auc 0.8715448525294357
ap 0.8970182637143003
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  True
precision 0.9188025826648405
recall 0.641267240202103
f1 0.7553482387003378
auc 0.8705586765038494
ap 0.8961879129202802
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  True
precision 0.9085981308411215
recall 0.6637989894851837
f1 0.767142744417265
auc 0.8730077160418719
ap 0.8978216546062909
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  True
precision 0.9237781225756401
recall 0.6504164959715963
f1 0.7633624489141758
auc 0.8783758254270958
ap 0.9023244233597543
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7323
len(negative_edge) 7323
len(positive_edge) 7323
is_supserved =  True
precision 0.9202330721318063
recall 0.6254267376758159
f1 0.7447154471544716
auc 0.8735507235634197
ap 0.8962669541260881
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | direct   |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  False
Y_test.shape (14224,)
Y_prob.shape (14224,)
Y_pred.shape (14224,)
precision 0.8658605174353206
recall 0.8658605174353206
f1 0.8658605174353206
auc 0.9377135010647573
ap 0.9516214395536599
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  False
Y_test.shape (14224,)
Y_prob.shape (14224,)
Y_pred.shape (14224,)
precision 0.8651574803149606
recall 0.8651574803149606
f1 0.8651574803149606
auc 0.9390632987260874
ap 0.9518589467906874
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  False
Y_test.shape (14224,)
Y_prob.shape (14224,)
Y_pred.shape (14224,)
precision 0.8600956130483689
recall 0.8600956130483689
f1 0.8600956130483689
auc 0.9340878184307388
ap 0.9480004185290545
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  False
Y_test.shape (14224,)
Y_prob.shape (14224,)
Y_pred.shape (14224,)
precision 0.8705005624296963
recall 0.8705005624296963
f1 0.8705005624296963
auc 0.939825825123589
ap 0.9527086970437193
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  False
Y_test.shape (14224,)
Y_prob.shape (14224,)
Y_pred.shape (14224,)
precision 0.8640326209223848
recall 0.8640326209223848
f1 0.8640326209223848
auc 0.9353918672760814
ap 0.9497531997904612
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  False
Y_test.shape (14224,)
Y_prob.shape (14224,)
Y_pred.shape (14224,)
precision 0.8685320584926884
recall 0.8685320584926884
f1 0.8685320584926884
auc 0.9427780571122366
ap 0.9544024038576162
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  False
Y_test.shape (14224,)
Y_prob.shape (14224,)
Y_pred.shape (14224,)
precision 0.8615016872890888
recall 0.8615016872890888
f1 0.8615016872890888
auc 0.9374670228932295
ap 0.9507268915203549
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  False
Y_test.shape (14224,)
Y_prob.shape (14224,)
Y_pred.shape (14224,)
precision 0.8638920134983127
recall 0.8638920134983127
f1 0.8638920134983127
auc 0.9356035791153214
ap 0.9494545136172787
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  False
Y_test.shape (14224,)
Y_prob.shape (14224,)
Y_pred.shape (14224,)
precision 0.8637514060742407
recall 0.8637514060742407
f1 0.8637514060742407
auc 0.9371709011275164
ap 0.9503471737719005
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  False
Y_test.shape (14224,)
Y_prob.shape (14224,)
Y_pred.shape (14224,)
precision 0.8660011248593926
recall 0.8660011248593926
f1 0.8660011248593926
auc 0.9389847013112393
ap 0.9518301001798462
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | direct   |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  False
Y_test.shape (1580,)
Y_prob.shape (1580,)
Y_pred.shape (1580,)
precision 0.8696202531645569
recall 0.8696202531645569
f1 0.8696202531645569
auc 0.9378232655023233
ap 0.9514920560782381
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  False
Y_test.shape (1580,)
Y_prob.shape (1580,)
Y_pred.shape (1580,)
precision 0.8746835443037975
recall 0.8746835443037975
f1 0.8746835443037975
auc 0.9488783848742189
ap 0.9592633330733562
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  False
Y_test.shape (1580,)
Y_prob.shape (1580,)
Y_pred.shape (1580,)
precision 0.879746835443038
recall 0.879746835443038
f1 0.879746835443038
auc 0.9470277199166799
ap 0.9583167778183264
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  False
Y_test.shape (1580,)
Y_prob.shape (1580,)
Y_pred.shape (1580,)
precision 0.8734177215189873
recall 0.8734177215189873
f1 0.8734177215189873
auc 0.9433368049991989
ap 0.9560928842271232
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  False
Y_test.shape (1580,)
Y_prob.shape (1580,)
Y_pred.shape (1580,)
precision 0.8759493670886076
recall 0.8759493670886076
f1 0.8759493670886076
auc 0.9441299471238583
ap 0.9555676562955611
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  False
Y_test.shape (1580,)
Y_prob.shape (1580,)
Y_pred.shape (1580,)
precision 0.8784810126582279
recall 0.8784810126582279
f1 0.8784810126582279
auc 0.9509461624739625
ap 0.9600249938666954
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  False
Y_test.shape (1580,)
Y_prob.shape (1580,)
Y_pred.shape (1580,)
precision 0.879746835443038
recall 0.879746835443038
f1 0.879746835443038
auc 0.9491155263579556
ap 0.9589097911443417
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  False
Y_test.shape (1580,)
Y_prob.shape (1580,)
Y_pred.shape (1580,)
precision 0.8556962025316456
recall 0.8556962025316456
f1 0.8556962025316456
auc 0.9270797949046627
ap 0.9442989057200784
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  False
Y_test.shape (1580,)
Y_prob.shape (1580,)
Y_pred.shape (1580,)
precision 0.8734177215189873
recall 0.8734177215189873
f1 0.8734177215189873
auc 0.9508091651978848
ap 0.9610395566013911
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  False
Y_test.shape (1580,)
Y_prob.shape (1580,)
Y_pred.shape (1580,)
precision 0.8683544303797468
recall 0.8683544303797468
f1 0.8683544303797468
auc 0.9412209581797788
ap 0.954705209292649
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | direct   |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  False
Y_test.shape (7902,)
Y_prob.shape (7902,)
Y_pred.shape (7902,)
precision 0.8630726398380157
recall 0.8630726398380157
f1 0.8630726398380157
auc 0.9376964115143487
ap 0.9507877154815442
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  False
Y_test.shape (7902,)
Y_prob.shape (7902,)
Y_pred.shape (7902,)
precision 0.8663629460895975
recall 0.8663629460895975
f1 0.8663629460895975
auc 0.9388377659228612
ap 0.9516993155014388
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  False
Y_test.shape (7902,)
Y_prob.shape (7902,)
Y_pred.shape (7902,)
precision 0.8688939508985067
recall 0.8688939508985067
f1 0.8688939508985069
auc 0.9363388551005192
ap 0.9506708384906426
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  False
Y_test.shape (7902,)
Y_prob.shape (7902,)
Y_pred.shape (7902,)
precision 0.8605416350291065
recall 0.8605416350291065
f1 0.8605416350291065
auc 0.9327077504287046
ap 0.948318661873022
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  False
Y_test.shape (7902,)
Y_prob.shape (7902,)
Y_pred.shape (7902,)
precision 0.862313338395343
recall 0.862313338395343
f1 0.862313338395343
auc 0.9374725863864739
ap 0.9506794612965492
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  False
Y_test.shape (7902,)
Y_prob.shape (7902,)
Y_pred.shape (7902,)
precision 0.8691470513793976
recall 0.8691470513793976
f1 0.8691470513793977
auc 0.94121371385655
ap 0.9536870611945911
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  False
Y_test.shape (7902,)
Y_prob.shape (7902,)
Y_pred.shape (7902,)
precision 0.8567451278157429
recall 0.8567451278157429
f1 0.8567451278157429
auc 0.9362305619183005
ap 0.949575259760298
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  False
Y_test.shape (7902,)
Y_prob.shape (7902,)
Y_pred.shape (7902,)
precision 0.8595292331055429
recall 0.8595292331055429
f1 0.8595292331055429
auc 0.9370065509527911
ap 0.9502318659507815
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  False
Y_test.shape (7902,)
Y_prob.shape (7902,)
Y_pred.shape (7902,)
precision 0.8577575297393065
recall 0.8577575297393065
f1 0.8577575297393064
auc 0.9362137141768491
ap 0.9498976198018892
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  False
Y_test.shape (7902,)
Y_prob.shape (7902,)
Y_pred.shape (7902,)
precision 0.8635788407997975
recall 0.8635788407997975
f1 0.8635788407997975
auc 0.9369330743009101
ap 0.9502371146996493
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | cora   |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 1      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.500  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  True
precision 0.8812062138288151
recall 0.7111602753195674
f1 0.7871037954019863
auc 0.8773656649640477
ap 0.9011320447707063
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  True
precision 0.8688773958016428
recall 0.7020648967551623
f1 0.7766145479265806
auc 0.8691004158412203
ap 0.894461553117385
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  True
precision 0.8784764207980653
recall 0.7143559488692232
f1 0.7879609544468547
auc 0.876121694468374
ap 0.9003297597356137
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  True
precision 0.8865571776155717
recall 0.7165683382497542
f1 0.7925502990755846
auc 0.8788127943447142
ap 0.9036427227146587
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  True
precision 0.8870109546165884
recall 0.6966568338249755
f1 0.7803937766763046
auc 0.8742827802480738
ap 0.8985759750188199
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  True
precision 0.8939442486382569
recall 0.6858407079646017
f1 0.7761858394769787
auc 0.8763886955193374
ap 0.8990967799081329
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  True
precision 0.8823709135349832
recall 0.7099311701081613
f1 0.7868137855877946
auc 0.8765071947975855
ap 0.9003827483167853
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  True
precision 0.8778375149342891
recall 0.7224680432645034
f1 0.7926105717367853
auc 0.8822078802443031
ap 0.9045439933665789
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  True
precision 0.8719196836020687
recall 0.7045231071779744
f1 0.7793337865397688
auc 0.871793298343113
ap 0.8972394005958102
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 4068
len(negative_edge) 4068
len(positive_edge) 4068
is_supserved =  True
precision 0.8819632640770853
recall 0.7200098328416913
f1 0.7928001082690485
auc 0.8760018355604671
ap 0.9009437062803902
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | direct   |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  True
precision 0.9527734844581831
recall 0.7800899887514061
f1 0.8578275995361423
auc 0.937714311653113
ap 0.9516149704753962
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  True
precision 0.9537982349887524
recall 0.7750281214848144
f1 0.8551702738344581
auc 0.9390690519263691
ap 0.9518589747577995
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  True
precision 0.9610247026532479
recall 0.7384701912260967
f1 0.8351753200286237
auc 0.9340871758911884
ap 0.9479929793275618
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  True
precision 0.9647206303724928
recall 0.7574521934758155
f1 0.8486137366099559
auc 0.9397995304281425
ap 0.9525724814833929
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  True
precision 0.9608091024020228
recall 0.7480314960629921
f1 0.8411732152739347
auc 0.9353992614235229
ap 0.9497056379420867
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  True
precision 0.9605401613468958
recall 0.7701068616422947
f1 0.8548462619010458
auc 0.9427859455208706
ap 0.9544017980264266
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  True
precision 0.9546320346320346
recall 0.7751687289088864
f1 0.8555909055637464
auc 0.9374204931445577
ap 0.9504549323105949
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  True
precision 0.9592857142857143
recall 0.7553430821147357
f1 0.8451856513530523
auc 0.9356237647424275
ap 0.949464322344008
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  True
precision 0.9633060853769301
recall 0.7456411698537683
f1 0.8406118728699373
auc 0.937113794189323
ap 0.9501807502335948
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 7112
len(negative_edge) 7112
len(positive_edge) 7112
is_supserved =  True
precision 0.9658181818181818
recall 0.7469066366704162
f1 0.8423723437995561
auc 0.938893164138369
ap 0.9517469536998593
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | direct   |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  True
precision 0.9437652811735942
recall 0.7815742849911415
f1 0.8550463796206562
auc 0.9376661752635309
ap 0.950768671373803
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  True
precision 0.9401197604790419
recall 0.794735509997469
f1 0.8613358935674118
auc 0.938833762182022
ap 0.9516841085954308
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  True
precision 0.9469857618903362
recall 0.7911921032649962
f1 0.8621070049641477
auc 0.9368301941763059
ap 0.9510514915497066
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  True
precision 0.9418710263396912
recall 0.7873955960516325
f1 0.857733664185277
auc 0.9327359687941392
ap 0.9482990452363065
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  True
precision 0.9349447925992241
recall 0.7929638066312326
f1 0.8581210627225418
auc 0.9374389869933514
ap 0.9506583168158368
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  True
precision 0.9558732131758857
recall 0.7785370792204506
f1 0.8581392104896082
auc 0.9412262695878215
ap 0.9537035591076894
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  True
precision 0.9384057971014492
recall 0.7866362946089598
f1 0.8558446922759191
auc 0.9361920299164641
ap 0.949564388686668
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  True
precision 0.9415347137637028
recall 0.7825866869147051
f1 0.8547339322736696
auc 0.9369708375845054
ap 0.9502034076780258
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  True
precision 0.9364508393285371
recall 0.7906859023032143
f1 0.8574173185124193
auc 0.9362136821469225
ap 0.9498931066808582
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 3951
len(negative_edge) 3951
len(positive_edge) 3951
is_supserved =  True
precision 0.940839118623604
recall 0.788914198936978
f1 0.8582048458149781
auc 0.9369511712095031
ap 0.9502288359047186
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
Traceback (most recent call last):
  File "/home/fengxy/code/src/main.py", line 70, in <module>
    main(args)
  File "/home/fengxy/code/src/main.py", line 59, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
  File "/home/fengxy/code/src/index.py", line 187, in get_scores
    X_score.append(self.S[edge1][edge2]) 
NameError: name 'X_score' is not defined
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
Traceback (most recent call last):
  File "/home/fengxy/code/src/main.py", line 70, in <module>
    main(args)
  File "/home/fengxy/code/src/main.py", line 59, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
  File "/home/fengxy/code/src/index.py", line 187, in get_scores
    X_score.append(self.S[edge1][edge2]) 
NameError: name 'X_score' is not defined
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
Traceback (most recent call last):
  File "/home/fengxy/code/src/main.py", line 70, in <module>
    main(args)
  File "/home/fengxy/code/src/main.py", line 59, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
  File "/home/fengxy/code/src/index.py", line 187, in get_scores
    X_score.append(self.S[edge1][edge2]) 
NameError: name 'X_score' is not defined
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
Traceback (most recent call last):
  File "/home/fengxy/code/src/main.py", line 70, in <module>
    main(args)
  File "/home/fengxy/code/src/main.py", line 59, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
  File "/home/fengxy/code/src/index.py", line 187, in get_scores
    X_score.append(self.S[edge1][edge2]) 
NameError: name 'X_score' is not defined
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
Traceback (most recent call last):
  File "/home/fengxy/code/src/main.py", line 70, in <module>
    main(args)
  File "/home/fengxy/code/src/main.py", line 59, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
  File "/home/fengxy/code/src/index.py", line 187, in get_scores
    X_score.append(self.S[edge1][edge2]) 
NameError: name 'X_score' is not defined
7976285852
ap 0.9581671400291312
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  True
precision 0.9420289855072463
recall 0.8227848101265823
f1 0.8783783783783783
auc 0.9432919403941676
ap 0.9560715800200603
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  True
precision 0.9261363636363636
recall 0.8253164556962025
f1 0.8728246318607763
auc 0.9445361320301234
ap 0.95591197558408
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  True
precision 0.915041782729805
recall 0.8316455696202532
f1 0.8713527851458885
auc 0.9509373497836886
ap 0.9600036525498361
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  True
precision 0.9425625920471281
recall 0.810126582278481
f1 0.8713410483321986
auc 0.9490842813651658
ap 0.9588652777603037
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  True
precision 0.9248895434462445
recall 0.7949367088607595
f1 0.85500340367597
auc 0.9268538695721841
ap 0.9430907726073042
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  True
precision 0.9298737727910238
recall 0.839240506329114
f1 0.8822355289421159
auc 0.9505207498798269
ap 0.9607964555956701
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 790
len(negative_edge) 790
len(positive_edge) 790
is_supserved =  True
precision 0.9402332361516035
recall 0.8164556962025317
f1 0.8739837398373984
auc 0.9412121454895049
ap 0.9546947225118473
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
Traceback (most recent call last):
  File "/home/fengxy/code/src/main.py", line 70, in <module>
    main(args)
  File "/home/fengxy/code/src/main.py", line 59, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
  File "/home/fengxy/code/src/index.py", line 187, in get_scores
    X_score.append(self.S[edge1][edge2]) 
NameError: name 'X_score' is not defined
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
Traceback (most recent call last):
  File "/home/fengxy/code/src/main.py", line 70, in <module>
    main(args)
  File "/home/fengxy/code/src/main.py", line 59, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
  File "/home/fengxy/code/src/index.py", line 187, in get_scores
    X_score.append(self.S[edge1][edge2]) 
NameError: name 'X_score' is not defined
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
Traceback (most recent call last):
  File "/home/fengxy/code/src/main.py", line 70, in <module>
    main(args)
  File "/home/fengxy/code/src/main.py", line 59, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
  File "/home/fengxy/code/src/index.py", line 187, in get_scores
    X_score.append(self.S[edge1][edge2]) 
NameError: name 'X_score' is not defined
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | cora   |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 1      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.100  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  True
precision 0.8465991316931982
recall 0.7195571955719557
f1 0.7779255319148937
auc 0.859222595915996
ap 0.8882181313378219
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  True
precision 0.8832116788321168
recall 0.7441574415744158
f1 0.8077436582109478
auc 0.8941107676759424
ap 0.9138208533733883
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  True
precision 0.8605633802816901
recall 0.7515375153751538
f1 0.8023637557452397
auc 0.8791297322567322
ap 0.9019596776631729
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  True
precision 0.8742857142857143
recall 0.7527675276752768
f1 0.8089887640449439
auc 0.8811842915477125
ap 0.90589436102317
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  True
precision 0.865979381443299
recall 0.7232472324723247
f1 0.7882037533512064
auc 0.8775237567873835
ap 0.9014668325642419
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  True
precision 0.8625730994152047
recall 0.7257072570725708
f1 0.7882431529726119
auc 0.8763126561154911
ap 0.8995840563321774
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  True
precision 0.8851963746223565
recall 0.7207872078720787
f1 0.7945762711864407
auc 0.8807765568430592
ap 0.9050848178274387
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  True
precision 0.8516405135520685
recall 0.7343173431734318
f1 0.7886393659180977
auc 0.8676594515022642
ap 0.8925713816042347
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  True
precision 0.8671532846715329
recall 0.7306273062730627
f1 0.7930574098798397
auc 0.8702533704303834
ap 0.8964436027420596
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 813
len(negative_edge) 813
len(positive_edge) 813
is_supserved =  True
precision 0.853448275862069
recall 0.7306273062730627
f1 0.7872763419483102
auc 0.8803037661372922
ap 0.8998790275743868
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8082706766917294
recall 0.8082706766917294
f1 0.8082706766917294
auc 0.901877971872036
ap 0.919267276603398
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.7907268170426065
recall 0.7907268170426065
f1 0.7907268170426065
auc 0.8784508263139051
ap 0.9045710789978592
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8082706766917294
recall 0.8082706766917294
f1 0.8082706766917294
auc 0.8917555480179143
ap 0.9123967472071339
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8120300751879699
recall 0.8120300751879699
f1 0.8120300751879698
auc 0.8913770956212587
ap 0.9125219595598333
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8145363408521303
recall 0.8145363408521303
f1 0.8145363408521303
auc 0.8975611020031282
ap 0.9175879547888162
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8170426065162907
recall 0.8170426065162907
f1 0.8170426065162907
auc 0.8914579682288427
ap 0.9125930030209943
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8157894736842105
recall 0.8157894736842105
f1 0.8157894736842104
auc 0.8968670108856102
ap 0.9186541236499641
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8270676691729323
recall 0.8270676691729323
f1 0.8270676691729322
auc 0.8993709210369283
ap 0.9220347785379187
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8170426065162907
recall 0.8170426065162907
f1 0.8170426065162907
auc 0.8921614813977299
ap 0.9144645265310561
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8333333333333334
recall 0.8333333333333334
f1 0.8333333333333334
auc 0.9080125124842181
ap 0.9269924033378666
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7924029497704188
recall 0.7924029497704188
f1 0.7924029497704188
auc 0.8755816437192603
ap 0.9016648616541909
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7964380130791707
recall 0.7964380130791707
f1 0.7964380130791707
auc 0.8742326215555972
ap 0.9002434957705922
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7960205927368861
recall 0.7960205927368861
f1 0.7960205927368861
auc 0.8789425637856364
ap 0.9032992828110131
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7915681090858494
recall 0.7915681090858494
f1 0.7915681090858494
auc 0.8740430487161348
ap 0.8989865765890239
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7994990955892584
recall 0.7994990955892584
f1 0.7994990955892584
auc 0.8810895458884465
ap 0.9046556392493754
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7929595102267983
recall 0.7929595102267983
f1 0.7929595102267983
auc 0.8757909346895433
ap 0.900251666498575
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7954640322805064
recall 0.7954640322805064
f1 0.7954640322805064
auc 0.8733980519106268
ap 0.8981334371143449
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7985251147905942
recall 0.7985251147905942
f1 0.7985251147905942
auc 0.8793245553803499
ap 0.9033986465302225
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7922638096563239
recall 0.7922638096563239
f1 0.7922638096563239
auc 0.87231758158955
ap 0.8975920068009542
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7910115486294699
recall 0.7910115486294699
f1 0.7910115486294699
auc 0.8750953502788968
ap 0.8997136947923247
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7988980716253443
recall 0.7988980716253443
f1 0.7988980716253442
auc 0.8830935918473407
ap 0.9062804633795614
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.8014024542950163
recall 0.8014024542950163
f1 0.8014024542950164
auc 0.885262771081549
ap 0.9075491354351399
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.8031555221637866
recall 0.8031555221637866
f1 0.8031555221637866
auc 0.8890172126289877
ap 0.9107421292690961
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.8026546456298522
recall 0.8026546456298522
f1 0.8026546456298522
auc 0.8850253157149732
ap 0.9089142175610899
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.8016528925619835
recall 0.8016528925619835
f1 0.8016528925619834
auc 0.8821817469326643
ap 0.9060566352209091
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.8146756824442775
recall 0.8146756824442775
f1 0.8146756824442773
auc 0.8932126651141126
ap 0.9141935924772481
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7963936889556724
recall 0.7963936889556724
f1 0.7963936889556724
auc 0.8792294855591575
ap 0.9038436741961909
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7913849236163286
recall 0.7913849236163286
f1 0.7913849236163286
auc 0.8706318263321946
ap 0.8971428567817537
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.8029050838968195
recall 0.8029050838968195
f1 0.8029050838968195
auc 0.8845202369862261
ap 0.9081673856680704
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.8086651640370649
recall 0.8086651640370649
f1 0.8086651640370649
auc 0.8851842778456087
ap 0.9080760927583742
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8717258955118222
recall 0.8717258955118222
f1 0.8717258955118222
auc 0.9411236754767659
ap 0.9537353934321313
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.865213082259663
recall 0.865213082259663
f1 0.865213082259663
auc 0.9377127163752197
ap 0.9512454651976519
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8620982585303695
recall 0.8620982585303695
f1 0.8620982585303695
auc 0.9366145117878736
ap 0.9504452447351324
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8711595639246779
recall 0.8711595639246779
f1 0.8711595639246779
auc 0.943413457599671
ap 0.9551916242103139
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8619566756335835
recall 0.8619566756335835
f1 0.8619566756335835
auc 0.9379614436275658
ap 0.9508184229557571
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8663457454339516
recall 0.8663457454339516
f1 0.8663457454339516
auc 0.9402041784534645
ap 0.9525085734524708
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8620982585303695
recall 0.8620982585303695
f1 0.8620982585303695
auc 0.937385740667882
ap 0.9504692832409245
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8669120770210959
recall 0.8669120770210959
f1 0.8669120770210959
auc 0.9403243024105636
ap 0.9533559453307769
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8622398414271556
recall 0.8622398414271556
f1 0.8622398414271556
auc 0.9398506421715493
ap 0.9518904236573951
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8742743876539714
recall 0.8742743876539714
f1 0.8742743876539714
auc 0.9435398157746521
ap 0.9563873908589655
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8669724770642202
recall 0.8669724770642202
f1 0.8669724770642202
auc 0.9391683902922083
ap 0.9521839963613192
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8733435270132518
recall 0.8733435270132518
f1 0.8733435270132518
auc 0.9470432288403209
ap 0.95803422341714
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8634046890927625
recall 0.8634046890927625
f1 0.8634046890927625
auc 0.9404165575600009
ap 0.9524917950162756
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8756371049949032
recall 0.8756371049949032
f1 0.8756371049949032
auc 0.9474657573924962
ap 0.9585302221502755
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8667176350662589
recall 0.8667176350662589
f1 0.8667176350662589
auc 0.9412227778868846
ap 0.9528573329683004
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.867737003058104
recall 0.867737003058104
f1 0.867737003058104
auc 0.9438049365051161
ap 0.9549758990114372
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.872579001019368
recall 0.872579001019368
f1 0.872579001019368
auc 0.9468157284532518
ap 0.9580450931296968
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8674821610601428
recall 0.8674821610601428
f1 0.8674821610601428
auc 0.9420106189361374
ap 0.9542856231321182
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8544852191641182
recall 0.8544852191641182
f1 0.8544852191641181
auc 0.9324503746515082
ap 0.9464543583783851
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8799694189602446
recall 0.8799694189602446
f1 0.8799694189602447
auc 0.9480112907214652
ap 0.9596438591752066
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8711734693877551
recall 0.8711734693877551
f1 0.8711734693877551
auc 0.9394474307580175
ap 0.9518891083031242
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8622448979591837
recall 0.8622448979591837
f1 0.8622448979591837
auc 0.944070341784673
ap 0.956099466905383
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8826530612244898
recall 0.8826530612244898
f1 0.8826530612244898
auc 0.9495644718346522
ap 0.9601192306991733
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.860969387755102
recall 0.860969387755102
f1 0.860969387755102
auc 0.9399338817159516
ap 0.952504473461722
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8826530612244898
recall 0.8826530612244898
f1 0.8826530612244898
auc 0.9566464819346107
ap 0.9651679986374169
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8737244897959183
recall 0.8737244897959183
f1 0.8737244897959183
auc 0.9513557176697209
ap 0.9604434737809956
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8903061224489796
recall 0.8903061224489796
f1 0.8903061224489796
auc 0.9570678558413162
ap 0.9651280707072027
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8545918367346939
recall 0.8545918367346939
f1 0.8545918367346939
auc 0.9284290725218658
ap 0.944242511652166
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8839285714285714
recall 0.8839285714285714
f1 0.8839285714285714
auc 0.9500549901082882
ap 0.9616868325659021
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8775510204081632
recall 0.8775510204081632
f1 0.8775510204081631
auc 0.9551261193252811
ap 0.963613072974476
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.960773872914448
recall 0.7663882203029874
f1 0.8526423564621564
auc 0.941112690424035
ap 0.9536022740271737
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9820866141732284
recall 0.7063570720656944
f1 0.8217079799061187
auc 0.9376807334342848
ap 0.9509736152488165
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9876212089952549
recall 0.6777573269149086
f1 0.8038623005877414
auc 0.9365113364842127
ap 0.9501356686798886
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9592304977056124
recall 0.7695030440322809
f1 0.8539555346060177
auc 0.9434232699779772
ap 0.9551896679563439
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9639458272327965
recall 0.7457171173722215
f1 0.8409036481200607
auc 0.9379566627241419
ap 0.9508037939580425
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9816082958325181
recall 0.7103213931757044
f1 0.824215541317562
auc 0.9402058121793725
ap 0.952511599770266
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9809825673534073
recall 0.7011185048846099
f1 0.8177689703575263
auc 0.9373783337755752
ap 0.9504599102276301
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9630872483221476
recall 0.7720515361744301
f1 0.8570530451866404
auc 0.9402916379152623
ap 0.953203378194756
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9574200503054258
recall 0.7544952569729577
f1 0.8439306358381503
auc 0.9398669192934791
ap 0.9518941513307896
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9897273804820229
recall 0.7093303128982019
f1 0.8263917525773196
auc 0.9435418704606098
ap 0.9563873687621185
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9812919166960818
recall 0.7084607543323139
f1 0.822850377386414
auc 0.9392006027363952
ap 0.9521833789242978
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9897345132743363
recall 0.7125382262996942
f1 0.8285671951400208
auc 0.9470327727848489
ap 0.9580159666496543
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9759403592002711
recall 0.7339449541284404
f1 0.8378181818181818
auc 0.9404227272821738
ap 0.9522581716496478
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9580117320160544
recall 0.7907747196738022
f1 0.8663967611336032
auc 0.9474877735589866
ap 0.9585437463194847
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9858130229174246
recall 0.6906218144750255
f1 0.8122283830361157
auc 0.9410349910272755
ap 0.9522821299992165
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9837954627295643
recall 0.6962283384301733
f1 0.8154006864647069
auc 0.9437403167834107
ap 0.9549229658610953
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9475733972438586
recall 0.8060652395514781
f1 0.8711098870834482
auc 0.9469445782299991
ap 0.9581144353296088
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9556111284776493
recall 0.7790519877675841
f1 0.858346202442791
auc 0.9423268659058297
ap 0.9544721332360477
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9428481212503947
recall 0.7609582059123343
f1 0.8421943308419122
auc 0.9329115776200406
ap 0.9467140819072446
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9479785969084423
recall 0.8126911314984709
f1 0.8751372118551043
auc 0.9475723961694209
ap 0.9593268595876843
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9329359165424739
recall 0.798469387755102
f1 0.8604810996563574
auc 0.9395214559037901
ap 0.9519054174368619
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9844827586206897
recall 0.7283163265306123
f1 0.8372434017595308
auc 0.9440866110474803
ap 0.9560994672117502
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9416909620991254
recall 0.8239795918367347
f1 0.8789115646258504
auc 0.9495823680237401
ap 0.9601111980559368
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9412650602409639
recall 0.7971938775510204
f1 0.8632596685082874
auc 0.9398997162640567
ap 0.9524786701335684
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9548104956268222
recall 0.8354591836734694
f1 0.8911564625850341
auc 0.956661124271137
ap 0.9651603274446385
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9417910447761194
recall 0.8048469387755102
f1 0.8679504814305363
auc 0.9514517063202832
ap 0.9605410119550603
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9514705882352941
recall 0.8252551020408163
f1 0.8838797814207651
auc 0.9564488103915034
ap 0.9638785196902031
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9797794117647058
recall 0.6798469387755102
f1 0.802710843373494
auc 0.9277555250416493
ap 0.943429817398277
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9433962264150944
recall 0.8290816326530612
f1 0.8825526137135099
auc 0.9500696324448148
ap 0.9616848396020036
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9800664451827242
recall 0.7525510204081632
f1 0.8513708513708513
auc 0.9548235110370678
ap 0.9632933106325516
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.890057361376673
recall 0.6994740796393689
f1 0.7833403449726546
auc 0.8831901796087055
ap 0.9062951771396323
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9469453376205788
recall 0.5900325569747057
f1 0.7270482950162012
auc 0.8851672809083816
ap 0.907421995989713
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.8876543209876543
recall 0.7202604557976459
f1 0.7952440204617723
auc 0.8875114784205692
ap 0.910216794880857
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9584
recall 0.6000500876533934
f1 0.7380255659941474
auc 0.884907309303929
ap 0.9087742939205248
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9222652128033767
recall 0.6566491359879789
f1 0.7671152720889408
auc 0.8823044886527882
ap 0.9061786911738197
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9237405106970324
recall 0.6704232406711745
f1 0.7769554491365549
auc 0.8938093454178421
ap 0.9148105079623537
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9460959175584621
recall 0.5977961432506887
f1 0.732658072437078
auc 0.8792865287857556
ap 0.9037266850409794
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.881894873458793
recall 0.6806912096168295
f1 0.7683392226148411
auc 0.8707032322843463
ap 0.8971995883546726
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9043850972634355
recall 0.6869521662910093
f1 0.7808141189866211
auc 0.8846002354859798
ap 0.9081692322606413
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.8904458598726115
recall 0.7002253944402704
f1 0.7839618673769803
auc 0.8852863849076229
ap 0.9081130449106707
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9122516556291391
recall 0.6904761904761905
f1 0.7860199714693296
auc 0.9019062380261431
ap 0.9192715430296493
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.943609022556391
recall 0.6290726817042607
f1 0.7548872180451128
auc 0.8784484708010629
ap 0.9045665423067792
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.8435754189944135
recall 0.7568922305764411
f1 0.7978863936591809
auc 0.8913346963900981
ap 0.9120561015288446
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9269565217391305
recall 0.6679197994987469
f1 0.7764020393299345
auc 0.8911855139100885
ap 0.9124169835525453
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9090909090909091
recall 0.7142857142857143
f1 0.8
auc 0.897343609650693
ap 0.9174121239727928
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.8686131386861314
recall 0.7456140350877193
f1 0.8024275118004045
auc 0.8896175275280934
ap 0.9120181260831994
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.8557422969187675
recall 0.7656641604010025
f1 0.8082010582010581
auc 0.8968677960565574
ap 0.9186530585334224
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9341021416803954
recall 0.7105263157894737
f1 0.8071174377224198
auc 0.898678400261305
ap 0.9214527745940668
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.8585572842998586
recall 0.7606516290726817
f1 0.8066445182724252
auc 0.890756810572798
ap 0.914116543827262
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9237147595356551
recall 0.6979949874686717
f1 0.795146324054247
auc 0.9080164383389552
ap 0.9269920836915106
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.3415977961432507
f1 0.5092402464065708
auc 0.824653323631908
ap 0.87510330193699
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.3353368394690709
f1 0.5022505626406601
auc 0.8119091016340955
ap 0.8692999891753685
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.3621337340345605
f1 0.531715388858246
auc 0.8302169668444948
ap 0.8780595769864641
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.33208114199849736
f1 0.4985899605188945
auc 0.8061482061426178
ap 0.8627802254970663
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.34635612321562737
f1 0.5145089285714286
auc 0.8148192469804878
ap 0.8674300868988203
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.3473578762834961
f1 0.5156133828996282
auc 0.8148495090550713
ap 0.8684336864535542
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.33859253693964436
f1 0.5058933582787652
auc 0.8209033665162468
ap 0.870254796760264
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.35336839469070874
f1 0.5222057735011103
auc 0.8232079254146799
ap 0.8740855555290795
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9992727272727273
recall 0.3441021788129226
f1 0.5119225037257824
auc 0.8006822169199306
ap 0.8570554528928936
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.34635612321562737
f1 0.5145089285714286
auc 0.8170082455215736
ap 0.8660063754841264
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8571428571428571
recall 0.8571428571428571
f1 0.8571428571428571
auc 0.8959373684838663
ap 0.9324649727806164
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8696741854636592
recall 0.8696741854636592
f1 0.8696741854636592
auc 0.9029936997883179
ap 0.9380449678967692
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8621553884711779
recall 0.8621553884711779
f1 0.8621553884711779
auc 0.8999064076230676
ap 0.9362863136292696
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8583959899749374
recall 0.8583959899749374
f1 0.8583959899749374
auc 0.9060315261838807
ap 0.9383506535963673
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8659147869674185
recall 0.8659147869674185
f1 0.8659147869674185
auc 0.9038338327020559
ap 0.9373884653676997
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8671679197994987
recall 0.8671679197994987
f1 0.8671679197994987
auc 0.9066573074289734
ap 0.9395102656571697
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8609022556390977
recall 0.8609022556390977
f1 0.8609022556390977
auc 0.8926922569581849
ap 0.9323945456465166
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8458646616541353
recall 0.8458646616541353
f1 0.8458646616541353
auc 0.8917971620781274
ap 0.9301941804537263
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8533834586466166
recall 0.8533834586466166
f1 0.8533834586466166
auc 0.8821568331857211
ap 0.9266274845338864
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8546365914786967
recall 0.8546365914786967
f1 0.8546365914786967
auc 0.8902150426190789
ap 0.9300788136288383
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6632809238903576
recall 0.6632809238903576
f1 0.6632809238903576
auc 0.7545130852013561
ap 0.8017352005882088
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6759426742729929
recall 0.6759426742729929
f1 0.6759426742729929
auc 0.767765750309532
ap 0.8130725805114514
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6790037567830806
recall 0.6790037567830806
f1 0.6790037567830806
auc 0.7727047403606169
ap 0.8168297727630134
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6603589814943648
recall 0.6603589814943648
f1 0.6603589814943648
auc 0.7521117711549166
ap 0.7991133061103758
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6628635035480729
recall 0.6628635035480729
f1 0.6628635035480729
auc 0.7564201972591352
ap 0.804596084893038
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6735772923333797
recall 0.6735772923333797
f1 0.6735772923333797
auc 0.7692997376394763
ap 0.815757242950711
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6636983442326423
recall 0.6636983442326423
f1 0.6636983442326423
auc 0.754277571149879
ap 0.8003666520935826
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6611938221789342
recall 0.6611938221789342
f1 0.6611938221789342
auc 0.7531967426693323
ap 0.8003250751108705
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6607764018366495
recall 0.6607764018366495
f1 0.6607764018366495
auc 0.7524675299884503
ap 0.7983153924773827
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6778906358703214
recall 0.6778906358703214
f1 0.6778906358703214
auc 0.7714269144915948
ap 0.8163133041058956
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.39348370927318294
f1 0.564748201438849
auc 0.8962624292560977
ap 0.9325464678699134
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.39473684210526316
f1 0.5660377358490566
auc 0.9031947035508571
ap 0.9380701091197325
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.38721804511278196
f1 0.5582655826558266
auc 0.8998027650580085
ap 0.9362579785546193
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.38345864661654133
f1 0.5543478260869565
auc 0.906082562295463
ap 0.9383608013494481
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.3684210526315789
f1 0.5384615384615384
auc 0.9038071368898437
ap 0.9373722561924949
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.39223057644110276
f1 0.5634563456345635
auc 0.9067405355493997
ap 0.9395254350988794
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9967845659163987
recall 0.38847117794486213
f1 0.5590622182146077
auc 0.8931884849969534
ap 0.932487774673208
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.41854636591478694
f1 0.5901060070671378
auc 0.8918474130187625
ap 0.9301880240946262
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.41729323308270677
f1 0.5888594164456233
auc 0.8825211525053235
ap 0.9267133549394828
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.35964912280701755
f1 0.5290322580645161
auc 0.8903610844152989
ap 0.9301227059929954
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8421052631578947
recall 0.8421052631578947
f1 0.8421052631578947
auc 0.8801915503043323
ap 0.9162924877579495
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8571428571428571
recall 0.8571428571428571
f1 0.8571428571428571
auc 0.8900540825748582
ap 0.925318054670899
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8446115288220551
recall 0.8446115288220551
f1 0.8446115288220551
auc 0.8843568821803883
ap 0.9211004750263917
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8421052631578947
recall 0.8421052631578947
f1 0.8421052631578947
auc 0.8906264721955265
ap 0.9236688344719494
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8583959899749374
recall 0.8583959899749374
f1 0.8583959899749374
auc 0.8897070370160991
ap 0.9224619122134529
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8408521303258145
recall 0.8408521303258145
f1 0.8408521303258145
auc 0.8921536296882557
ap 0.9257689086328299
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8358395989974937
recall 0.8358395989974937
f1 0.8358395989974937
auc 0.8806744304369947
ap 0.9216993119875606
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8333333333333334
recall 0.8333333333333334
f1 0.8333333333333334
auc 0.8783330506717923
ap 0.9180950199806994
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8395989974937343
recall 0.8395989974937343
f1 0.8395989974937343
auc 0.870553576924768
ap 0.914206764933441
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8333333333333334
recall 0.8333333333333334
f1 0.8333333333333334
auc 0.8728250764756501
ap 0.9131707968963373
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.34210526315789475
f1 0.5098039215686275
auc 0.8802999038950761
ap 0.9162927210658931
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.3483709273182957
f1 0.516728624535316
auc 0.8904058391593017
ap 0.9253180926066854
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.34210526315789475
f1 0.5098039215686275
auc 0.8845924334646138
ap 0.9210929991202217
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.34711779448621555
f1 0.5153488372093024
auc 0.890732470273428
ap 0.923747994459151
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.32205513784461154
f1 0.48720379146919435
auc 0.8897431548796804
ap 0.9224786866914615
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.3508771929824561
f1 0.5194805194805194
auc 0.8922133026802596
ap 0.925742272323586
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.3333333333333333
f1 0.5
auc 0.8809845729612251
ap 0.9216994351594665
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.37593984962406013
f1 0.5464480874316939
auc 0.8784806628099069
ap 0.9181228235931308
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.3583959899749373
f1 0.5276752767527675
auc 0.8708134685083635
ap 0.9142506975385284
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 1.0
recall 0.3107769423558897
f1 0.47418738049713194
auc 0.8729192969893405
ap 0.9131907383992155
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7791134485349361
recall 0.7791134485349361
f1 0.7791134485349361
auc 0.8293415932176326
ap 0.8823178233390678
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.762083646381167
recall 0.762083646381167
f1 0.762083646381167
auc 0.8173049392911425
ap 0.8754684452019923
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7803656398697721
recall 0.7803656398697721
f1 0.7803656398697721
auc 0.835044002938024
ap 0.8858998825141231
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7585775106436263
recall 0.7585775106436263
f1 0.7585775106436263
auc 0.8126613258652179
ap 0.8704899573151661
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7650889055847734
recall 0.7650889055847734
f1 0.7650889055847735
auc 0.8212875537449742
ap 0.8758454546332599
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7648384673178061
recall 0.7648384673178061
f1 0.7648384673178061
auc 0.819541165484376
ap 0.874700208420488
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7623340846481342
recall 0.7623340846481342
f1 0.7623340846481342
auc 0.8213961836168466
ap 0.8756116949766481
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7808665164037065
recall 0.7808665164037065
f1 0.7808665164037064
auc 0.8316056354317527
ap 0.8840771735071792
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.751565239168545
recall 0.751565239168545
f1 0.751565239168545
auc 0.809010904319223
ap 0.8668647498473133
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7670924117205109
recall 0.7670924117205109
f1 0.7670924117205109
auc 0.8243156427830848
ap 0.8746846482334596
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 1.0
recall 0.3404758591902045
f1 0.5079925264687565
auc 0.7585738972720039
ap 0.8015139061341321
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 1.0
recall 0.35327674968693473
f1 0.5221056960723833
auc 0.7696678771746887
ap 0.8124686605239677
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 1.0
recall 0.3457631835258105
f1 0.5138544251447478
auc 0.7740025747600299
ap 0.8161104642896831
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 1.0
recall 0.3349102546264088
f1 0.501771940796331
auc 0.75520999577004
ap 0.7990834754332263
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 1.0
recall 0.3433978015861973
f1 0.5112377006732263
auc 0.7595827066591273
ap 0.8041667660822425
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 1.0
recall 0.34256296090162797
f1 0.5103119494248108
auc 0.7722853356212691
ap 0.8153595850585809
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 1.0
recall 0.32934465006261304
f1 0.4954992673225874
auc 0.7572645243296662
ap 0.7996642706257062
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 1.0
recall 0.3300403506330875
f1 0.49628622240820164
auc 0.7558838195728885
ap 0.799842454531756
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 1.0
recall 0.3243356059551969
f1 0.4898087833578483
auc 0.7544199346992038
ap 0.7980243680531794
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 1.0
recall 0.34798942535132876
f1 0.5163088356729976
auc 0.7751814614954661
ap 0.8158932820043481
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.3521162033558728
f1 0.5208371920726061
auc 0.8306157990357406
ap 0.882434136613959
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.3476083145504633
f1 0.5158892399182308
auc 0.8173804847187813
ap 0.8753943252933105
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.373153017781117
f1 0.5434980849899691
auc 0.8371112319085322
ap 0.8858134898388023
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.33984472827448037
f1 0.5072897196261683
auc 0.8132951673693426
ap 0.8705536581723797
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.35236664162284
f1 0.5211111111111112
auc 0.8227765105338047
ap 0.8760033062171846
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9985994397759104
recall 0.35712496869521665
f1 0.5261021951669433
auc 0.8223687408386664
ap 0.8758402475923148
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.3518657650889056
f1 0.5205631715450166
auc 0.8260676444233207
ap 0.8762500954655658
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.3626346105684949
f1 0.5322551001654109
auc 0.8328948938879955
ap 0.8843211151111838
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.3473578762834961
f1 0.5156133828996282
auc 0.8096361219160829
ap 0.8669745755318179
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 1.0
recall 0.35587277736038064
f1 0.5249353527890653
auc 0.8246567104754883
ap 0.8747372808958008
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7688454795892813
recall 0.7688454795892813
f1 0.7688454795892813
auc 0.8230401198591399
ap 0.875309467514811
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.754320060105184
recall 0.754320060105184
f1 0.754320060105184
auc 0.8116768833312041
ap 0.8694072564741163
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7716003005259203
recall 0.7716003005259203
f1 0.7716003005259203
auc 0.8280816560460897
ap 0.878349187694016
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7460555972952667
recall 0.7460555972952667
f1 0.7460555972952666
auc 0.8055014130977645
ap 0.862807730323737
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7553218131730528
recall 0.7553218131730528
f1 0.7553218131730528
auc 0.8137382166851093
ap 0.8675335290869329
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7528174305033809
recall 0.7528174305033809
f1 0.752817430503381
auc 0.8129492702888709
ap 0.867540645648536
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7575757575757576
recall 0.7575757575757576
f1 0.7575757575757576
auc 0.8163924671832106
ap 0.8702584001057583
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7693463561232157
recall 0.7693463561232157
f1 0.7693463561232157
auc 0.8226512600406586
ap 0.8741031650440029
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7380415727523165
recall 0.7380415727523165
f1 0.7380415727523165
auc 0.8001028785097186
ap 0.8570342931129213
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.75557225144002
recall 0.75557225144002
f1 0.75557225144002
auc 0.8165599277824598
ap 0.8660047583089514
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.999194847020934
recall 0.34534576318352583
f1 0.5132871471409368
auc 0.7535301504159423
ap 0.7988326818857178
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9988425925925926
recall 0.3602337553916794
f1 0.5295019940689232
auc 0.7676597738263603
ap 0.80864290460821
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9984375
recall 0.35564213162654795
f1 0.5244690674053555
auc 0.7730809530038826
ap 0.8138733555134129
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9995923359152059
recall 0.341171559760679
f1 0.5087136929460581
auc 0.7527635729903541
ap 0.7966643488951861
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9984139571768438
recall 0.350354807290942
f1 0.518693995262128
auc 0.7566404750131595
ap 0.8012394728406432
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.999198717948718
recall 0.34701544455266453
f1 0.5151296085923784
auc 0.7702284161051804
ap 0.8133075306340289
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9987505206164098
recall 0.3336579935995547
f1 0.5002085940759282
auc 0.753136465398533
ap 0.795097618038537
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 1.0
recall 0.33769305690830664
f1 0.5048887039733722
auc 0.7535705546761505
ap 0.7959425332459674
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9991670137442732
recall 0.33379713371364966
f1 0.5004171881518565
auc 0.7522346682530486
ap 0.7955166047827051
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 1.0
recall 0.34896340614999305
f1 0.5173800928313563
auc 0.7724654220747698
ap 0.8121557296808836
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6610546820648393
recall 0.6610546820648393
f1 0.6610546820648393
auc 0.7526388173349726
ap 0.7989493789529653
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6755252539307082
recall 0.6755252539307082
f1 0.6755252539307082
auc 0.765449087737822
ap 0.8098440284354064
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6778906358703214
recall 0.6778906358703214
f1 0.6778906358703214
auc 0.7710984725776363
ap 0.8145415003791912
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6621678029775985
recall 0.6621678029775985
f1 0.6621678029775985
auc 0.7505746184696566
ap 0.7967540614915664
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.662724363433978
recall 0.662724363433978
f1 0.662724363433978
auc 0.7547779392894143
ap 0.8021427124956955
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.675803534158898
recall 0.675803534158898
f1 0.675803534158898
auc 0.7677942965872881
ap 0.8136307094801142
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6656463058299708
recall 0.6656463058299708
f1 0.6656463058299708
auc 0.7514074166772486
ap 0.7961116165093107
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6620286628635036
recall 0.6620286628635036
f1 0.6620286628635036
auc 0.7511413429109952
ap 0.7970996471198268
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.660080701266175
recall 0.660080701266175
f1 0.660080701266175
auc 0.7506263192731477
ap 0.7956584604805321
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.6783080562126061
recall 0.6783080562126061
f1 0.6783080562126061
auc 0.769922296238189
ap 0.8142272559430405
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.72782874617737
recall 0.72782874617737
f1 0.72782874617737
auc 0.8166045213282749
ap 0.8407414406399594
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.740316004077472
recall 0.740316004077472
f1 0.740316004077472
auc 0.8257779240326655
ap 0.846051911627818
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7398063200815495
recall 0.7398063200815495
f1 0.7398063200815495
auc 0.825070321843882
ap 0.8453877602705724
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7423547400611621
recall 0.7423547400611621
f1 0.7423547400611621
auc 0.825898558337256
ap 0.8458550858233597
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7443934760448522
recall 0.7443934760448522
f1 0.7443934760448522
auc 0.8287594260365913
ap 0.8481921774571739
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7482161060142711
recall 0.7482161060142711
f1 0.7482161060142711
auc 0.8311523365452258
ap 0.8506718473215003
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7408256880733946
recall 0.7408256880733946
f1 0.7408256880733946
auc 0.8287906967863411
ap 0.8485561967930244
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7454128440366973
recall 0.7454128440366973
f1 0.7454128440366974
auc 0.823109194470682
ap 0.8426210662992452
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.735474006116208
recall 0.735474006116208
f1 0.7354740061162081
auc 0.8220897615343931
ap 0.8461567797306808
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.740316004077472
recall 0.740316004077472
f1 0.740316004077472
auc 0.8276151698790788
ap 0.8500036592548246
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7273190621814475
recall 0.7273190621814475
f1 0.7273190621814474
auc 0.8174123003218128
ap 0.8420506593320687
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7405708460754332
recall 0.7405708460754332
f1 0.7405708460754332
auc 0.8265818388317897
ap 0.847315869167957
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7385321100917431
recall 0.7385321100917431
f1 0.7385321100917431
auc 0.8253690013414925
ap 0.8458304211082062
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7423547400611621
recall 0.7423547400611621
f1 0.7423547400611621
auc 0.8264374673329447
ap 0.8466756508325399
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7410805300713558
recall 0.7410805300713558
f1 0.7410805300713558
auc 0.8293595126984572
ap 0.849127409935633
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7484709480122325
recall 0.7484709480122325
f1 0.7484709480122325
auc 0.8318938072615162
ap 0.8518228701296163
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7423547400611621
recall 0.7423547400611621
f1 0.7423547400611621
auc 0.8293586359484643
ap 0.8494705994361336
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7446483180428135
recall 0.7446483180428135
f1 0.7446483180428135
auc 0.8235653642448104
ap 0.8433374445928512
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.7341997961264016
recall 0.7341997961264016
f1 0.7341997961264016
auc 0.8226239295856752
ap 0.8469631755805602
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.740316004077472
recall 0.740316004077472
f1 0.740316004077472
auc 0.8282370129296593
ap 0.8509318518154634
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.100     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.7908442982456141
recall 0.7908442982456141
f1 0.7908442982456141
auc 0.8821034176381193
ap 0.8639878985915814
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.7944078947368421
recall 0.7944078947368421
f1 0.7944078947368421
auc 0.8853370838863881
ap 0.8668468020101786
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.7943530701754385
recall 0.7943530701754385
f1 0.7943530701754385
auc 0.8850822158019778
ap 0.8668834334331995
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.7910087719298246
recall 0.7910087719298246
f1 0.7910087719298246
auc 0.8838773513845608
ap 0.8662997707550756
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.796546052631579
recall 0.796546052631579
f1 0.7965460526315788
auc 0.8861814993555709
ap 0.8686266384764247
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.7909539473684211
recall 0.7909539473684211
f1 0.7909539473684211
auc 0.8807955813327177
ap 0.8624523970390423
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.7909539473684211
recall 0.7909539473684211
f1 0.7909539473684211
auc 0.8829823103623231
ap 0.86576578521368
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.7922149122807017
recall 0.7922149122807017
f1 0.7922149122807017
auc 0.8811942511758425
ap 0.862141422568064
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.7934210526315789
recall 0.7934210526315789
f1 0.7934210526315789
auc 0.8834240718899085
ap 0.8645149982810167
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.7932565789473685
recall 0.7932565789473685
f1 0.7932565789473685
auc 0.884816059689039
ap 0.8662274252332602
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8022959183673469
recall 0.8022959183673469
f1 0.8022959183673469
auc 0.8648186953352769
ap 0.8959099681793657
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8112244897959183
recall 0.8112244897959183
f1 0.8112244897959183
auc 0.8679765592461474
ap 0.9001425598819228
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.7755102040816326
recall 0.7755102040816326
f1 0.7755102040816326
auc 0.8482134722511453
ap 0.882604475162158
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.7971938775510204
recall 0.7971938775510204
f1 0.7971938775510206
auc 0.8636481218763014
ap 0.8932813171684861
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8035714285714286
recall 0.8035714285714286
f1 0.8035714285714286
auc 0.8649130570595585
ap 0.8988174646775825
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.7997448979591837
recall 0.7997448979591837
f1 0.7997448979591836
auc 0.8672721001665973
ap 0.8993899184311706
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.7946428571428571
recall 0.7946428571428571
f1 0.7946428571428572
auc 0.8588202181382757
ap 0.8941928816588007
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.7933673469387755
recall 0.7933673469387755
f1 0.7933673469387755
auc 0.8582727574448147
ap 0.891742702405048
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.798469387755102
recall 0.798469387755102
f1 0.7984693877551021
auc 0.8654759735526865
ap 0.8959124309904244
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.7780612244897959
recall 0.7780612244897959
f1 0.7780612244897959
auc 0.8493702168367349
ap 0.8866949004583614
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7104629760724904
recall 0.7104629760724904
f1 0.7104629760724904
auc 0.7956677056829345
ap 0.8026483835554652
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7141441313889282
recall 0.7141441313889282
f1 0.7141441313889282
auc 0.7960927650819012
ap 0.804163278139893
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.6981452640521025
recall 0.6981452640521025
f1 0.6981452640521025
auc 0.7815624068563248
ap 0.7883501842659402
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7159847090471471
recall 0.7159847090471471
f1 0.7159847090471471
auc 0.8003475185577732
ap 0.8096265510512479
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7118788050403512
recall 0.7118788050403512
f1 0.7118788050403512
auc 0.7931127688428784
ap 0.8007468735522649
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7134362169049979
recall 0.7134362169049979
f1 0.7134362169049979
auc 0.798829556663518
ap 0.8026832067796916
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7057907404785502
recall 0.7057907404785502
f1 0.7057907404785502
auc 0.7935059856209268
ap 0.7985061108205804
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7089055642078437
recall 0.7089055642078437
f1 0.7089055642078437
auc 0.794765147290213
ap 0.7990533532397688
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.6978620982585304
recall 0.6978620982585304
f1 0.6978620982585304
auc 0.7840405786244224
ap 0.7905886554201428
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7090471471046298
recall 0.7090471471046298
f1 0.7090471471046299
auc 0.7939087842515398
ap 0.7983998814725197
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9977155910908052
recall 0.44520897043832824
f1 0.6156828193832599
auc 0.8176598035976105
ap 0.839784926575589
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9994356659142212
recall 0.45132517838939856
f1 0.6218398876404494
auc 0.8283641092064206
ap 0.844904752758497
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 1.0
recall 0.44164118246687056
f1 0.6126922397030228
auc 0.8311639940729104
ap 0.8449481036370665
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9994301994301994
recall 0.44699286442405706
f1 0.6177143863356225
auc 0.8277238219337651
ap 0.8454491547494306
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 1.0
recall 0.4492864424057085
f1 0.6200105503780553
auc 0.8296981330290816
ap 0.8456172416252516
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9994356659142212
recall 0.45132517838939856
f1 0.6218398876404494
auc 0.8335459939149654
ap 0.8494593061703632
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9988662131519275
recall 0.4490316004077472
f1 0.6195499296765119
auc 0.831792786178991
ap 0.8482429544154859
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 1.0
recall 0.44367991845056065
f1 0.6146513680494263
auc 0.8282915337903343
ap 0.8416852240998066
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 1.0
recall 0.44062181447502546
f1 0.6117105961436405
auc 0.8259509360312814
ap 0.8448981908004369
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 1.0
recall 0.45769622833843016
f1 0.6279720279720279
auc 0.8308727507141289
ap 0.8490612607414727
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9993652808632181
recall 0.4458445419793289
f1 0.6166046602702173
auc 0.7959756780508764
ap 0.8025229349201071
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.4408891405918165
f1 0.6119681635059447
auc 0.7978460135754806
ap 0.8035865000304072
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.43196941809429423
f1 0.6033221277437215
auc 0.781890615375237
ap 0.7876132170401151
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.452357355231488
f1 0.622928446090856
auc 0.8009639544137152
ap 0.8095057498407678
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9996779388083736
recall 0.4394733116239558
f1 0.6105428796223447
auc 0.7940822699063939
ap 0.8006916890064673
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9996785599485696
recall 0.44032280900467224
f1 0.6113622960487517
auc 0.7994026236114609
ap 0.803241180792514
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.435650573410732
f1 0.6069033530571992
auc 0.7938911941351686
ap 0.7985770346058639
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9996746909564086
recall 0.43508424182358774
f1 0.6062937752786821
auc 0.7951490929243051
ap 0.7989877414792074
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.4401812261078862
f1 0.6112858828155722
auc 0.7845930085070614
ap 0.7905250319619408
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.4466940393600453
f1 0.6175376786063809
auc 0.7939087441601064
ap 0.7983997428752359
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.48214285714285715
f1 0.6506024096385542
auc 0.8715899625156185
ap 0.8950141543230759
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.45663265306122447
f1 0.6269702276707529
auc 0.8739929326322365
ap 0.9001414813795424
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9943342776203966
recall 0.4477040816326531
f1 0.6174142480211082
auc 0.8542404206580592
ap 0.8817346106108622
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.43494897959183676
f1 0.6062222222222222
auc 0.8664472485422741
ap 0.8919207012848083
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.45408163265306123
f1 0.624561403508772
auc 0.8703835966784673
ap 0.8982396778015707
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.45153061224489793
f1 0.6221441124780316
auc 0.8712889811536859
ap 0.899210936788828
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.4477040816326531
f1 0.6185022026431719
auc 0.8674201504581425
ap 0.8957696587034298
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9970059880239521
recall 0.4247448979591837
f1 0.5957066189624329
auc 0.8641817536963766
ap 0.8925188111380371
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.45535714285714285
f1 0.6257668711656442
auc 0.8699955747605166
ap 0.8955946963696944
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.4502551020408163
f1 0.6209322779243623
auc 0.8577789853186173
ap 0.8858697170405768
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8048469387755102
recall 0.8048469387755102
f1 0.8048469387755102
auc 0.8674836005830903
ap 0.8996097503368433
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8125
recall 0.8125
f1 0.8125
auc 0.8700281132861307
ap 0.9029249519447019
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.7767857142857143
recall 0.7767857142857143
f1 0.7767857142857143
auc 0.8500226142753019
ap 0.8853571317096638
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.7997448979591837
recall 0.7997448979591837
f1 0.7997448979591836
auc 0.8659502225635151
ap 0.8966019875458151
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8048469387755102
recall 0.8048469387755102
f1 0.8048469387755102
auc 0.8663187213660974
ap 0.9004500785845914
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8048469387755102
recall 0.8048469387755102
f1 0.8048469387755102
auc 0.8687184376301542
ap 0.9010168506306334
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.798469387755102
recall 0.798469387755102
f1 0.7984693877551021
auc 0.8604569059766763
ap 0.8960712043216759
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.7971938775510204
recall 0.7971938775510204
f1 0.7971938775510206
auc 0.8614924445543523
ap 0.8961964547229103
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.798469387755102
recall 0.798469387755102
f1 0.7984693877551021
auc 0.8663463791128697
ap 0.8968594675015401
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.7793367346938775
recall 0.7793367346938775
f1 0.7793367346938775
auc 0.850349626457726
ap 0.8878405881574895
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 1.0
recall 0.4288990825688073
f1 0.6003210272873194
auc 0.8207868785725937
ap 0.8416318658918662
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 1.0
recall 0.43730886850152906
f1 0.6085106382978723
auc 0.8293894196148848
ap 0.846461498642848
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9994089834515366
recall 0.43093781855249746
f1 0.6022079772079773
auc 0.8335814211091264
ap 0.8459027190317446
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 1.0
recall 0.43297655453618755
f1 0.6043037524453139
auc 0.8281775562912461
ap 0.8464532011761493
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 1.0
recall 0.436289500509684
f1 0.6075230660042583
auc 0.8312562151832835
ap 0.8467910830759564
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9994212962962963
recall 0.44011213047910297
f1 0.6111111111111112
auc 0.832251099119769
ap 0.8511373395112467
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 1.0
recall 0.4339959225280326
f1 0.6052958947929625
auc 0.8324053746463125
ap 0.8488887012078264
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 1.0
recall 0.4271151885830785
f1 0.5985714285714285
auc 0.8274818389357009
ap 0.8424319916254864
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 1.0
recall 0.4248216106014271
f1 0.5963155070649258
auc 0.8262533498344177
ap 0.8463584652924243
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 1.0
recall 0.441131498470948
f1 0.6122015915119363
auc 0.8302805223299781
ap 0.8501486241446784
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7104629760724904
recall 0.7104629760724904
f1 0.7104629760724904
auc 0.7959293924911028
ap 0.8031371794928284
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7141441313889282
recall 0.7141441313889282
f1 0.7141441313889282
auc 0.7961957599741122
ap 0.804341730635461
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.6981452640521025
recall 0.6981452640521025
f1 0.6981452640521025
auc 0.781682741293449
ap 0.7885678017704135
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.715843126150361
recall 0.715843126150361
f1 0.715843126150361
auc 0.8004167263945499
ap 0.8097426341528738
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7093303128982019
recall 0.7093303128982019
f1 0.709330312898202
auc 0.7932967283846886
ap 0.8014472853164114
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7138609655953561
recall 0.7138609655953561
f1 0.7138609655953561
auc 0.7989382846306946
ap 0.8028854756630541
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7028174996460428
recall 0.7028174996460428
f1 0.7028174996460428
auc 0.7935916008767917
ap 0.7986645303555098
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7089055642078437
recall 0.7089055642078437
f1 0.7089055642078437
auc 0.7949541583526223
ap 0.799402168686753
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.6967294350842418
recall 0.6967294350842418
f1 0.6967294350842418
auc 0.784093679727861
ap 0.7906778326985378
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.7081976497239133
recall 0.7081976497239133
f1 0.7081976497239133
auc 0.7940166302071832
ap 0.7985909828827679
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.4306951720232196
f1 0.6020781791192479
auc 0.7976025082323249
ap 0.8030924705512483
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.42559818773892116
f1 0.597080146985798
auc 0.7979905031011828
ap 0.8034543740031957
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.4154042191703242
f1 0.5869760928278484
auc 0.7834471853197841
ap 0.7880993084740839
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.43338524706215487
f1 0.6047016989332279
auc 0.8020678620074514
ap 0.8095614205485533
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.4263061022228515
f1 0.5977764542386341
auc 0.7959646228381372
ap 0.8013239846282573
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.42050120345462266
f1 0.592046247383634
auc 0.7996255219578876
ap 0.8034630127182032
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.42602293642927935
f1 0.5974980142970612
auc 0.7943462619719786
ap 0.7987639146371227
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.42234178111284154
f1 0.5938682062512443
auc 0.7950608316338408
ap 0.7991243243481689
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.41427155599603566
f1 0.5858444288717589
auc 0.7854148528216423
ap 0.7906285202620916
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 1.0
recall 0.43225258388786636
f1 0.6035982601818901
auc 0.7939638598580694
ap 0.7984602022751452
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.4923469387755102
f1 0.6598290598290598
auc 0.86845894288838
ap 0.8996087620837099
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.4642857142857143
f1 0.6341463414634146
auc 0.875100055966264
ap 0.9036381228171639
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.4630102040816326
f1 0.6329555361813426
auc 0.8546325098917117
ap 0.8857858849558544
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.4362244897959184
f1 0.6074600355239786
auc 0.8718006494689714
ap 0.8972118486203153
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.4502551020408163
f1 0.6209322779243623
auc 0.8701045788213244
ap 0.9005733208342264
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.44260204081632654
f1 0.6136162687886826
auc 0.8711165269679301
ap 0.9014824520539269
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.4604591836734694
f1 0.6305676855895196
auc 0.8645331697730112
ap 0.8979746920998634
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.44387755102040816
f1 0.6148409893992933
auc 0.864707250885048
ap 0.8976748347323109
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.45535714285714285
f1 0.6257668711656442
auc 0.8678805705955851
ap 0.8968606583423899
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 1.0
recall 0.44642857142857145
f1 0.617283950617284
auc 0.8552881611828405
ap 0.8879840863446677
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
Traceback (most recent call last):
  File "/home/fengxy/code/src/main.py", line 72, in <module>
    main(args)
  File "/home/fengxy/code/src/main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 77, in train_test_scores
    self.get_test_edge()
  File "/home/fengxy/code/src/predictor.py", line 33, in get_test_edge
    non_edges = np.array(list(nx.non_edges(self.graph)))
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 3.76 GiB for an array with shape (252268392, 2) and data type int64
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.500     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7894783009144536
recall 0.7894783009144536
f1 0.7894783009144536
auc 0.8803871723436514
ap 0.8629352874072603
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.786660380254819
recall 0.786660380254819
f1 0.786660380254819
auc 0.8782417186547865
ap 0.861113113186274
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7876252713756278
recall 0.7876252713756278
f1 0.7876252713756277
auc 0.8797386868805874
ap 0.8630693234172104
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7872634372053244
recall 0.7872634372053244
f1 0.7872634372053244
auc 0.8777386058024644
ap 0.8602390634604056
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.788250257669788
recall 0.788250257669788
f1 0.788250257669788
auc 0.8793748934192951
ap 0.8615545964783221
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7897304883664832
recall 0.7897304883664832
f1 0.7897304883664832
auc 0.8809408669912806
ap 0.8630753990082287
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7878664941558299
recall 0.7878664941558299
f1 0.7878664941558299
auc 0.8788076680982908
ap 0.8610144212423769
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7883708690598891
recall 0.7883708690598891
f1 0.7883708690598891
auc 0.8794555633214881
ap 0.8620886483990462
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7868906383631938
recall 0.7868906383631938
f1 0.7868906383631937
auc 0.878565014952712
ap 0.8614971892170898
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7878774588276573
recall 0.7878774588276573
f1 0.7878774588276573
auc 0.8788131015030247
ap 0.8618059075142668
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7854754116335593
recall 0.7854754116335593
f1 0.7854754116335593
auc 0.8754308649024467
ap 0.8586292453125522
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7854936861533963
recall 0.7854936861533963
f1 0.7854936861533963
auc 0.8760991626557526
ap 0.8595432859969753
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7859688236691581
recall 0.7859688236691581
f1 0.7859688236691581
auc 0.8758161261367328
ap 0.8592708513854077
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7858896340831978
recall 0.7858896340831978
f1 0.7858896340831978
auc 0.876227357138359
ap 0.8597208043557145
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7858104444972375
recall 0.7858104444972375
f1 0.7858104444972376
auc 0.8758603335957553
ap 0.8594618307673619
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7866267063832898
recall 0.7866267063832898
f1 0.7866267063832898
auc 0.8767837976381009
ap 0.8601056251664029
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7849698165847359
recall 0.7849698165847359
f1 0.7849698165847357
auc 0.8751724713167806
ap 0.8581781161302362
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7850916467169825
recall 0.7850916467169825
f1 0.7850916467169826
auc 0.8757047372593694
ap 0.8588832350765029
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.785469320126947
recall 0.785469320126947
f1 0.785469320126947
auc 0.8754402717964043
ap 0.8589000276325875
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7850368231574716
recall 0.7850368231574716
f1 0.7850368231574716
auc 0.8757688538516877
ap 0.859340090068319
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9106239460370995
recall 0.6766917293233082
f1 0.7764198418404025
auc 0.8984750409859235
ap 0.915856747864707
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9349736379613357
recall 0.6666666666666666
f1 0.7783467446964154
auc 0.8831689185369439
ap 0.9079886661783407
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.8969594594594594
recall 0.6654135338345865
f1 0.7640287769784172
auc 0.876655925528106
ap 0.8994106702752167
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9010067114093959
recall 0.6729323308270677
f1 0.7704447632711621
auc 0.8862020339068223
ap 0.9079080383031721
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9078498293515358
recall 0.6666666666666666
f1 0.76878612716763
auc 0.8842281141450117
ap 0.9048044282350496
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9
recall 0.6428571428571429
f1 0.75
auc 0.8769103209150696
ap 0.8986647751099859
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9036544850498339
recall 0.681704260651629
f1 0.777142857142857
auc 0.8852268515901281
ap 0.9082779349949032
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9256756756756757
recall 0.6867167919799498
f1 0.7884892086330935
auc 0.8922070213126803
ap 0.9154867125711883
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9123711340206185
recall 0.6654135338345865
f1 0.7695652173913043
auc 0.8803682137675015
ap 0.9042983766904813
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  True
precision 0.9079646017699115
recall 0.6428571428571429
f1 0.752751283932502
auc 0.8886580486303478
ap 0.9092864418728508
Traceback (most recent call last):
  File "main.py", line 4, in <module>
    from param_parser import parameter_parser
  File "/home/fengxy/code/src/param_parser.py", line 13
    default=facebook',
                     ^
SyntaxError: EOL while scanning string literal
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 78, in train_test_scores
    self.get_train_edge()
  File "/home/fengxy/code/src/predictor.py", line 68, in get_train_edge
    non_edges = np.asarray(list(nx.non_edges(self.graph)))
MemoryError
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 78, in train_test_scores
    self.get_train_edge()
  File "/home/fengxy/code/src/predictor.py", line 68, in get_train_edge
    non_edges = np.asarray(list(nx.non_edges(self.graph)))
MemoryError
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 78, in train_test_scores
    self.get_train_edge()
  File "/home/fengxy/code/src/predictor.py", line 68, in get_train_edge
    non_edges = np.asarray(list(nx.non_edges(self.graph)))
MemoryError
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7892027271462363
recall 0.7892027271462363
f1 0.7892027271462363
auc 0.8734718327614431
ap 0.8996512230707211
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7943509113677473
recall 0.7943509113677473
f1 0.7943509113677473
auc 0.8727566463798044
ap 0.8988212169671115
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.792124669542229
recall 0.792124669542229
f1 0.792124669542229
auc 0.8749615922368373
ap 0.8998766429466598
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.785585084179769
recall 0.785585084179769
f1 0.785585084179769
auc 0.8706924862344312
ap 0.8962060994653296
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7978294142201197
recall 0.7978294142201197
f1 0.7978294142201198
auc 0.8792908303102577
ap 0.9030828063198755
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.793516070683178
recall 0.793516070683178
f1 0.7935160706831781
auc 0.876961283677614
ap 0.9012368169701976
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7964380130791707
recall 0.7964380130791707
f1 0.7964380130791707
auc 0.8744576715425593
ap 0.8990827250202418
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7933769305690831
recall 0.7933769305690831
f1 0.7933769305690831
auc 0.8756719676655955
ap 0.9003225243028389
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.793516070683178
recall 0.793516070683178
f1 0.7935160706831781
auc 0.8732563756402849
ap 0.8984035982245863
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  False
Y_test.shape (14374,)
Y_prob.shape (14374,)
Y_pred.shape (14374,)
precision 0.7926812299986086
recall 0.7926812299986086
f1 0.7926812299986086
auc 0.8762160893403824
ap 0.900717845718626
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7931379914850989
recall 0.7931379914850989
f1 0.7931379914850989
auc 0.8794474352154837
ap 0.9031249570493172
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.797145003756574
recall 0.797145003756574
f1 0.797145003756574
auc 0.8818963740013595
ap 0.9043966570337181
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.8056599048334585
recall 0.8056599048334585
f1 0.8056599048334586
auc 0.8913309285489526
ap 0.9124881023363569
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7938893062860005
recall 0.7938893062860005
f1 0.7938893062860005
auc 0.8763636514162746
ap 0.9016612794751648
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.795892812421738
recall 0.795892812421738
f1 0.795892812421738
auc 0.8777638289997729
ap 0.902151682449917
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.8019033308289507
recall 0.8019033308289507
f1 0.8019033308289507
auc 0.8859503944073427
ap 0.9075366805319897
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7916353618832958
recall 0.7916353618832958
f1 0.7916353618832958
auc 0.8757768180466581
ap 0.9008269815782443
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7956423741547709
recall 0.7956423741547709
f1 0.7956423741547709
auc 0.8733781488002201
ap 0.8992879819602072
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.7998998246932131
recall 0.7998998246932131
f1 0.7998998246932132
auc 0.8826798638162741
ap 0.9061769206006878
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  False
Y_test.shape (7986,)
Y_prob.shape (7986,)
Y_pred.shape (7986,)
precision 0.8014024542950163
recall 0.8014024542950163
f1 0.8014024542950164
auc 0.8821264912068446
ap 0.904991878707445
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9182502689135891
recall 0.6413724017029803
f1 0.7552344441167796
auc 0.8795724661909907
ap 0.9031415622155117
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9171094580233794
recall 0.6483846731780616
f1 0.7596830985915493
auc 0.8819690656996851
ap 0.9043096925752345
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.923050259965338
recall 0.6669171049336339
f1 0.7743530095958128
auc 0.8914997689733644
ap 0.9125114773819346
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.923352435530086
recall 0.6456298522414224
f1 0.7599115696389093
auc 0.8762894230944724
ap 0.9015258824493737
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9234119782214156
recall 0.637114951164538
f1 0.7540011855364553
auc 0.8779948869951414
ap 0.9022722918407111
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9165217391304348
recall 0.6599048334585524
f1 0.7673267326732673
auc 0.886327149395991
ap 0.9079412410476939
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9246800731261426
recall 0.6333583771600301
f1 0.7517835909631392
auc 0.8759010023112699
ap 0.900732130401833
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9167857142857143
recall 0.6428750313047834
f1 0.7557780067716767
auc 0.8735833037141318
ap 0.8993869170308266
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9299525720539948
recall 0.6383671424993739
f1 0.7570537570537571
auc 0.8826767905693215
ap 0.9061553402651756
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3993
len(negative_edge) 3993
len(positive_edge) 3993
is_supserved =  True
precision 0.9148409893992933
recall 0.6483846731780616
f1 0.758903708046314
auc 0.882185666890512
ap 0.905018982206725
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9359574468085107
recall 0.6120773619034368
f1 0.7401362833347354
auc 0.873739794124903
ap 0.899662664159504
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9300273166631645
recall 0.6158341449839989
f1 0.7410011719403984
auc 0.8731686265701397
ap 0.8988359053061888
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9335730907552359
recall 0.6140253235007652
f1 0.7408091321134799
auc 0.8751724513647995
ap 0.899816872593119
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9368582040637973
recall 0.5966328092389036
f1 0.7290037402244135
auc 0.8713705014710772
ap 0.8963245760400353
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9292763157894737
recall 0.6289133157089188
f1 0.7501452161646336
auc 0.8794201258789209
ap 0.9030264688845979
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9375938237186361
recall 0.6083205788228746
f1 0.7378902953586498
auc 0.8771855205457793
ap 0.9012763256533863
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9402293780326423
recall 0.5931543063865312
f1 0.7274123368313284
auc 0.8745705401755318
ap 0.8990579281892109
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9293602833923734
recall 0.6205649088632252
f1 0.7442015684965794
auc 0.8757368526095761
ap 0.90028157512795
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9358335139822241
recall 0.6006678725476555
f1 0.7316949152542374
auc 0.8733315697690097
ap 0.8982324567580817
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7187
len(negative_edge) 7187
len(positive_edge) 7187
is_supserved =  True
precision 0.9326599326599326
recall 0.6166689856685682
f1 0.7424407404305218
auc 0.87659319254233
ap 0.9007556484428171
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8045112781954887
recall 0.8045112781954887
f1 0.8045112781954887
auc 0.8984404934642369
ap 0.9158552341576428
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.7969924812030075
recall 0.7969924812030075
f1 0.7969924812030075
auc 0.8831304451605203
ap 0.9079880258053226
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.793233082706767
recall 0.793233082706767
f1 0.793233082706767
auc 0.8771702124986652
ap 0.8997818287900261
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8020050125313283
recall 0.8020050125313283
f1 0.8020050125313283
auc 0.8863677049767276
ap 0.9080231181655807
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8007518796992481
recall 0.8007518796992481
f1 0.8007518796992481
auc 0.8844644506001846
ap 0.9050118125166096
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.7982456140350878
recall 0.7982456140350878
f1 0.7982456140350878
auc 0.8766496441605267
ap 0.8985500329814329
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8057644110275689
recall 0.8057644110275689
f1 0.8057644110275689
auc 0.8851538306920183
ap 0.9082651440208509
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.8132832080200502
recall 0.8132832080200502
f1 0.8132832080200502
auc 0.892990621918204
ap 0.9161277466658873
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.7919799498746867
recall 0.7919799498746867
f1 0.7919799498746866
auc 0.880142084534645
ap 0.9041551144193327
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 798
len(negative_edge) 798
len(positive_edge) 798
is_supserved =  False
Y_test.shape (1596,)
Y_prob.shape (1596,)
Y_pred.shape (1596,)
precision 0.7982456140350878
recall 0.7982456140350878
f1 0.7982456140350878
auc 0.8887082995709827
ap 0.9093475394486287
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7873515956701571
recall 0.7873515956701571
f1 0.7873515956701571
auc 0.8798349247935278
ap 0.862031127868864
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7874307852561174
recall 0.7874307852561174
f1 0.7874307852561175
auc 0.8809145279840038
ap 0.8632553226487936
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7881069424900861
recall 0.7881069424900861
f1 0.7881069424900861
auc 0.8805041931217663
ap 0.8628368443863886
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7885394394595615
recall 0.7885394394595615
f1 0.7885394394595615
auc 0.8810589196930062
ap 0.8634336102083604
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7877658181197956
recall 0.7877658181197956
f1 0.7877658181197955
auc 0.880407264610509
ap 0.8629761450935429
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7893069692927152
recall 0.7893069692927152
f1 0.7893069692927152
auc 0.8811544147448852
ap 0.8634721019703403
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7866084318634528
recall 0.7866084318634528
f1 0.7866084318634529
auc 0.8793725638829163
ap 0.8613973327736903
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7871566674585625
recall 0.7871566674585625
f1 0.7871566674585625
auc 0.8799295372684267
ap 0.8621490609733129
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7879607463313901
recall 0.7879607463313901
f1 0.7879607463313901
auc 0.8803428360456889
ap 0.8626712361222886
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.7871871249916241
recall 0.7871871249916241
f1 0.7871871249916241
auc 0.8804054659865285
ap 0.8629042216595809
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.500     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7504002105216991
recall 0.7504002105216991
f1 0.7504002105216991
auc 0.8357179812222966
ap 0.8338847139406934
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7589965132343589
recall 0.7589965132343589
f1 0.7589965132343589
auc 0.8500830027412603
ap 0.8430366592347398
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7590623012653231
recall 0.7590623012653231
f1 0.7590623012653233
auc 0.8500826853498256
ap 0.8441020658285509
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7578671520361395
recall 0.7578671520361395
f1 0.7578671520361395
auc 0.8488520985855056
ap 0.8416125634963854
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7514528190171268
recall 0.7514528190171268
f1 0.7514528190171268
auc 0.8374118655261485
ap 0.8343323319149059
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.745213920747352
recall 0.745213920747352
f1 0.7452139207473522
auc 0.825445623609515
ap 0.8275203719087966
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7517050064691564
recall 0.7517050064691564
f1 0.7517050064691564
auc 0.8369421890198999
ap 0.8338652432073322
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.760268415166334
recall 0.760268415166334
f1 0.760268415166334
auc 0.8519895953307346
ap 0.8442126042873931
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7592706300300432
recall 0.7592706300300432
f1 0.7592706300300432
auc 0.8513465646121695
ap 0.8434962678518934
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.7597201815749655
recall 0.7597201815749655
f1 0.7597201815749655
auc 0.8508020064496816
ap 0.8438599520105745
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.100     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.6949561403508772
recall 0.6949561403508772
f1 0.6949561403508772
auc 0.6991718756011465
ap 0.7727032250037722
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.6833881578947368
recall 0.6833881578947368
f1 0.6833881578947368
auc 0.6818419174048744
ap 0.7644120928855449
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.684155701754386
recall 0.684155701754386
f1 0.684155701754386
auc 0.6810230942453448
ap 0.7647579800878367
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.6804824561403509
recall 0.6804824561403509
f1 0.6804824561403509
auc 0.6776661493800977
ap 0.7631566265428147
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.6825657894736842
recall 0.6825657894736842
f1 0.6825657894736842
auc 0.6796725705265082
ap 0.7643935393754062
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.6928728070175438
recall 0.6928728070175438
f1 0.6928728070175438
auc 0.6979835938101147
ap 0.7711888416023608
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.6916666666666667
recall 0.6916666666666667
f1 0.6916666666666667
auc 0.6981878288271391
ap 0.7733703208345026
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.6810855263157894
recall 0.6810855263157894
f1 0.6810855263157894
auc 0.6779400302256464
ap 0.7605746867201151
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.6848684210526316
recall 0.6848684210526316
f1 0.6848684210526316
auc 0.6817960965152738
ap 0.7634536481114906
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.6740679824561403
recall 0.6740679824561403
f1 0.6740679824561403
auc 0.6659110255078486
ap 0.7552135718038557
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.100     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.9635416666666666
recall 0.9635416666666666
f1 0.9635416666666666
auc 0.9908021338296399
ap 0.9920099786884283
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.9615679824561404
recall 0.9615679824561404
f1 0.9615679824561404
auc 0.9905832789295744
ap 0.991864666766725
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.9624451754385965
recall 0.9624451754385965
f1 0.9624451754385965
auc 0.9897113865564404
ap 0.9916691156414117
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.9635416666666666
recall 0.9635416666666666
f1 0.9635416666666666
auc 0.9899501198686135
ap 0.991703242690043
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.9622258771929825
recall 0.9622258771929825
f1 0.9622258771929825
auc 0.9902518833920051
ap 0.9920647355298782
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.9623355263157894
recall 0.9623355263157894
f1 0.9623355263157894
auc 0.9895567371090145
ap 0.991515625233107
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.9636513157894737
recall 0.9636513157894737
f1 0.9636513157894737
auc 0.9898430256184596
ap 0.991977557469528
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.9624451754385965
recall 0.9624451754385965
f1 0.9624451754385965
auc 0.9899809526729378
ap 0.9913541057983586
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.9625548245614035
recall 0.9625548245614035
f1 0.9625548245614035
auc 0.9900632045437058
ap 0.9919483726367055
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.962171052631579
recall 0.962171052631579
f1 0.962171052631579
auc 0.9906721839893045
ap 0.9924751529630852
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8662079510703364
recall 0.8662079510703364
f1 0.8662079510703364
auc 0.9387223843235541
ap 0.9517633788694204
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8634046890927625
recall 0.8634046890927625
f1 0.8634046890927625
auc 0.9397425316487263
ap 0.9522404046546138
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8623853211009175
recall 0.8623853211009175
f1 0.8623853211009176
auc 0.9393810184016185
ap 0.9517815722754772
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8651885830784913
recall 0.8651885830784913
f1 0.8651885830784913
auc 0.9403384618661812
ap 0.9528378961627021
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8656982670744139
recall 0.8656982670744139
f1 0.8656982670744139
auc 0.940475202392865
ap 0.9522382585068657
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8664627930682977
recall 0.8664627930682977
f1 0.8664627930682978
auc 0.9425841757926599
ap 0.9541110472646185
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8662079510703364
recall 0.8662079510703364
f1 0.8662079510703364
auc 0.9411851750538519
ap 0.9534501259948622
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8651885830784913
recall 0.8651885830784913
f1 0.8651885830784913
auc 0.9407065669743475
ap 0.9531852417487119
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8534658511722731
recall 0.8534658511722731
f1 0.8534658511722731
auc 0.931521052131165
ap 0.9457604973356616
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  False
Y_test.shape (7848,)
Y_prob.shape (7848,)
Y_pred.shape (7848,)
precision 0.8720693170234455
recall 0.8720693170234455
f1 0.8720693170234455
auc 0.9430378776779192
ap 0.9555255859476917
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8660714285714286
recall 0.8660714285714286
f1 0.8660714285714286
auc 0.9384907981049563
ap 0.9510286572905456
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8533163265306123
recall 0.8533163265306123
f1 0.8533163265306123
auc 0.9373169707934192
ap 0.9506606002873083
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8647959183673469
recall 0.8647959183673469
f1 0.8647959183673469
auc 0.9406684389316952
ap 0.953559351534545
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8520408163265306
recall 0.8520408163265306
f1 0.8520408163265306
auc 0.9332163031028737
ap 0.9467225370462816
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8673469387755102
recall 0.8673469387755102
f1 0.8673469387755102
auc 0.9461511804977093
ap 0.9567215863109433
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8558673469387755
recall 0.8558673469387755
f1 0.8558673469387755
auc 0.9393245978238233
ap 0.9511379269931073
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8762755102040817
recall 0.8762755102040817
f1 0.8762755102040817
auc 0.9479473071116201
ap 0.9578367340933716
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8520408163265306
recall 0.8520408163265306
f1 0.8520408163265306
auc 0.9279336734693877
ap 0.9437324388733874
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8673469387755102
recall 0.8673469387755102
f1 0.8673469387755102
auc 0.9385046269783424
ap 0.9516935656337289
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  False
Y_test.shape (1568,)
Y_prob.shape (1568,)
Y_pred.shape (1568,)
precision 0.8647959183673469
recall 0.8647959183673469
f1 0.8647959183673469
auc 0.9446690506559767
ap 0.9553300836419081
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9819537073362102
recall 0.7087639813110577
f1 0.8232875585889319
auc 0.9376885512637831
ap 0.9508324960858282
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.982185273159145
recall 0.7025343338524707
f1 0.8191498142798186
auc 0.9373976578464376
ap 0.9508014525662593
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9808459696727854
recall 0.6960215206003115
f1 0.8142443064182195
auc 0.9360778679071063
ap 0.9498559537610933
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9797152330797737
recall 0.7111708905564208
f1 0.8241181296144381
auc 0.9392322418353745
ap 0.9517450546932187
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9817452357071214
recall 0.692906696871018
f1 0.8124169986719787
auc 0.9369307429910804
ap 0.9500547632914296
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9855826992390869
recall 0.6968710179810279
f1 0.8164551712698018
auc 0.939073449690834
ap 0.9516843378418753
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9793915603532876
recall 0.7064986549624805
f1 0.8208586938641225
auc 0.9370758739797155
ap 0.9502087093054319
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9829770387965162
recall 0.7031006654396149
f1 0.8198101527032604
auc 0.9358168025161544
ap 0.9495537798375349
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.980047412090083
recall 0.7023927509556845
f1 0.8183092783505155
auc 0.938184682751176
ap 0.9505488283911872
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  True
precision 0.9851895734597157
recall 0.7063570720656944
f1 0.822792116764245
auc 0.939182829143802
ap 0.952754511691375
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9460840749742634
recall 0.9460840749742634
f1 0.9460840749742634
auc 0.972603360512154
ap 0.9808892263457624
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9456576695114003
recall 0.9456576695114003
f1 0.9456576695114003
auc 0.9722071889974211
ap 0.9806921812119571
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9455967544452769
recall 0.9455967544452769
f1 0.9455967544452769
auc 0.9724161718160604
ap 0.9808704943107073
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9455541138989907
recall 0.9455541138989907
f1 0.9455541138989907
auc 0.9722258929316833
ap 0.9807627039147259
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9449205972113083
recall 0.9449205972113083
f1 0.9449205972113083
auc 0.9718231409029497
ap 0.9803236240636753
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.944841407625348
recall 0.944841407625348
f1 0.944841407625348
auc 0.9725421535852261
ap 0.9808034667117351
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9452982706212728
recall 0.9452982706212728
f1 0.9452982706212728
auc 0.9732528898401827
ap 0.9811983937511929
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.944932780224533
recall 0.944932780224533
f1 0.944932780224533
auc 0.9725843294288506
ap 0.9808696682219603
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9451642574758015
recall 0.9451642574758015
f1 0.9451642574758015
auc 0.9726053835374079
ap 0.9807752970198798
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.944049511765745
recall 0.944049511765745
f1 0.944049511765745
auc 0.9719526929622386
ap 0.9804324741682833
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9460840749742634
recall 0.9460840749742634
f1 0.9460840749742634
auc 0.972603360512154
ap 0.9808892263457624
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9456576695114003
recall 0.9456576695114003
f1 0.9456576695114003
auc 0.9722071889974211
ap 0.9806921812119571
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9455967544452769
recall 0.9455967544452769
f1 0.9455967544452769
auc 0.9724161718160604
ap 0.9808704943107073
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9455541138989907
recall 0.9455541138989907
f1 0.9455541138989907
auc 0.9722258929316833
ap 0.9807627039147259
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9449205972113083
recall 0.9449205972113083
f1 0.9449205972113083
auc 0.9718231409029497
ap 0.9803236240636753
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.944841407625348
recall 0.944841407625348
f1 0.944841407625348
auc 0.9725421535852261
ap 0.9808034667117351
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9452982706212728
recall 0.9452982706212728
f1 0.9452982706212728
auc 0.9732528898401827
ap 0.9811983937511929
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.944932780224533
recall 0.944932780224533
f1 0.944932780224533
auc 0.9725843294288506
ap 0.9808696682219603
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9451642574758015
recall 0.9451642574758015
f1 0.9451642574758015
auc 0.9726053835374079
ap 0.9807752970198798
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.944049511765745
recall 0.944049511765745
f1 0.944049511765745
auc 0.9719526929622386
ap 0.9804324741682833
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8654962480532352
recall 0.8654962480532352
f1 0.8654962480532352
auc 0.9377060611972878
ap 0.9509722596314067
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8643635848789466
recall 0.8643635848789466
f1 0.8643635848789465
auc 0.9373984897436792
ap 0.9509388463153778
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8622398414271556
recall 0.8622398414271556
f1 0.8622398414271556
auc 0.9361592835853303
ap 0.9500419453738065
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8654962480532352
recall 0.8654962480532352
f1 0.8654962480532352
auc 0.9392150325876201
ap 0.9517492731027597
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8603992637689367
recall 0.8603992637689367
f1 0.8603992637689367
auc 0.9368995618788121
ap 0.9500552088832843
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8645051677757327
recall 0.8645051677757327
f1 0.8645051677757327
auc 0.9390713348677261
ap 0.9516833721968606
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8622398414271556
recall 0.8622398414271556
f1 0.8622398414271556
auc 0.9370812863232144
ap 0.9502203234682314
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8603992637689367
recall 0.8603992637689367
f1 0.8603992637689367
auc 0.9358590187954453
ap 0.9497146072453264
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8594081834914342
recall 0.8594081834914342
f1 0.8594081834914342
auc 0.9381613094455478
ap 0.9505473379024632
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 7063
len(negative_edge) 7063
len(positive_edge) 7063
is_supserved =  False
Y_test.shape (14126,)
Y_prob.shape (14126,)
Y_pred.shape (14126,)
precision 0.8684694888857426
recall 0.8684694888857426
f1 0.8684694888857426
auc 0.939183069692402
ap 0.9527590918236021
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9737021857923497
recall 0.7265545361875637
f1 0.8321657910099242
auc 0.9387636240454466
ap 0.951765594053404
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.976482617586912
recall 0.7301223241590215
f1 0.8355205599300087
auc 0.9397365242876634
ap 0.9522230274794811
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.972418432559704
recall 0.7367482161060143
f1 0.8383355081919674
auc 0.9393938124570715
ap 0.9515452528720013
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9822361546499477
recall 0.7186544342507645
f1 0.8300220750551877
auc 0.940382818921382
ap 0.9528535515728753
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9739993157714677
recall 0.7255351681957186
f1 0.8316050825178911
auc 0.9403379423106297
ap 0.9519054276998263
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9742547425474255
recall 0.7329255861365953
f1 0.8365328679464805
auc 0.942521017320943
ap 0.9540592073264008
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9746192893401016
recall 0.7339449541284404
f1 0.8373310074138683
auc 0.9413305207193559
ap 0.9535260248842573
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9784024682893384
recall 0.7273190621814475
f1 0.8343809384592895
auc 0.9409900169998576
ap 0.9533359454434278
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9710195530726257
recall 0.7087155963302753
f1 0.819387153800825
auc 0.9319346508223005
ap 0.9457605378297291
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 3924
len(negative_edge) 3924
len(positive_edge) 3924
is_supserved =  True
precision 0.9736227045075125
recall 0.7431192660550459
f1 0.842896372308137
auc 0.9426297343200732
ap 0.9552267020578519
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | citeseer |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.964110929853181
recall 0.7538265306122449
f1 0.8460987831066571
auc 0.9385160154623073
ap 0.9510322199069934
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9554140127388535
recall 0.7653061224489796
f1 0.8498583569405099
auc 0.9373356804456476
ap 0.9506641722984657
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9629629629629629
recall 0.7627551020408163
f1 0.8512455516014233
auc 0.9406806408788004
ap 0.9535558352978286
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9583333333333334
recall 0.7334183673469388
f1 0.8309248554913296
auc 0.933198406913786
ap 0.9466928297098568
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9660194174757282
recall 0.7614795918367347
f1 0.8516405135520686
auc 0.9461902267284464
ap 0.9567224078822504
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9635157545605307
recall 0.7410714285714286
f1 0.8377793799567412
auc 0.9394010633590171
ap 0.9512313866352501
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9702970297029703
recall 0.75
f1 0.8460431654676259
auc 0.9482271384319033
ap 0.9582140537879132
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9629629629629629
recall 0.7295918367346939
f1 0.830188679245283
auc 0.9273430992294878
ap 0.9430132465601255
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9546925566343042
recall 0.7525510204081632
f1 0.8416547788873038
auc 0.9384769692315702
ap 0.9516739888858337
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 784
len(negative_edge) 784
len(positive_edge) 784
is_supserved =  True
precision 0.9594813614262561
recall 0.7551020408163265
f1 0.8451106352605282
auc 0.9443355307684297
ap 0.9549747942326487
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
order 0
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 0.9188779540166087
recall 0.7468075508362829
f1 0.8239550531685793
auc 0.9252115212387235
ap 0.9362235983532144
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 0.9186348931131457
recall 0.7537823582483171
f1 0.8280837518703124
auc 0.9261894094026845
ap 0.9372042296093002
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 102, in train_test_scores
    model.get_scores_matrix()
  File "/home/fengxy/code/src/mine.py", line 44, in get_scores_matrix
    tmp1 = sparse.coo_matrix(tmp1.dot(A_hat))
  File "/pub/data/fxy/anaconda3/envs/graph/lib/python3.8/site-packages/scipy/sparse/_base.py", line 413, in dot
    return self @ other
  File "/pub/data/fxy/anaconda3/envs/graph/lib/python3.8/site-packages/scipy/sparse/_base.py", line 620, in __matmul__
    return self._mul_dispatch(other)
  File "/pub/data/fxy/anaconda3/envs/graph/lib/python3.8/site-packages/scipy/sparse/_base.py", line 534, in _mul_dispatch
    return self._mul_sparse_matrix(other)
  File "/pub/data/fxy/anaconda3/envs/graph/lib/python3.8/site-packages/scipy/sparse/_base.py", line 596, in _mul_sparse_matrix
    return self.tocsr()._mul_sparse_matrix(other)
  File "/pub/data/fxy/anaconda3/envs/graph/lib/python3.8/site-packages/scipy/sparse/_compressed.py", line 529, in _mul_sparse_matrix
    indices = np.empty(nnz, dtype=idx_dtype)
numpy.core._exceptions.MemoryError: Unable to allocate 1.71 GiB for an array with shape (458006842,) and data type int32
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 77, in train_test_scores
    self.get_test_edge()
  File "/home/fengxy/code/src/predictor.py", line 33, in get_test_edge
    non_edges = np.array(list(nx.non_edges(self.graph)))
numpy.core._exceptions.MemoryError: Unable to allocate 2.90 GiB for an array with shape (194325862, 2) and data type int64
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 102, in train_test_scores
    model.get_scores_matrix()
  File "/home/fengxy/code/src/mine.py", line 30, in get_scores_matrix
    AXA = normalize_by_row(AXA)
  File "/home/fengxy/code/src/utils.py", line 353, in normalize_by_row
    X = sparse.coo_matrix(X / row_sum)
  File "/pub/data/fxy/anaconda3/envs/graph/lib/python3.8/site-packages/scipy/sparse/_coo.py", line 196, in __init__
    self._check()
  File "/pub/data/fxy/anaconda3/envs/graph/lib/python3.8/site-packages/scipy/sparse/_coo.py", line 277, in _check
    self.row = np.asarray(self.row, dtype=idx_dtype)
numpy.core._exceptions.MemoryError: Unable to allocate 602. MiB for an array with shape (157767734,) and data type int32
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8714209343366118
recall 0.8714209343366118
f1 0.8714209343366118
auc 0.9405310543588623
ap 0.9406377904381681
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8697366681420762
recall 0.8697366681420762
f1 0.8697366681420762
auc 0.9392234228760762
ap 0.9390423202381866
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.869771158234797
recall 0.869771158234797
f1 0.869771158234797
auc 0.9394250067318618
ap 0.9393322335844428
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8693112903318522
recall 0.8693112903318522
f1 0.8693112903318522
auc 0.9387983521061821
ap 0.9385953282847614
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8695987077711927
recall 0.8695987077711927
f1 0.8695987077711927
auc 0.9391976120422488
ap 0.9392130572080857
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.870047078976564
recall 0.870047078976564
f1 0.870047078976564
auc 0.9397356921249055
ap 0.9397201483546016
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.869253806843984
recall 0.869253806843984
f1 0.869253806843984
auc 0.9388686367999824
ap 0.9387608432825033
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8707483775285549
recall 0.8707483775285549
f1 0.8707483775285549
auc 0.9396231513526466
ap 0.9394401351190352
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8702712645792496
recall 0.8702712645792496
f1 0.8702712645792496
auc 0.9396428300042311
ap 0.9395309538631792
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8696849330029949
recall 0.8696849330029949
f1 0.8696849330029949
auc 0.9393169389774536
ap 0.9390356613237345
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8752651456360908
recall 0.8752651456360908
f1 0.8752651456360908
auc 0.9490282561606765
ap 0.9481281271499323
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8772311035232034
recall 0.8772311035232034
f1 0.8772311035232034
auc 0.9487537361161361
ap 0.9485296811570569
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8831289771845413
recall 0.8831289771845413
f1 0.8831289771845413
auc 0.9518761719382312
ap 0.9521439505759575
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.872471416007036
recall 0.872471416007036
f1 0.8724714160070359
auc 0.9468912684328694
ap 0.9465306180546834
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8801800403538724
recall 0.8801800403538724
f1 0.8801800403538724
auc 0.9504595097541771
ap 0.9505822371451572
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8830255057167986
recall 0.8830255057167986
f1 0.8830255057167986
auc 0.9517935336788585
ap 0.9514437999596908
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.879455740079673
recall 0.879455740079673
f1 0.879455740079673
auc 0.9503880837142257
ap 0.9506627463909636
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8726783589425215
recall 0.8726783589425215
f1 0.8726783589425215
auc 0.9471799248672096
ap 0.9468351846789629
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8791453256764448
recall 0.8791453256764448
f1 0.8791453256764449
auc 0.949336644388182
ap 0.9489446919136855
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8769724248538465
recall 0.8769724248538465
f1 0.8769724248538465
auc 0.9485566925345603
ap 0.9474776836733528
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8754319889079735
recall 0.8754319889079735
f1 0.8754319889079734
auc 0.9454886680742629
ap 0.945510280414398
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.871965730604474
recall 0.871965730604474
f1 0.871965730604474
auc 0.9430033203447662
ap 0.9424755593834523
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8714276845394533
recall 0.8714276845394533
f1 0.8714276845394533
auc 0.9426969393663803
ap 0.9422675944303043
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8739730563085901
recall 0.8739730563085901
f1 0.8739730563085901
auc 0.9450326992706312
ap 0.944835788947992
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8741386089439811
recall 0.8741386089439811
f1 0.8741386089439811
auc 0.9449226302080819
ap 0.9449934401519174
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.875162965875463
recall 0.875162965875463
f1 0.875162965875463
auc 0.9454179539707275
ap 0.94544937355314
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8710655381495355
recall 0.8710655381495355
f1 0.8710655381495355
auc 0.9430043463125408
ap 0.9426407970645175
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.870620615441922
recall 0.870620615441922
f1 0.870620615441922
auc 0.9430283079007289
ap 0.9428647101803762
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8726279411460381
recall 0.8726279411460381
f1 0.872627941146038
auc 0.9431936980171718
ap 0.9428109158946867
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8740868737454215
recall 0.8740868737454215
f1 0.8740868737454215
auc 0.9447332851412478
ap 0.9445382916678879
Warning: can not import cupy
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import cupy
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.500     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import cupy
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import cupy
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.500     |
+---------------+-----------+
| Version       | 1         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import cupy
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.500     |
+---------------+-----------+
| Version       | 1         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import cupy
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.100     |
+---------------+-----------+
| Version       | 1         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import cupy
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 1         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import cupy
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.100     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import cupy
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.100     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import cupy
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.100     |
+---------------+-----------+
| Version       | 1         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import cupy
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.500     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9766132186155652
recall 0.07605855156155772
f1 0.14112620656916156
auc 0.8798443832840083
ap 0.8619230526124885
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.973410939876976
recall 0.08964870281366691
f1 0.1641771064579824
auc 0.8809106555916952
ap 0.862822536530719
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.976998405830107
recall 0.0783976901006926
f1 0.14514819326025172
auc 0.8805092036617488
ap 0.8627553917303052
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.973404952181318
recall 0.09051978825923016
f1 0.16563654704646405
auc 0.881056036929794
ap 0.8630677973213462
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9720515361744301
recall 0.08961824528060525
f1 0.16410668272931095
auc 0.8804222876217591
ap 0.8625047745159952
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9701986754966887
recall 0.09459500618287921
f1 0.1723825963401029
auc 0.881110003237479
ap 0.8628952850216586
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9807865260403892
recall 0.07307371332151581
f1 0.13601369661099585
auc 0.8793457021877703
ap 0.8612501911842753
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9772400756143668
recall 0.07872663145775845
f1 0.14571447899519696
auc 0.8799310623807436
ap 0.8620170556643492
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9765825653421967
recall 0.07875099748420777
f1 0.1457488965676631
auc 0.8803536358416721
ap 0.8624486743596947
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.979601226993865
recall 0.07781290546590888
f1 0.14417363137192937
auc 0.8804187108936663
ap 0.8627925765155285
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | pubmed |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 0      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.500  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  False
Y_test.shape (64052,)
Y_prob.shape (64052,)
Y_pred.shape (64052,)
precision 0.8505901455067757
recall 0.8505901455067757
f1 0.8505901455067757
auc 0.9269153425539244
ap 0.937866594697838
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  False
Y_test.shape (64052,)
Y_prob.shape (64052,)
Y_pred.shape (64052,)
precision 0.8483107475176419
recall 0.8483107475176419
f1 0.8483107475176419
auc 0.9256935480149069
ap 0.9367117263756699
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  False
Y_test.shape (64052,)
Y_prob.shape (64052,)
Y_pred.shape (64052,)
precision 0.8491850371573096
recall 0.8491850371573096
f1 0.8491850371573096
auc 0.9261477369042199
ap 0.9373899747274828
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  False
Y_test.shape (64052,)
Y_prob.shape (64052,)
Y_pred.shape (64052,)
precision 0.8489664647473928
recall 0.8489664647473928
f1 0.8489664647473928
auc 0.9248691591870714
ap 0.9361881207460225
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  False
Y_test.shape (64052,)
Y_prob.shape (64052,)
Y_pred.shape (64052,)
precision 0.8496221819771436
recall 0.8496221819771436
f1 0.8496221819771436
auc 0.9258532634695125
ap 0.9369804281172307
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  False
Y_test.shape (64052,)
Y_prob.shape (64052,)
Y_pred.shape (64052,)
precision 0.8503403484668707
recall 0.8503403484668707
f1 0.8503403484668707
auc 0.9264685542314611
ap 0.9377934481224256
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  False
Y_test.shape (64052,)
Y_prob.shape (64052,)
Y_pred.shape (64052,)
precision 0.8496534066071317
recall 0.8496534066071317
f1 0.8496534066071317
auc 0.9259059751415286
ap 0.9371203272208108
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  False
Y_test.shape (64052,)
Y_prob.shape (64052,)
Y_pred.shape (64052,)
precision 0.8478111534378318
recall 0.8478111534378318
f1 0.8478111534378318
auc 0.9245483350349877
ap 0.935768214809764
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  False
Y_test.shape (64052,)
Y_prob.shape (64052,)
Y_pred.shape (64052,)
precision 0.8492162617872978
recall 0.8492162617872978
f1 0.8492162617872978
auc 0.9262401686728265
ap 0.9373440116098168
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  False
Y_test.shape (64052,)
Y_prob.shape (64052,)
Y_pred.shape (64052,)
precision 0.8482482982576657
recall 0.8482482982576657
f1 0.8482482982576657
auc 0.9236742038291664
ap 0.93549103182285
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | pubmed |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 0      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.100  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  False
Y_test.shape (12810,)
Y_prob.shape (12810,)
Y_pred.shape (12810,)
precision 0.8515222482435597
recall 0.8515222482435597
f1 0.8515222482435597
auc 0.9268960688279613
ap 0.9377346737583014
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  False
Y_test.shape (12810,)
Y_prob.shape (12810,)
Y_pred.shape (12810,)
precision 0.8488680718188915
recall 0.8488680718188915
f1 0.8488680718188915
auc 0.9265168885793142
ap 0.9375259490603471
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  False
Y_test.shape (12810,)
Y_prob.shape (12810,)
Y_pred.shape (12810,)
precision 0.8501170960187353
recall 0.8501170960187353
f1 0.8501170960187352
auc 0.9268375787114989
ap 0.938447217883794
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  False
Y_test.shape (12810,)
Y_prob.shape (12810,)
Y_pred.shape (12810,)
precision 0.8479313036690086
recall 0.8479313036690086
f1 0.8479313036690087
auc 0.9222819555126539
ap 0.9342527916164964
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  False
Y_test.shape (12810,)
Y_prob.shape (12810,)
Y_pred.shape (12810,)
precision 0.8526151444184231
recall 0.8526151444184231
f1 0.8526151444184232
auc 0.9258913283131043
ap 0.9367435090932005
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  False
Y_test.shape (12810,)
Y_prob.shape (12810,)
Y_pred.shape (12810,)
precision 0.8502732240437159
recall 0.8502732240437159
f1 0.8502732240437159
auc 0.9270523187327425
ap 0.9380709493125308
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  False
Y_test.shape (12810,)
Y_prob.shape (12810,)
Y_pred.shape (12810,)
precision 0.8519906323185011
recall 0.8519906323185011
f1 0.8519906323185011
auc 0.9283370293382962
ap 0.9393354831369664
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  False
Y_test.shape (12810,)
Y_prob.shape (12810,)
Y_pred.shape (12810,)
precision 0.8435597189695551
recall 0.8435597189695551
f1 0.8435597189695551
auc 0.9219985362235908
ap 0.9336234742670017
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  False
Y_test.shape (12810,)
Y_prob.shape (12810,)
Y_pred.shape (12810,)
precision 0.8513661202185793
recall 0.8513661202185793
f1 0.8513661202185793
auc 0.9264923054234684
ap 0.9378408793839835
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  False
Y_test.shape (12810,)
Y_prob.shape (12810,)
Y_pred.shape (12810,)
precision 0.848711943793911
recall 0.848711943793911
f1 0.848711943793911
auc 0.9253429789007782
ap 0.9355853374573011
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | pubmed |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 0      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.900  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  False
Y_test.shape (115292,)
Y_prob.shape (115292,)
Y_pred.shape (115292,)
precision 0.8485757901675746
recall 0.8485757901675746
f1 0.8485757901675746
auc 0.9248656376583091
ap 0.9363982862681127
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  False
Y_test.shape (115292,)
Y_prob.shape (115292,)
Y_pred.shape (115292,)
precision 0.8485931374249731
recall 0.8485931374249731
f1 0.8485931374249732
auc 0.9254198060364649
ap 0.9364598597757762
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  False
Y_test.shape (115292,)
Y_prob.shape (115292,)
Y_pred.shape (115292,)
precision 0.8493737640079103
recall 0.8493737640079103
f1 0.8493737640079103
auc 0.9257097090531086
ap 0.9368870591798468
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  False
Y_test.shape (115292,)
Y_prob.shape (115292,)
Y_pred.shape (115292,)
precision 0.8482982340491968
recall 0.8482982340491968
f1 0.8482982340491968
auc 0.9258478836025185
ap 0.9373950106231883
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  False
Y_test.shape (115292,)
Y_prob.shape (115292,)
Y_pred.shape (115292,)
precision 0.8488359990285536
recall 0.8488359990285536
f1 0.8488359990285536
auc 0.9252898785512509
ap 0.9367951115348641
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  False
Y_test.shape (115292,)
Y_prob.shape (115292,)
Y_pred.shape (115292,)
precision 0.8483849703361899
recall 0.8483849703361899
f1 0.8483849703361899
auc 0.9247570084559943
ap 0.9360865954584775
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  False
Y_test.shape (115292,)
Y_prob.shape (115292,)
Y_pred.shape (115292,)
precision 0.8514207403809457
recall 0.8514207403809457
f1 0.8514207403809457
auc 0.9275846248032338
ap 0.9385488081227045
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  False
Y_test.shape (115292,)
Y_prob.shape (115292,)
Y_pred.shape (115292,)
precision 0.8470145370017
recall 0.8470145370017
f1 0.8470145370017
auc 0.9239944120850522
ap 0.9356104707756168
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  False
Y_test.shape (115292,)
Y_prob.shape (115292,)
Y_pred.shape (115292,)
precision 0.8501023488186518
recall 0.8501023488186518
f1 0.8501023488186519
auc 0.9263323107156293
ap 0.9373387511777578
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  False
Y_test.shape (115292,)
Y_prob.shape (115292,)
Y_pred.shape (115292,)
precision 0.8487145682267634
recall 0.8487145682267634
f1 0.8487145682267634
auc 0.9246780287216342
ap 0.9360175470485359
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8732384164890424
recall 0.8732384164890424
f1 0.8732384164890424
auc 0.9497825394013413
ap 0.9486926575961986
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8712621319040622
recall 0.8712621319040622
f1 0.8712621319040622
auc 0.9482924156900377
ap 0.9467835739786052
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8703308983299878
recall 0.8703308983299878
f1 0.8703308983299878
auc 0.948494823672356
ap 0.9469999299031715
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8725244707489187
recall 0.8725244707489187
f1 0.8725244707489187
auc 0.9498760602770986
ap 0.9485229241018234
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8721623243590009
recall 0.8721623243590009
f1 0.8721623243590008
auc 0.9498028564646409
ap 0.9487518470490172
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8721209362001532
recall 0.8721209362001532
f1 0.8721209362001532
auc 0.9498465414616034
ap 0.9486750451899255
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8703722864888356
recall 0.8703722864888356
f1 0.8703722864888356
auc 0.9485118637519729
ap 0.9471300864804273
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8697618111458312
recall 0.8697618111458312
f1 0.8697618111458312
auc 0.9482835958252525
ap 0.9472363421380404
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8716863605322517
recall 0.8716863605322517
f1 0.8716863605322517
auc 0.948347488040692
ap 0.9470055771728314
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8725555118680546
recall 0.8725555118680546
f1 0.8725555118680546
auc 0.9495140794038436
ap 0.9482493219780356
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8713059673608756
recall 0.8713059673608756
f1 0.8713059673608756
auc 0.9482777648899612
ap 0.9472689010530084
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.869955105395975
recall 0.869955105395975
f1 0.8699551053959749
auc 0.9470819010107773
ap 0.9458593953456143
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8698918735593201
recall 0.8698918735593201
f1 0.8698918735593201
auc 0.9469978815326501
ap 0.9459726775030438
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8697481648396498
recall 0.8697481648396498
f1 0.8697481648396497
auc 0.9468122379505185
ap 0.9456292351026278
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8698401384202388
recall 0.8698401384202388
f1 0.8698401384202388
auc 0.9473459666154548
ap 0.9463497212976819
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8697769065835839
recall 0.8697769065835839
f1 0.8697769065835839
auc 0.9473333618862556
ap 0.9463221780652064
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.869345780424573
recall 0.869345780424573
f1 0.869345780424573
auc 0.947061124587578
ap 0.9458863778882357
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8715473980099216
recall 0.8715473980099216
f1 0.8715473980099216
auc 0.9476611790855382
ap 0.9464551104053192
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8703747348574122
recall 0.8703747348574122
f1 0.8703747348574122
auc 0.947475145110813
ap 0.9463397399534471
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8702367744865287
recall 0.8702367744865287
f1 0.8702367744865287
auc 0.9471841947250664
ap 0.9459035870614019
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8706089295876662
recall 0.8706089295876662
f1 0.8706089295876662
auc 0.9489016509587594
ap 0.9466924971322928
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8667287495473124
recall 0.8667287495473124
f1 0.8667287495473124
auc 0.9472163558814224
ap 0.9451151732229911
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8717471157328367
recall 0.8717471157328367
f1 0.8717471157328367
auc 0.9492214053093903
ap 0.9474529142756771
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.86776346422474
recall 0.86776346422474
f1 0.86776346422474
auc 0.9470254577416682
ap 0.9453727252026926
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8667804852811837
recall 0.8667804852811837
f1 0.8667804852811837
auc 0.9463395102705442
ap 0.9441080077600355
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.870453722386052
recall 0.870453722386052
f1 0.870453722386052
auc 0.9481796284593814
ap 0.9455357377516179
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8672978426198976
recall 0.8672978426198976
f1 0.8672978426198975
auc 0.9474382234613319
ap 0.9455743512937613
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8679704071602256
recall 0.8679704071602256
f1 0.8679704071602256
auc 0.9469368868290737
ap 0.9452578601634012
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8670391639505406
recall 0.8670391639505406
f1 0.8670391639505405
auc 0.9466831852716799
ap 0.9441247953542315
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8683325572973253
recall 0.8683325572973253
f1 0.8683325572973254
auc 0.9467248182310934
ap 0.9437507316467939
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9991886409736308
recall 0.12742511252522118
f1 0.22602551160869963
auc 0.6270556312186314
ap 0.6275583609882521
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9995872884853487
recall 0.1253039474364944
f1 0.2226921662375874
auc 0.656623210711186
ap 0.6570778096571783
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.12463138289616638
f1 0.2216395252553133
auc 0.6518351821624718
ap 0.6523109880541812
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9995697074010327
recall 0.12018210978322727
f1 0.21456611093151062
auc 0.658372240658146
ap 0.6586375218672033
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.12219980340421129
f1 0.2177861785994191
auc 0.646878388164954
ap 0.6474387570603463
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.12095814579129804
f1 0.215812064429778
auc 0.64225279627707
ap 0.6426507602455458
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.1256143618397227
f1 0.22319253573562528
auc 0.6434548939465501
ap 0.6438283762201558
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9995896594173164
recall 0.12602824771069376
f1 0.2238353395203528
auc 0.6545479557665552
ap 0.6549903776688631
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9991419991419992
recall 0.12049252418645559
f1 0.21505078485687903
auc 0.6295580733291517
ap 0.6301804632588635
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9995794785534062
recall 0.12297583941228206
f1 0.21900769337080206
auc 0.6433990202104766
ap 0.6439858273486122
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 1        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 102, in train_test_scores
    model.get_scores_matrix()
  File "/home/fengxy/code/src/mine.py", line 47, in get_scores_matrix
    S += tmp2
  File "/pub/data/fxy/anaconda3/envs/graph/lib/python3.8/site-packages/scipy/sparse/_base.py", line 469, in __add__
    return self._add_sparse(other)
  File "/pub/data/fxy/anaconda3/envs/graph/lib/python3.8/site-packages/scipy/sparse/_compressed.py", line 360, in _add_sparse
    return self._binopt(other, '_plus_')
  File "/pub/data/fxy/anaconda3/envs/graph/lib/python3.8/site-packages/scipy/sparse/_compressed.py", line 1256, in _binopt
    data = np.empty(maxnnz, dtype=upcast(self.dtype, other.dtype))
numpy.core._exceptions.MemoryError: Unable to allocate 6.34 GiB for an array with shape (851054648,) and data type float64
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7177979040877229
recall 0.7177979040877229
f1 0.7177979040877229
auc 0.8058726899682791
ap 0.8494259699765081
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7188909709209522
recall 0.7188909709209522
f1 0.7188909709209522
auc 0.8060267280763774
ap 0.8503481066657238
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7171038933999584
recall 0.7171038933999584
f1 0.7171038933999584
auc 0.8052091241287461
ap 0.8493299336001505
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7183531126379347
recall 0.7183531126379347
f1 0.7183531126379347
auc 0.8057797965305544
ap 0.8495716438410461
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7157505725588174
recall 0.7157505725588174
f1 0.7157505725588174
auc 0.8053240795829556
ap 0.8487073086928619
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7187348185162051
recall 0.7187348185162051
f1 0.7187348185162051
auc 0.805223137157719
ap 0.8503434843579336
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.717190644735929
recall 0.717190644735929
f1 0.717190644735929
auc 0.8059799891309228
ap 0.8499482687412645
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7159414254979527
recall 0.7159414254979527
f1 0.7159414254979527
auc 0.8038828749243188
ap 0.8487817357177959
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7152994656117704
recall 0.7152994656117704
f1 0.7152994656117704
auc 0.804989660828996
ap 0.8486170152426382
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7171385939343465
recall 0.7171385939343465
f1 0.7171385939343465
auc 0.8051074218993177
ap 0.8493655205555757
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7719862585883822
recall 0.7719862585883822
f1 0.7719862585883822
auc 0.8219122583441565
ap 0.8810885641791127
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7737039350405996
recall 0.7737039350405996
f1 0.7737039350405996
auc 0.8218927812333094
ap 0.8815997250870679
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7730793254216115
recall 0.7730793254216115
f1 0.7730793254216114
auc 0.8200927190259368
ap 0.8806362037195241
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7764834478450968
recall 0.7764834478450968
f1 0.7764834478450967
auc 0.8241424404484862
ap 0.8828984006732835
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7747657713928795
recall 0.7747657713928795
f1 0.7747657713928795
auc 0.8217019470966188
ap 0.8817741556719502
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7739225484072455
recall 0.7739225484072455
f1 0.7739225484072455
auc 0.8226829114259866
ap 0.8817954407092364
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.772579637726421
recall 0.772579637726421
f1 0.772579637726421
auc 0.8217243985157622
ap 0.8805833104097542
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7728607120549656
recall 0.7728607120549656
f1 0.7728607120549656
auc 0.8208329760327029
ap 0.8810938769650086
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7778263585259213
recall 0.7778263585259213
f1 0.7778263585259213
auc 0.8242156062868264
ap 0.8834579821483723
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7734853216739538
recall 0.7734853216739538
f1 0.7734853216739538
auc 0.8211182404345192
ap 0.8813520253530663
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8213616489693941
recall 0.8213616489693941
f1 0.8213616489693941
auc 0.8357212817098619
ap 0.9082847941963631
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8263585259212992
recall 0.8263585259212992
f1 0.8263585259212992
auc 0.8411761065558262
ap 0.9105327656533653
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8262023735165521
recall 0.8262023735165521
f1 0.8262023735165521
auc 0.8400110472218139
ap 0.9100692760089336
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8241723922548407
recall 0.8241723922548407
f1 0.8241723922548407
auc 0.836147847944816
ap 0.9087762408393856
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8269831355402874
recall 0.8269831355402874
f1 0.8269831355402874
auc 0.8408662157201093
ap 0.9116641012062179
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8294815740162399
recall 0.8294815740162399
f1 0.8294815740162399
auc 0.8428411388728392
ap 0.9122217578046532
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8251093066833229
recall 0.8251093066833229
f1 0.8251093066833229
auc 0.8391934538102941
ap 0.9102363651574292
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8296377264209869
recall 0.8296377264209869
f1 0.829637726420987
auc 0.8428487953149206
ap 0.9125404561236027
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8168332292317302
recall 0.8168332292317302
f1 0.8168332292317302
auc 0.8322344306981778
ap 0.9062835654741478
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8235477826358526
recall 0.8235477826358526
f1 0.8235477826358526
auc 0.8371724335118472
ap 0.9088590352093642
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 0.999944549184873
recall 0.312877368311472
f1 0.4766221752345712
auc 0.807711942616977
ap 0.8497845995194876
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 0.9998894905514422
recall 0.31397043514470124
f1 0.4778831172260808
auc 0.8077791949209668
ap 0.8506070509756137
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 0.9999442959001783
recall 0.31145464640155457
f1 0.47496957188971795
auc 0.805414397693873
ap 0.8492399882236381
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 0.9998330550918197
recall 0.31173225067666044
f1 0.4752797397031982
auc 0.8063096181683628
ap 0.8495905134130224
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 1.0
recall 0.31242626136442503
f1 0.47610486099176397
auc 0.8054331734970221
ap 0.8486831808441497
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 0.9998895332780999
recall 0.31409188701506
f1 0.47802379160560327
auc 0.8071211373607925
ap 0.8506505866869891
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 1.0
recall 0.31220070789090154
f1 0.4758429194763983
auc 0.8067675347551175
ap 0.8497862733095353
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 0.9999445307299756
recall 0.3127732667083073
f1 0.47650137449777963
auc 0.8066034448951298
ap 0.8493129070145596
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 1.0
recall 0.3116975501422722
f1 0.4752582637795796
auc 0.8054906669530371
ap 0.8486944842990842
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 0.9999442617468368
recall 0.31126379346241934
f1 0.47474760839938074
auc 0.8063805967941386
ap 0.8495375888044399
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9006109781132168
recall 0.9006109781132168
f1 0.9006109781132168
auc 0.9379317751956278
ap 0.9347340658114306
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9001236575842303
recall 0.9001236575842303
f1 0.9001236575842303
auc 0.9373311352333044
ap 0.9354830743340405
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9003185857958249
recall 0.9003185857958249
f1 0.9003185857958249
auc 0.9380213621580906
ap 0.935584407113225
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9013967824662074
recall 0.9013967824662074
f1 0.9013967824662072
auc 0.9382771861404532
ap 0.9367630183429289
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.8986738790104957
recall 0.8986738790104957
f1 0.8986738790104957
auc 0.9375787904156133
ap 0.9360608509246956
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.8991611995394821
recall 0.8991611995394821
f1 0.8991611995394821
auc 0.9369815398494555
ap 0.9343340622282447
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.8984119442261654
recall 0.8984119442261654
f1 0.8984119442261654
auc 0.9365929819665824
ap 0.9336307555407927
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.8993500362444643
recall 0.8993500362444643
f1 0.8993500362444643
auc 0.9378110407241665
ap 0.9353149219575227
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.9005683375669304
recall 0.9005683375669304
f1 0.9005683375669304
auc 0.9382014355063263
ap 0.9360690250502596
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  False
Y_test.shape (328326,)
Y_prob.shape (328326,)
Y_pred.shape (328326,)
precision 0.8998434482800631
recall 0.8998434482800631
f1 0.8998434482800631
auc 0.9360398315290321
ap 0.9338242232100022
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.500     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.3639284226223109
recall 0.3639284226223109
f1 0.36392842262231084
auc 0.3431120660739179
ap 0.55132925299604
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.3557597421109186
recall 0.3557597421109186
f1 0.3557597421109186
auc 0.3350909725796446
ap 0.5461083195379419
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.36254687397206203
recall 0.36254687397206203
f1 0.362546873972062
auc 0.34244091675849814
ap 0.5509866303904372
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.3567246332317274
recall 0.3567246332317274
f1 0.3567246332317274
auc 0.3368177217446518
ap 0.5474889074000457
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.3621302164426219
recall 0.3621302164426219
f1 0.3621302164426219
auc 0.3413040971621243
ap 0.5506461230018513
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.36232758053551456
recall 0.36232758053551456
f1 0.36232758053551456
auc 0.34163906426770724
ap 0.5506552613184312
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.3627113440494726
recall 0.3627113440494726
f1 0.3627113440494726
auc 0.34224346832844954
ap 0.5513289095033341
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.3588188855507555
recall 0.3588188855507555
f1 0.35881888555075553
auc 0.3387873559072762
ap 0.5487858348102852
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.3611653253218131
recall 0.3611653253218131
f1 0.3611653253218131
auc 0.3417306508723404
ap 0.5525067310946918
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  False
Y_test.shape (182404,)
Y_prob.shape (182404,)
Y_pred.shape (182404,)
precision 0.3627552027367821
recall 0.3627552027367821
f1 0.3627552027367821
auc 0.3426073672863266
ap 0.5520385833170631
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.100     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.3481359649122807
recall 0.3481359649122807
f1 0.3481359649122807
auc 0.3154759637580794
ap 0.4833062603827087
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.3518640350877193
recall 0.3518640350877193
f1 0.3518640350877193
auc 0.31822011490314334
ap 0.4829907038931287
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.34649122807017546
recall 0.34649122807017546
f1 0.34649122807017546
auc 0.313504179170514
ap 0.4812970381211789
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.3507127192982456
recall 0.3507127192982456
f1 0.3507127192982456
auc 0.3180724748239844
ap 0.4884329719238889
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.34676535087719296
recall 0.34676535087719296
f1 0.34676535087719296
auc 0.3139615133983533
ap 0.48208299821922973
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.35520833333333335
recall 0.35520833333333335
f1 0.35520833333333335
auc 0.31973137317491923
ap 0.4827386656310278
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.34830043859649124
recall 0.34830043859649124
f1 0.34830043859649124
auc 0.31524341624345953
ap 0.4836676617312927
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.34375
recall 0.34375
f1 0.34375
auc 0.3112637331919437
ap 0.47928804998343905
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.35411184210526314
recall 0.35411184210526314
f1 0.35411184210526314
auc 0.32050340008464145
ap 0.485011923401516
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  False
Y_test.shape (36480,)
Y_prob.shape (36480,)
Y_pred.shape (36480,)
precision 0.3518640350877193
recall 0.3518640350877193
f1 0.3518640350877193
auc 0.3186131039117806
ap 0.48574268956371885
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 1.0
recall 0.06323593014260218
f1 0.1189499495829132
auc 0.9389146090429759
ap 0.9346655735378757
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 1.0
recall 0.06323593014260218
f1 0.1189499495829132
auc 0.938170341115215
ap 0.935413928577697
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 1.0
recall 0.062322204150752604
f1 0.11733201830338201
auc 0.9388899124536917
ap 0.9355262976425259
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 1.0
recall 0.06376589121787492
f1 0.11988707617776913
auc 0.9389954128338462
ap 0.936675534810481
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 1.0
recall 0.06301663590455828
f1 0.11856189974098609
auc 0.9383372766455355
ap 0.9359843153791696
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 1.0
recall 0.0649232774742177
f1 0.12193043169870896
auc 0.54759158044996
ap 0.5478596373708359
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 1.0
recall 0.06433240133282164
f1 0.12088780018772463
auc 0.937315421782287
ap 0.9334772614294378
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 1.0
recall 0.06389381285673386
f1 0.12011313927123651
auc 0.9386177300545024
ap 0.9352723025447152
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 1.0
recall 0.06360751204595433
f1 0.11960711319836202
auc 0.9389205819944715
ap 0.9360169681351107
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 1.0
recall 0.06380853176416124
f1 0.11996243658310335
auc 0.9376830585461298
ap 0.9335633537503087
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.9145507952840547
recall 0.9145507952840547
f1 0.9145507952840547
auc 0.9409411593413671
ap 0.9615652057770598
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.9136827946172462
recall 0.9136827946172462
f1 0.9136827946172462
auc 0.9395538033102875
ap 0.9607073132599792
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.9139874571029472
recall 0.9139874571029472
f1 0.9139874571029472
auc 0.9398496512569499
ap 0.9608689524441898
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.9121824755838885
recall 0.9121824755838885
f1 0.9121824755838885
auc 0.9387305719785523
ap 0.9601485885770599
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.9136195627805913
recall 0.9136195627805913
f1 0.9136195627805913
auc 0.9393392985649631
ap 0.9605057871300574
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.9154877761363048
recall 0.9154877761363048
f1 0.9154877761363048
auc 0.9413270621474258
ap 0.961995140562935
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.9133896288291188
recall 0.9133896288291188
f1 0.9133896288291188
auc 0.9392732530565884
ap 0.9606720996567771
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.9141311658226174
recall 0.9141311658226174
f1 0.9141311658226174
auc 0.9399797495185138
ap 0.9610239326312126
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.9126710852307675
recall 0.9126710852307675
f1 0.9126710852307675
auc 0.9391251471374096
ap 0.9603841634476673
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.9146772589573645
recall 0.9146772589573645
f1 0.9146772589573645
auc 0.9401016508738769
ap 0.9612003457858587
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.9403389690209631
recall 0.9403389690209631
f1 0.9403389690209631
auc 0.9610551514500612
ap 0.9759381937497961
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.9392628768909215
recall 0.9392628768909215
f1 0.9392628768909215
auc 0.9596862476567396
ap 0.9752008036678922
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.9397388407176707
recall 0.9397388407176707
f1 0.9397388407176707
auc 0.960115774798772
ap 0.9754789416014832
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.9410529147610869
recall 0.9410529147610869
f1 0.9410529147610869
auc 0.9610919857594568
ap 0.9760703007707004
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.9401630693458601
recall 0.9401630693458601
f1 0.9401630693458601
auc 0.9606751374507432
ap 0.9759467706481508
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.9400285578296049
recall 0.9400285578296049
f1 0.9400285578296049
auc 0.9606507972940431
ap 0.9757277409429934
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.9397077995985349
recall 0.9397077995985349
f1 0.9397077995985349
auc 0.9606777440705294
ap 0.9759019521987503
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.9399871696707572
recall 0.9399871696707572
f1 0.9399871696707572
auc 0.9600638146645664
ap 0.9755799242512013
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.940359663100387
recall 0.940359663100387
f1 0.940359663100387
auc 0.9610899623021947
ap 0.9761021377269546
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.9414771433892763
recall 0.9414771433892763
f1 0.9414771433892763
auc 0.9615136899908852
ap 0.9763795070420391
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9589735630399917
recall 0.9589735630399917
f1 0.9589735630399917
auc 0.9762838206033008
ap 0.9855910402630681
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9578871126286926
recall 0.9578871126286926
f1 0.9578871126286926
auc 0.9758645534558567
ap 0.985451221666785
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9589218273061203
recall 0.9589218273061203
f1 0.9589218273061203
auc 0.9762239105752993
ap 0.9856749563625984
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9580940555641781
recall 0.9580940555641781
f1 0.9580940555641781
auc 0.9751398329576303
ap 0.985112961850589
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9570593408867505
recall 0.9570593408867505
f1 0.9570593408867505
auc 0.9754750512847958
ap 0.9851529117580904
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9585596771690207
recall 0.9585596771690207
f1 0.9585596771690207
auc 0.9756279940945194
ap 0.9855012032675474
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9573697552899788
recall 0.9573697552899788
f1 0.9573697552899788
auc 0.9751111091732629
ap 0.984980447126838
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9587148843706348
recall 0.9587148843706348
f1 0.9587148843706348
auc 0.9764907086687702
ap 0.98575511423187
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9548864400641524
recall 0.9548864400641524
f1 0.9548864400641524
auc 0.973131732221441
ap 0.9837713178943754
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.957938848362564
recall 0.957938848362564
f1 0.957938848362564
auc 0.9757179421106928
ap 0.9854241235819808
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9999025626035273
recall 0.32048719550281074
f1 0.48539602204195537
auc 0.8219983411367271
ap 0.8811025709359681
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.999508551208964
recall 0.3175827607745159
f1 0.4820116604256529
auc 0.8222957105197759
ap 0.8816774669169017
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9997073170731707
recall 0.32001873828856964
f1 0.48483558079015854
auc 0.8205522830632479
ap 0.8807376089690284
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9998054096127651
recall 0.32092442223610246
f1 0.4858858574873517
auc 0.8243362776660902
ap 0.8830013095367741
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 1.0
recall 0.3193004372267333
f1 0.4840450714894423
auc 0.8218871461894718
ap 0.8817438115671963
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9999027048063825
recall 0.32095565271705184
f1 0.48593314104685803
auc 0.8233086119660534
ap 0.8819674570765876
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9998029362498768
recall 0.316895690193629
f1 0.48125400175484356
auc 0.8215045703594841
ap 0.8803995194809536
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9997080860173202
recall 0.32086196127420363
f1 0.48580277561056345
auc 0.8209763870449489
ap 0.8811310678890809
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 1.0
recall 0.3192692067457839
f1 0.4840091849537202
auc 0.8242864483706116
ap 0.8834631774112265
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9998042669798395
recall 0.31905059337913805
f1 0.4837350253326388
auc 0.821854636546256
ap 0.8815054319063201
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3297938788257339
f1 0.4960075152653828
auc 0.8357460066533995
ap 0.9082909836591274
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.33479075577763895
f1 0.5016378100140383
auc 0.8410947629546024
ap 0.9104685601546987
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9981916817359855
recall 0.3447845096814491
f1 0.5125348189415041
auc 0.8403062347627048
ap 0.9101476342670514
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9985521235521235
recall 0.3230793254216115
f1 0.48820198206701276
auc 0.8362810066397446
ap 0.9088025781894267
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9995333644423705
recall 0.33447845096814494
f1 0.5012285012285013
auc 0.8410480074524004
ap 0.9117122705080851
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.33088694565896315
f1 0.49724275489850994
auc 0.8428788358774827
ap 0.9122290702649369
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9995324918186068
recall 0.3338538413491568
f1 0.5005267470443638
auc 0.8390633552538409
ap 0.9101593905514689
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.34369144284821984
f1 0.5115630447414293
auc 0.8430033384038162
ap 0.9125813250831039
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9995437956204379
recall 0.34212991880074956
f1 0.509771986970684
auc 0.832429694354832
ap 0.9063341147020336
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9995598591549296
recall 0.3546221111805122
f1 0.5235131396957123
auc 0.8371829672156027
ap 0.9088682934324002
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.8482198625858838
recall 0.8482198625858838
f1 0.8482198625858837
auc 0.9252132965735971
ap 0.9362265202003297
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.8504406967867305
recall 0.8504406967867305
f1 0.8504406967867305
auc 0.9261962982137483
ap 0.9372109375637608
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.8489659240752307
recall 0.8489659240752307
f1 0.8489659240752307
auc 0.9263791545448998
ap 0.937408363516013
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.8495037823582483
recall 0.8495037823582483
f1 0.8495037823582483
auc 0.9250772211818323
ap 0.9363023534060771
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.8477167048372545
recall 0.8477167048372545
f1 0.8477167048372544
auc 0.9252926756414785
ap 0.9363020739207866
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.8494170310222777
recall 0.8494170310222777
f1 0.8494170310222776
auc 0.9264264168340897
ap 0.9374240413717989
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.8493129294191131
recall 0.8493129294191131
f1 0.849312929419113
auc 0.926270550108494
ap 0.9372874402568334
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.8501457422444305
recall 0.8501457422444305
f1 0.8501457422444305
auc 0.9261640634306021
ap 0.9372624389374071
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.8478728572420016
recall 0.8478728572420016
f1 0.8478728572420016
auc 0.9243014555329282
ap 0.9358804739826585
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.8498334374349364
recall 0.8498334374349364
f1 0.8498334374349364
auc 0.9265056011344149
ap 0.937174308317998
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8504059962523423
recall 0.8504059962523423
f1 0.8504059962523424
auc 0.9289308563784113
ap 0.9389303931194879
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8569643972517177
recall 0.8569643972517177
f1 0.8569643972517177
auc 0.9324643531662167
ap 0.9414147568089728
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.853372891942536
recall 0.853372891942536
f1 0.853372891942536
auc 0.9299002497268064
ap 0.9403222265307919
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.858682073703935
recall 0.858682073703935
f1 0.858682073703935
auc 0.9340438235237892
ap 0.9424462400716358
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8543098063710182
recall 0.8543098063710182
f1 0.8543098063710182
auc 0.9299441889262683
ap 0.9404221572005427
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8460337289194254
recall 0.8460337289194254
f1 0.8460337289194254
auc 0.9236185779031765
ap 0.9340584500611856
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8510306058713304
recall 0.8510306058713304
f1 0.8510306058713304
auc 0.9274770467669138
ap 0.938923376461932
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8547782635852592
recall 0.8547782635852592
f1 0.8547782635852592
auc 0.9305805636194744
ap 0.9410563057802025
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8527482823235478
recall 0.8527482823235478
f1 0.8527482823235478
auc 0.9284361136719281
ap 0.9394972153812213
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8596189881324172
recall 0.8596189881324172
f1 0.8596189881324172
auc 0.930637901592579
ap 0.9425742664133048
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.8496252342286071
recall 0.8496252342286071
f1 0.8496252342286073
auc 0.9263345836904713
ap 0.9372171905045875
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.8507183010618363
recall 0.8507183010618363
f1 0.8507183010618363
auc 0.9267797433755682
ap 0.9377874137741317
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.8496876951905059
recall 0.8496876951905059
f1 0.8496876951905059
auc 0.9269788732916381
ap 0.937559655893956
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.8504684572142411
recall 0.8504684572142411
f1 0.8504684572142411
auc 0.9271424236725876
ap 0.9380076756955076
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.8523735165521549
recall 0.8523735165521549
f1 0.852373516552155
auc 0.928294789405903
ap 0.938533671812103
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.8464084946908182
recall 0.8464084946908182
f1 0.8464084946908182
auc 0.9249027846431084
ap 0.9360846164882195
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.8491255465334167
recall 0.8491255465334167
f1 0.8491255465334167
auc 0.925863868069652
ap 0.9366372292838705
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.8496564647095566
recall 0.8496564647095566
f1 0.8496564647095566
auc 0.926783003947018
ap 0.9375334768766876
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.8500624609618989
recall 0.8500624609618989
f1 0.8500624609618989
auc 0.9262299796231352
ap 0.9372342441082835
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.8495627732667083
recall 0.8495627732667083
f1 0.8495627732667083
auc 0.9256000065933182
ap 0.9366462669728584
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | pubmed |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 1      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.900  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  True
precision 0.9190163374994668
recall 0.747475974048503
f1 0.8244174032832052
auc 0.9248650487435063
ap 0.9363949745753223
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  True
precision 0.920202279934859
recall 0.7449606217257052
f1 0.8233602392775659
auc 0.925418549965751
ap 0.9364570358354756
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  True
precision 0.9194885455514118
recall 0.7484821149776221
f1 0.8252192290405562
auc 0.9257083472064347
ap 0.9368822064298161
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  True
precision 0.9221770744225835
recall 0.7480310862852583
f1 0.8260253242150833
auc 0.925848464091356
ap 0.9373922817439164
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  True
precision 0.9198138383040498
recall 0.7474065850189086
f1 0.8246958951831329
auc 0.9252810314379405
ap 0.936787842148616
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  True
precision 0.9193871462666212
recall 0.7484474204628249
f1 0.8251573048750168
auc 0.9247431181014055
ap 0.936077247720418
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  True
precision 0.9211539274988367
recall 0.7555424487388543
f1 0.8301692589204026
auc 0.9275951059519962
ap 0.938554693567575
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  True
precision 0.9222437553832903
recall 0.7429656871248655
f1 0.8229540956516727
auc 0.9239965197801364
ap 0.9356086582646151
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  True
precision 0.9215309779825909
recall 0.7492974360753565
f1 0.8265370558181365
auc 0.9263391360486108
ap 0.9373419023230629
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 57646
len(negative_edge) 57646
len(positive_edge) 57646
is_supserved =  True
precision 0.9185227610198974
recall 0.7511535926170072
f1 0.8264495934649005
auc 0.9246683223103067
ap 0.9360110266438659
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9494425468840626
recall 0.6775003880135431
f1 0.79074401457234
auc 0.9482624949700713
ap 0.9472477758659992
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9433674477417315
recall 0.6861746463328409
f1 0.7944745056539477
auc 0.9470898798793528
ap 0.9458441947162859
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9409831213440614
recall 0.6944580169346355
f1 0.7991400694559286
auc 0.9470068093283323
ap 0.9459648885923031
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.942575811070574
recall 0.6905836298523249
f1 0.7971388570025679
auc 0.9468100359307605
ap 0.9456180065128656
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9471743493357969
recall 0.6836568695642177
f1 0.7941254043875844
auc 0.9473555931327577
ap 0.9463350264402268
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.942028647412868
recall 0.6963722170806436
f1 0.8007839741407518
auc 0.947337100710274
ap 0.9463082483959856
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9481564100267847
recall 0.6694699447583682
f1 0.7848069704913173
auc 0.9470841950897646
ap 0.9458869673926475
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9412243316543976
recall 0.6982231853899967
f1 0.801714777913819
auc 0.9476974644488841
ap 0.9464573528829688
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9436562212922324
recall 0.6908652989428786
f1 0.7977127610147218
auc 0.9474903186758167
ap 0.9463338988967573
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9486488236913262
recall 0.6735857624897248
f1 0.7877977040859203
auc 0.9471862349307376
ap 0.9458948105239515
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8706089295876662
recall 0.8706089295876662
f1 0.8706089295876662
auc 0.9491632671814262
ap 0.9466639647148054
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.866677013813441
recall 0.866677013813441
f1 0.866677013813441
auc 0.9475467242344676
ap 0.9450877181050361
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8717471157328367
recall 0.8717471157328367
f1 0.8717471157328367
auc 0.9498253274593721
ap 0.9476887933175979
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8676082570231258
recall 0.8676082570231258
f1 0.8676082570231258
auc 0.9476971416851497
ap 0.9456783675003015
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8665218066118268
recall 0.8665218066118268
f1 0.8665218066118268
auc 0.9467935810678166
ap 0.944178858270587
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.870453722386052
recall 0.870453722386052
f1 0.870453722386052
auc 0.948705636524562
ap 0.9456105905755865
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8675047855553831
recall 0.8675047855553831
f1 0.8675047855553831
auc 0.9477489255975722
ap 0.945496643681224
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.868022142894097
recall 0.868022142894097
f1 0.868022142894097
auc 0.9475891561548496
ap 0.9455811982954994
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8669356924827979
recall 0.8669356924827979
f1 0.8669356924827979
auc 0.9471517390766598
ap 0.9441797830116668
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.8683325572973253
recall 0.8683325572973253
f1 0.8683325572973254
auc 0.9471381727997118
ap 0.9438206123525292
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8689237009291642
recall 0.8689237009291642
f1 0.8689237009291642
auc 0.9471950517246401
ap 0.9451370391220095
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8682201022287523
recall 0.8682201022287523
f1 0.8682201022287523
auc 0.9467456914896022
ap 0.9445005861396532
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.868944395008588
recall 0.868944395008588
f1 0.868944395008588
auc 0.9470598240758121
ap 0.9448982239430403
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8683546137450076
recall 0.8683546137450076
f1 0.8683546137450076
auc 0.9473618499103904
ap 0.9451771404430152
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8693789706764895
recall 0.8693789706764895
f1 0.8693789706764895
auc 0.9477913775877289
ap 0.9459467923490094
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8678579558388345
recall 0.8678579558388345
f1 0.8678579558388345
auc 0.9471640722192426
ap 0.9450297181522924
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8683546137450076
recall 0.8683546137450076
f1 0.8683546137450076
auc 0.9471475138616341
ap 0.9450944480892782
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8678786499182584
recall 0.8678786499182584
f1 0.8678786499182584
auc 0.9469312518348664
ap 0.9452356193395375
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.868965089088012
recall 0.868965089088012
f1 0.868965089088012
auc 0.946722266331711
ap 0.9445878624951299
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  False
Y_test.shape (193292,)
Y_prob.shape (193292,)
Y_pred.shape (193292,)
precision 0.8684891252612628
recall 0.8684891252612628
f1 0.8684891252612628
auc 0.9473277979082607
ap 0.945215652875408
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8684662830601909
recall 0.8684662830601909
f1 0.8684662830601909
auc 0.9462536634214873
ap 0.9444557814043777
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8681443755281295
recall 0.8681443755281295
f1 0.8681443755281295
auc 0.9458629108354337
ap 0.9440589220671368
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8682650908526526
recall 0.8682650908526526
f1 0.8682650908526526
auc 0.9459122015310183
ap 0.9443404646157704
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8682248524111449
recall 0.8682248524111449
f1 0.868224852411145
auc 0.9455062030477094
ap 0.9437129158137166
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.868311077642947
recall 0.868311077642947
f1 0.8683110776429471
auc 0.9461049420172991
ap 0.9445117733054794
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.869196323356116
recall 0.869196323356116
f1 0.869196323356116
auc 0.9465135634782096
ap 0.9449572346802357
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8681788656208504
recall 0.8681788656208504
f1 0.8681788656208504
auc 0.9458398233819245
ap 0.9440784941815239
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.869104349775527
recall 0.869104349775527
f1 0.869104349775527
auc 0.9461799781205538
ap 0.9443454935641659
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8688801641728413
recall 0.8688801641728413
f1 0.8688801641728413
auc 0.946296755616497
ap 0.944599268363562
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8680179118548197
recall 0.8680179118548197
f1 0.8680179118548197
auc 0.9458853740804459
ap 0.9439903080358816
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9986677857266563
recall 0.45663761018012583
f1 0.6267128154966434
auc 0.9725978795736694
ap 0.9807670271725947
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9986366198660217
recall 0.464032699207495
f1 0.6336361065362414
auc 0.9721982205162032
ap 0.9805089603732418
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9987392640453865
recall 0.463259077867729
f1 0.6329350960638178
auc 0.9724110172844879
ap 0.9807441102177101
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9988695756253907
recall 0.4575208786389138
f1 0.6275840171125855
auc 0.9722182375179577
ap 0.9806044539102452
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9986322782336851
recall 0.46700535443431224
f1 0.6364009911469164
auc 0.9718187097245682
ap 0.9801489897075488
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9988563221447949
recall 0.4575330616521384
f1 0.6275928626038713
auc 0.9726035357659306
ap 0.9806996628034073
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9986860267572734
recall 0.45835541504480304
f1 0.6283323660686326
auc 0.973294070822701
ap 0.981088313387916
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9988911645381374
recall 0.4664388443193655
f1 0.6359272485673947
auc 0.9725911686675937
ap 0.9807587342802482
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9985891536240292
recall 0.4613341617782326
f1 0.6311061482308628
auc 0.9726196921752283
ap 0.9806601961029238
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.9987652190076609
recall 0.4582274934059441
f1 0.6282278269584098
auc 0.9719585441674625
ap 0.980272094816902
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3071517801374141
f1 0.46995579978497193
auc 0.8282741116478964
ap 0.9011731867927011
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3132417239225484
f1 0.47705112960761
auc 0.8338807973896702
ap 0.903279031530892
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3202685821361649
f1 0.48515671200473093
auc 0.832370978709824
ap 0.9026697651102011
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.30262336039975013
f1 0.46463677775113876
auc 0.8290706498436915
ap 0.9022197660913556
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3182386008744535
f1 0.4828239753612888
auc 0.8340525430896757
ap 0.9051528408628837
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3088694565896315
f1 0.4719637318062515
auc 0.8347209456066849
ap 0.9046396766284024
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3118363522798251
f1 0.4754195929056065
auc 0.8317723132130489
ap 0.9037643784353264
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.32058088694565895
f1 0.48551495802293954
auc 0.8358932468620291
ap 0.9058337014281339
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3193316677076827
f1 0.4840809563261924
auc 0.8243530623427504
ap 0.8990646529009129
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3297938788257339
f1 0.4960075152653828
auc 0.8297118281008786
ap 0.9022878048717499
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7627732667083074
recall 0.7627732667083074
f1 0.7627732667083075
auc 0.8159057575859248
ap 0.8751244086761769
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.764896939412867
recall 0.764896939412867
f1 0.764896939412867
auc 0.816110976567971
ap 0.875825370011174
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7619925046845721
recall 0.7619925046845721
f1 0.7619925046845721
auc 0.8133169540742219
ap 0.8738696657250657
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7657089319175515
recall 0.7657089319175515
f1 0.7657089319175515
auc 0.8179337545124241
ap 0.8768195316321055
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7618988132417239
recall 0.7618988132417239
f1 0.7618988132417239
auc 0.8149525422508809
ap 0.8751503766504932
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7642723297938788
recall 0.7642723297938788
f1 0.7642723297938788
auc 0.8167976687157973
ap 0.8759507750617941
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7623360399750156
recall 0.7623360399750156
f1 0.7623360399750156
auc 0.8158651896593362
ap 0.874637543516939
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7619300437226734
recall 0.7619300437226734
f1 0.7619300437226734
auc 0.8140303081966651
ap 0.8743301355718218
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.7678326046221112
recall 0.7678326046221112
f1 0.7678326046221111
auc 0.8181343820675788
ap 0.877431552110142
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  False
Y_test.shape (64040,)
Y_prob.shape (64040,)
Y_pred.shape (64040,)
precision 0.762679575265459
recall 0.762679575265459
f1 0.762679575265459
auc 0.8154909222881856
ap 0.8758854448761996
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8074640849469081
recall 0.8074640849469081
f1 0.8074640849469081
auc 0.8275293763540197
ap 0.9011573435553473
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8133978763272954
recall 0.8133978763272954
f1 0.8133978763272955
auc 0.8327425843700904
ap 0.903354026904667
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.811524047470331
recall 0.811524047470331
f1 0.811524047470331
auc 0.8311602001754838
ap 0.9026414238628439
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8104309806371018
recall 0.8104309806371018
f1 0.8104309806371018
auc 0.8284478568009298
ap 0.9022205375647567
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.816052467207995
recall 0.816052467207995
f1 0.816052467207995
auc 0.8333852134499012
ap 0.905154664297531
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8123048094940662
recall 0.8123048094940662
f1 0.8123048094940662
auc 0.8336088839696925
ap 0.9046248813444513
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8127732667083073
recall 0.8127732667083073
f1 0.8127732667083073
auc 0.8314326500340786
ap 0.9038425011253121
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8173016864459712
recall 0.8173016864459712
f1 0.8173016864459712
auc 0.8350344208277072
ap 0.9058111772700589
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8046533416614616
recall 0.8046533416614616
f1 0.8046533416614616
auc 0.8237626019184604
ap 0.8990419045750022
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  False
Y_test.shape (12808,)
Y_prob.shape (12808,)
Y_pred.shape (12808,)
precision 0.8101186758276078
recall 0.8101186758276078
f1 0.8101186758276078
auc 0.8293603754641169
ap 0.9022761376196985
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3071517801374141
f1 0.46995579978497193
auc 0.8282741116478964
ap 0.9011731867927011
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3132417239225484
f1 0.47705112960761
auc 0.8338807973896702
ap 0.903279031530892
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3202685821361649
f1 0.48515671200473093
auc 0.832370978709824
ap 0.9026697651102011
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.30262336039975013
f1 0.46463677775113876
auc 0.8290706498436915
ap 0.9022197660913556
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3182386008744535
f1 0.4828239753612888
auc 0.8340525430896757
ap 0.9051528408628837
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3088694565896315
f1 0.4719637318062515
auc 0.8347209456066849
ap 0.9046396766284024
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3118363522798251
f1 0.4754195929056065
auc 0.8317723132130489
ap 0.9037643784353264
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.32058088694565895
f1 0.48551495802293954
auc 0.8358932468620291
ap 0.9058337014281339
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3193316677076827
f1 0.4840809563261924
auc 0.8243530623427504
ap 0.8990646529009129
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 1.0
recall 0.3297938788257339
f1 0.4960075152653828
auc 0.8297118281008786
ap 0.9022878048717499
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7157679228260115
recall 0.7157679228260115
f1 0.7157679228260115
auc 0.802067197729338
ap 0.8448007224230678
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7162537303074468
recall 0.7162537303074468
f1 0.7162537303074468
auc 0.8023764044703536
ap 0.8460803436691401
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7148136581303353
recall 0.7148136581303353
f1 0.7148136581303353
auc 0.8018922994741033
ap 0.8453497959739253
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7160455271011174
recall 0.7160455271011174
f1 0.7160455271011174
auc 0.8022245268672805
ap 0.8453372971438009
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7144666527864529
recall 0.7144666527864529
f1 0.7144666527864529
auc 0.8024749649816965
ap 0.8453229044945861
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7162190297730585
recall 0.7162190297730585
f1 0.7162190297730585
auc 0.8020027608249929
ap 0.8465452527977267
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7150045110694705
recall 0.7150045110694705
f1 0.7150045110694705
auc 0.8024576681476419
ap 0.8457551734138565
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7131827330140884
recall 0.7131827330140884
f1 0.7131827330140885
auc 0.800438601545393
ap 0.8447067627464755
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7143105003817058
recall 0.7143105003817058
f1 0.7143105003817058
auc 0.801707834128132
ap 0.8446463135952093
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  False
Y_test.shape (115272,)
Y_prob.shape (115272,)
Y_pred.shape (115272,)
precision 0.7149004094663057
recall 0.7149004094663057
f1 0.7149004094663057
auc 0.8015763812297376
ap 0.8451420208125972
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 0.9998906745380999
recall 0.31737108751474774
f1 0.4818121954431713
auc 0.8023186096815352
ap 0.8447387028885016
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 1.0
recall 0.3158095634672774
f1 0.4800232073630633
auc 0.8025534677460906
ap 0.8459340458237874
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 0.9999445522594954
recall 0.31289471857866613
f1 0.4766423068282433
auc 0.8023710575440246
ap 0.8451555494720004
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 0.9998900373872883
recall 0.3155319591921716
f1 0.4796898079763663
auc 0.8024117912066654
ap 0.8453112709752302
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 1.0
recall 0.3142827399541953
f1 0.4782574257425743
auc 0.8028722295365717
ap 0.8452492670659151
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 1.0
recall 0.3167811784301478
f1 0.4811447545260495
auc 0.8023446981484827
ap 0.8464368107042666
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 1.0
recall 0.31530640571864804
f1 0.4794417549367489
auc 0.8025532597331362
ap 0.8455514387873666
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 0.9999449339207048
recall 0.3150635019779305
f1 0.4791545728006755
auc 0.8007675348984086
ap 0.8446059036246097
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 1.0
recall 0.3140571864806718
f1 0.47799622377437717
auc 0.8020185314279649
ap 0.8445913331128376
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
is_supserved =  True
precision 0.9999450126470911
recall 0.31551460892497746
f1 0.47967608345862683
auc 0.8017156814243567
ap 0.8451065010805588
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9994376054489783
recall 0.27581727148876484
f1 0.4323247977222352
auc 0.9410002619283668
ap 0.9615453647569088
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.99972444199504
recall 0.27111512218115347
f1 0.42655331464230806
auc 0.939737146700382
ap 0.9607446949302995
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9993485615819446
recall 0.27336847490558336
f1 0.4293026404874746
auc 0.9398502334340972
ap 0.9608250566036131
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.999348438353861
recall 0.27331673976650206
f1 0.42923883163838744
auc 0.9387392655452869
ap 0.9600976661742953
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9993476980052184
recall 0.27300632893201426
f1 0.4288558696447195
auc 0.9393433354579974
ap 0.9604707988480807
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9995575594134501
recall 0.27271891149267374
f1 0.42852046046778397
auc 0.941376948320172
ap 0.9619873385735036
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9995703359972502
recall 0.2674591723527417
f1 0.42200162350177545
auc 0.939350905809612
ap 0.9606702005197355
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9995797613044209
recall 0.27346044848617235
f1 0.42943738575071655
auc 0.9399848924109976
ap 0.9610043691013113
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9992286845945383
recall 0.2755356023982111
f1 0.4319591948921521
auc 0.9392186979014329
ap 0.9603598915008229
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9993903336346627
recall 0.27326500462742076
f1 0.42917889224935674
auc 0.9401548189118893
ap 0.9611718821008053
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9994376054489783
recall 0.27581727148876484
f1 0.4323247977222352
auc 0.9410002619283668
ap 0.9615453647569088
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.99972444199504
recall 0.27111512218115347
f1 0.42655331464230806
auc 0.939737146700382
ap 0.9607446949302995
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9993485615819446
recall 0.27336847490558336
f1 0.4293026404874746
auc 0.9398502334340972
ap 0.9608250566036131
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.999348438353861
recall 0.27331673976650206
f1 0.42923883163838744
auc 0.9387392655452869
ap 0.9600976661742953
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9993476980052184
recall 0.27300632893201426
f1 0.4288558696447195
auc 0.9393433354579974
ap 0.9604707988480807
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9995575594134501
recall 0.27271891149267374
f1 0.42852046046778397
auc 0.941376948320172
ap 0.9619873385735036
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9995703359972502
recall 0.2674591723527417
f1 0.42200162350177545
auc 0.939350905809612
ap 0.9606702005197355
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9995797613044209
recall 0.27346044848617235
f1 0.42943738575071655
auc 0.9399848924109976
ap 0.9610043691013113
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9992286845945383
recall 0.2755356023982111
f1 0.4319591948921521
auc 0.9392186979014329
ap 0.9603598915008229
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9993903336346627
recall 0.27326500462742076
f1 0.42917889224935674
auc 0.9401548189118893
ap 0.9611718821008053
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | pubmed |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 1      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.500  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  True
precision 0.9050005447216473
recall 0.7781490039343034
f1 0.8367946543995434
auc 0.9269160226007432
ap 0.9378610430100969
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  True
precision 0.9081368708890696
recall 0.767376506588397
f1 0.8318440292445167
auc 0.9256703503748237
ap 0.9366929442188664
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  True
precision 0.9085267332549941
recall 0.7725285705364392
f1 0.8350264943130041
auc 0.9261474249114141
ap 0.9373863979167817
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  True
precision 0.908465472204849
recall 0.7710297882970086
f1 0.8341243434053406
auc 0.9248964741572127
ap 0.9362141865653854
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  True
precision 0.9094864137447922
recall 0.7702491725473053
f1 0.8340969416220054
auc 0.9258576030944445
ap 0.9369851855530995
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  True
precision 0.9097115172869412
recall 0.7739336788859053
f1 0.8363476852476718
auc 0.926460305434171
ap 0.9377883404495589
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  True
precision 0.9072796653702209
recall 0.7720914257166053
f1 0.8342442645074224
auc 0.925907658927702
ap 0.9371165357863778
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  True
precision 0.9063202505988576
recall 0.7679073252981952
f1 0.8313923023613528
auc 0.9245687461893247
ap 0.9357779099509664
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  True
precision 0.9094837137159317
recall 0.7689689627177918
f1 0.8333446128857607
auc 0.9262392687685777
ap 0.9373393623394568
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 32026
len(negative_edge) 32026
len(positive_edge) 32026
is_supserved =  True
precision 0.9094059953541536
recall 0.7701242740273527
f1 0.8339898895971055
auc 0.9236810003974437
ap 0.9354907701406282
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9068441064638784
recall 0.7746408494690818
f1 0.8355453749242068
auc 0.9263422055078787
ap 0.93721498689455
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9061861686606362
recall 0.7758900687070581
f1 0.8359916548892927
auc 0.9267764842671331
ap 0.9377817899703158
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9071805779668476
recall 0.7725484072454716
f1 0.8344690325192282
auc 0.9269670472584866
ap 0.9375498866429749
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.910065581018348
recall 0.771424109931293
f1 0.8350292417430106
auc 0.9271584534338119
ap 0.9380180731122539
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9088085930364254
recall 0.7768582136164897
f1 0.837669007088616
auc 0.928352727214916
ap 0.9385414171119983
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9085209778536187
recall 0.7648657089319175
f1 0.830527154653509
auc 0.9249688475464859
ap 0.936128077794495
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9063335653320634
recall 0.7727045596502186
f1 0.834201520592053
auc 0.9258202946237928
ap 0.936609847958517
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9053329931104873
recall 0.7756402248594628
f1 0.8354834911610852
auc 0.9268485460172651
ap 0.9375840729386364
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.911979263099426
recall 0.7691442848219863
f1 0.8344938585345193
auc 0.926221703350615
ap 0.9372252878815143
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9090606262491672
recall 0.767051842598376
f1 0.8320403807717063
auc 0.925595023566236
ap 0.9366394524554831
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9443323503543898
recall 0.9443323503543898
f1 0.9443323503543898
auc 0.9696142844756765
ap 0.980598580369629
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9423663924672772
recall 0.9423663924672772
f1 0.9423663924672772
auc 0.9689996238620237
ap 0.9802331460410552
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9433493714108334
recall 0.9433493714108334
f1 0.9433493714108334
auc 0.9690973072121971
ap 0.9800822015523634
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9421077137979202
recall 0.9421077137979202
f1 0.9421077137979202
auc 0.9680598931976278
ap 0.979660297116154
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.94246986393502
recall 0.94246986393502
f1 0.94246986393502
auc 0.9685783639961839
ap 0.9801464841656045
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9430389570076052
recall 0.9430389570076052
f1 0.9430389570076052
auc 0.9684661668575621
ap 0.9797922466892289
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9436597858140617
recall 0.9436597858140617
f1 0.9436597858140617
auc 0.9682993579932409
ap 0.9799940128822812
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9428320140721196
recall 0.9428320140721196
f1 0.9428320140721196
auc 0.9697213278476485
ap 0.9805419435903575
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9399348129753221
recall 0.9399348129753221
f1 0.9399348129753221
auc 0.965872118585743
ap 0.9783523937302738
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  False
Y_test.shape (38658,)
Y_prob.shape (38658,)
Y_pred.shape (38658,)
precision 0.9436080500801904
recall 0.9436080500801904
f1 0.9436080500801904
auc 0.9687424614787258
ap 0.9800131717540043
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 1.0
recall 0.11751924259756386
f1 0.21032164479674084
auc 0.9344477505442277
ap 0.9541175050547633
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9999499399279135
recall 0.11482326701654949
f1 0.20599260592248078
auc 0.9342060735557864
ap 0.9533384237037474
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 1.0
recall 0.11700189120675086
f1 0.20949273609617278
auc 0.9341866220453157
ap 0.9535824591639465
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 1.0
recall 0.11708811643855302
f1 0.20963094086408823
auc 0.9325387452846724
ap 0.9530913928620673
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 1.0
recall 0.11694440771888275
f1 0.20940058772972664
auc 0.934053491810058
ap 0.953126043647061
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 1.0
recall 0.11878962767944908
f1 0.21235382370470846
auc 0.9345006337141082
ap 0.9544129679961147
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 1.0
recall 0.11693291102130914
f1 0.2093821569182471
auc 0.9337384817645402
ap 0.952821261750823
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 1.0
recall 0.1184332300546668
f1 0.21178417606364935
auc 0.9341602626891592
ap 0.9536080419604498
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 1.0
recall 0.11682369239435972
f1 0.20920704528375691
auc 0.9336932556359328
ap 0.9530101652303853
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 1.0
recall 0.11708811643855302
f1 0.20963094086408823
auc 0.9353668047946022
ap 0.9534344147737723
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8952708334530906
recall 0.8952708334530906
f1 0.8952708334530904
auc 0.9327694984839819
ap 0.9543995319417449
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8953570586848928
recall 0.8953570586848928
f1 0.8953570586848928
auc 0.9317389359885448
ap 0.9536702021669609
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.89538005208004
recall 0.89538005208004
f1 0.89538005208004
auc 0.9320374270693522
ap 0.9539445052057371
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8950523961991917
recall 0.8950523961991917
f1 0.8950523961991917
auc 0.931068345319123
ap 0.9533428641996952
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8950638928967654
recall 0.8950638928967654
f1 0.8950638928967654
auc 0.9315302716677584
ap 0.9535148811639321
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8956272310778729
recall 0.8956272310778729
f1 0.8956272310778729
auc 0.9330322808272804
ap 0.9547097028696803
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8938567396515351
recall 0.8938567396515351
f1 0.8938567396515351
auc 0.9310626174077492
ap 0.9532425362623557
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8951846082212884
recall 0.8951846082212884
f1 0.8951846082212884
auc 0.9319931114217235
ap 0.9538630666675798
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8944775613205107
recall 0.8944775613205107
f1 0.8944775613205107
auc 0.9312065502615736
ap 0.9533579929848941
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.895167363174928
recall 0.895167363174928
f1 0.895167363174928
auc 0.9320047654229443
ap 0.9540419930930716
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11826788762998604
f1 0.21151977793199167
auc 0.9740024511266007
ap 0.979680977122158
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11687102281545864
f1 0.20928293496386882
auc 0.9738103565528334
ap 0.9792114787602175
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11842309483160018
f1 0.21176797113516513
auc 0.9740034775973928
ap 0.9788628327347639
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11449117905737492
f1 0.2054591031473401
auc 0.9732767362766162
ap 0.97842509849192
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11635366547674479
f1 0.2084530540365187
auc 0.9725335647317014
ap 0.979295576164423
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11190439236380569
f1 0.20128419877163597
auc 0.9733228431497947
ap 0.9785881663953037
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11744011588804387
f1 0.21019491643131627
auc 0.9731389349147953
ap 0.9790530430293565
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.1207512028558125
f1 0.21548262013571529
auc 0.9743637996261456
ap 0.9795777033602368
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11112835635573491
f1 0.20002793686269035
auc 0.9700644340742256
ap 0.9776212822289375
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11568110093641679
f1 0.2073730581961512
auc 0.9737009270043001
ap 0.9788535683973657
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9988979704288732
recall 0.5627295773190543
f1 0.7199020451386591
auc 0.9762827472922511
ap 0.9855498089608136
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9989862685466777
recall 0.560815355165813
f1 0.7183565275016567
auc 0.9758541254761803
ap 0.9853534329235696
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9991736296024241
recall 0.5629882559884112
f1 0.7201853077432164
auc 0.9761870968092655
ap 0.9855314345738407
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9988817444786133
recall 0.5545553313673754
f1 0.7131736526946107
auc 0.9751252241503733
ap 0.9849938002175548
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9987947339143334
recall 0.5573490609964302
f1 0.7154574132492114
auc 0.9754672570659004
ap 0.9850677898414644
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9994498441225014
recall 0.5639194991980961
f1 0.7210186869522077
auc 0.9756182299082108
ap 0.9854510941200038
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9988894030541416
recall 0.5583837756738579
f1 0.7163337094312073
auc 0.9751009582202539
ap 0.9848768472683347
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9989849589369751
recall 0.5600910548916136
f1 0.7177617184910163
auc 0.976487781821805
ap 0.9857070925316147
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9984298512976817
recall 0.5592632831496714
f1 0.7169385860193658
auc 0.9731164382081272
ap 0.9836700862643704
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 0.9989790235752738
recall 0.5568317036577164
f1 0.7150782314055079
auc 0.9757091843207798
ap 0.9853471825656277
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11826788762998604
f1 0.21151977793199167
auc 0.9740024511266007
ap 0.979680977122158
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11687102281545864
f1 0.20928293496386882
auc 0.9738103565528334
ap 0.9792114787602175
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11842309483160018
f1 0.21176797113516513
auc 0.9740034775973928
ap 0.9788628327347639
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11449117905737492
f1 0.2054591031473401
auc 0.9732767362766162
ap 0.97842509849192
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11635366547674479
f1 0.2084530540365187
auc 0.9725335647317014
ap 0.979295576164423
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11190439236380569
f1 0.20128419877163597
auc 0.9733228431497947
ap 0.9785881663953037
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11744011588804387
f1 0.21019491643131627
auc 0.9731389349147953
ap 0.9790530430293565
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.1207512028558125
f1 0.21548262013571529
auc 0.9743637996261456
ap 0.9795777033602368
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11112835635573491
f1 0.20002793686269035
auc 0.9700644340742256
ap 0.9776212822289375
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
is_supserved =  True
precision 1.0
recall 0.11568110093641679
f1 0.2073730581961512
auc 0.9737009270043001
ap 0.9788535683973657
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8952708334530906
recall 0.8952708334530906
f1 0.8952708334530904
auc 0.9327694984839819
ap 0.9543995319417449
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8953570586848928
recall 0.8953570586848928
f1 0.8953570586848928
auc 0.9317389359885448
ap 0.9536702021669609
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.89538005208004
recall 0.89538005208004
f1 0.89538005208004
auc 0.9320374270693522
ap 0.9539445052057371
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8950523961991917
recall 0.8950523961991917
f1 0.8950523961991917
auc 0.931068345319123
ap 0.9533428641996952
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8950638928967654
recall 0.8950638928967654
f1 0.8950638928967654
auc 0.9315302716677584
ap 0.9535148811639321
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8956272310778729
recall 0.8956272310778729
f1 0.8956272310778729
auc 0.9330322808272804
ap 0.9547097028696803
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8938567396515351
recall 0.8938567396515351
f1 0.8938567396515351
auc 0.9310626174077492
ap 0.9532425362623557
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8951846082212884
recall 0.8951846082212884
f1 0.8951846082212884
auc 0.9319931114217235
ap 0.9538630666675798
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.8944775613205107
recall 0.8944775613205107
f1 0.8944775613205107
auc 0.9312065502615736
ap 0.9533579929848941
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  False
Y_test.shape (347926,)
Y_prob.shape (347926,)
Y_pred.shape (347926,)
precision 0.895167363174928
recall 0.895167363174928
f1 0.895167363174928
auc 0.9320047654229443
ap 0.9540419930930716
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9204189695821899
recall 0.7437226733291693
f1 0.8226901352495121
auc 0.9252354716816981
ap 0.9363293997210478
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9205280172413793
recall 0.747001873828857
f1 0.824736225087925
auc 0.9256433654637307
ap 0.9368802453418652
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9237367436057392
recall 0.7399125546533417
f1 0.821668863147673
auc 0.925933451961044
ap 0.9367274992784315
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9233272635697958
recall 0.7442848219862586
f1 0.8241946360948279
auc 0.9260361838576062
ap 0.9371428358340012
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9219327990135635
recall 0.7472204871955028
f1 0.8254329676395501
auc 0.9267328776596139
ap 0.9372340333616979
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9228599412340842
recall 0.7356652092442224
f1 0.8186984099400468
auc 0.9239775821326537
ap 0.9353254305166108
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9197268939978398
recall 0.7446283572767021
f1 0.8229670026232223
auc 0.9247520249094784
ap 0.935751033948272
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9180183626625861
recall 0.7494378513429106
f1 0.8252063273727648
auc 0.9258558756219273
ap 0.9367733730275498
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9241261057636101
recall 0.7405996252342286
f1 0.822246493646088
auc 0.9250822550592014
ap 0.9363139014340958
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
is_supserved =  True
precision 0.9215251002843011
recall 0.7389756402248595
f1 0.8202159557689309
auc 0.9245173149706168
ap 0.9357893048303674
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  True
precision 0.962221494102228
recall 0.6077230304409909
f1 0.7449488223431376
auc 0.949810655393529
ap 0.9486938632275991
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  True
precision 0.9627594210813762
recall 0.583676510150446
f1 0.726755047088986
auc 0.9483035473279795
ap 0.9467608543708425
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  True
precision 0.9635115793830077
recall 0.5781408439045589
f1 0.7226601654196603
auc 0.9485067983104294
ap 0.9469573842396961
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  True
precision 0.9645456400489729
recall 0.5869151335802827
f1 0.7297721512473143
auc 0.9498851912082897
ap 0.9485239151622751
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  True
precision 0.9644525522556007
recall 0.5853216894646441
f1 0.7285125563425627
auc 0.9497973848863184
ap 0.9487280154184619
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  True
precision 0.9645390070921985
recall 0.5896157109450986
f1 0.7318542302135173
auc 0.9498724826654795
ap 0.9486722922288904
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  True
precision 0.96780680523918
recall 0.5627030606543468
f1 0.7116423925986993
auc 0.9485182759702693
ap 0.9471247560588267
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  True
precision 0.9643506414806863
recall 0.5763094178755458
f1 0.7214626658808442
auc 0.9482934137148312
ap 0.9472320030719412
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  True
precision 0.963171629538738
recall 0.5766612172257517
f1 0.7214078144315218
auc 0.9483702509713399
ap 0.9469945086679064
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
is_supserved =  True
precision 0.9623266473727353
recall 0.5952134594292573
f1 0.7355056481463724
auc 0.9495051621668689
ap 0.9482343225290779
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.500     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 0.9982069908870774
recall 0.592114208021754
f1 0.7433121588977365
auc 0.9834664924531691
ap 0.9875623689576631
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 0.9982813741614769
recall 0.5923115721146466
f1 0.7434882840725321
auc 0.9833384767056144
ap 0.9876707213843079
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 0.9979540301918788
recall 0.5936492620775861
f1 0.7444501735932075
auc 0.9841886357519769
ap 0.9880809229085945
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 0.9981459851308008
recall 0.5903050371702375
f1 0.741868140196639
auc 0.9834403902537168
ap 0.9875794820793362
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 0.9983228588805544
recall 0.5939343435450977
f1 0.7447769505228206
auc 0.9833320981596817
ap 0.9876063653933653
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 0.9982622375064023
recall 0.5983750356351835
f1 0.7482415849729211
auc 0.9838215484528698
ap 0.9879505326941684
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 0.9983068315665489
recall 0.594767658603978
f1 0.7454273110802676
auc 0.9835494078997624
ap 0.98787551290803
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 0.9981241724290127
recall 0.5950965987587992
f1 0.7456346425970957
auc 0.9837878363128754
ap 0.9876740725988943
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 0.9985473401614475
recall 0.5954255389136203
f1 0.7460109214548202
auc 0.9849575748111052
ap 0.9886963585459672
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 0.9982247437774524
recall 0.5980460954803622
f1 0.7479738346978236
auc 0.9841801095841152
ap 0.9881248159280026
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.500     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 1.0
recall 0.06277274621170588
f1 0.11813013917690633
auc 0.6569607075742095
ap 0.8011978906414222
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 1.0
recall 0.06322229775662815
f1 0.11892583120204604
auc 0.6648751159489219
ap 0.806125242322136
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 1.0
recall 0.06618275915001864
f1 0.12414899524877107
auc 0.6575843750708915
ap 0.8016931342006531
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 1.0
recall 0.06363895528606829
f1 0.11966270127620972
auc 0.6632028738336332
ap 0.8052257312857256
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 1.0
recall 0.06212583057389092
f1 0.11698393690382788
auc 0.6586701394297351
ap 0.8021517424800224
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 1.0
recall 0.06338676783403872
f1 0.11921676994937257
auc 0.6583567528377888
ap 0.8019640911366868
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 1.0
recall 0.06290432227363435
f1 0.11836309431704474
auc 0.657687133433241
ap 0.8017143574255106
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 1.0
recall 0.06326615644393763
f1 0.11900342366868785
auc 0.6612761347026195
ap 0.8039294342602433
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 1.0
recall 0.06366088462972304
f1 0.11970146792017154
auc 0.6585577594782903
ap 0.8025593743810847
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
is_supserved =  True
precision 1.0
recall 0.06432972961119274
f1 0.12088308316764365
auc 0.6574977925509876
ap 0.8017195810246053
Warning: can not import net
+---------------+--------+
|   Parameter   | Value  |
+===============+========+
| Graph input   | pubmed |
+---------------+--------+
| Graph type    | direct |
+---------------+--------+
| Is supervised | 1      |
+---------------+--------+
| Order         | 1      |
+---------------+--------+
| Test percent  | 0.100  |
+---------------+--------+
| Version       | 2      |
+---------------+--------+

 Link prediction experiments.

graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  True
precision 0.8985661178969729
recall 0.7925058548009367
f1 0.8422100547536087
auc 0.9268952400453149
ap 0.937725534284084
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  True
precision 0.9001956947162426
recall 0.790007806401249
f1 0.8415100615333444
auc 0.9265149750664398
ap 0.9375192153309636
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  True
precision 0.8940618411806044
recall 0.7945355191256831
f1 0.8413656278416135
auc 0.9268194429971218
ap 0.938432601198605
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  True
precision 0.8916681345781222
recall 0.79032006245121
f1 0.8379407382883629
auc 0.9224361578367798
ap 0.9343887942953011
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  True
precision 0.9034358047016274
recall 0.7800156128024981
f1 0.8372015081692501
auc 0.9257879742419228
ap 0.9366491066491219
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  True
precision 0.9026517173874354
recall 0.7918813427010148
f1 0.8436460412508316
auc 0.9270311360233424
ap 0.9380510865051719
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  True
precision 0.9045553145336226
recall 0.7812646370023419
f1 0.8384016084443328
auc 0.9283312034838122
ap 0.9393369144035534
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  True
precision 0.8922230113636364
recall 0.7845433255269321
f1 0.8349256459250644
auc 0.9220023632493399
ap 0.9336214790790478
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  True
precision 0.8959588798298476
recall 0.7892271662763466
f1 0.8392130820951272
auc 0.9264890390448037
ap 0.9378336457595906
graph_type direct
h2
type(G1) <class 'networkx.classes.digraph.DiGraph'>
test_num 6405
len(negative_edge) 6405
len(positive_edge) 6405
is_supserved =  True
precision 0.8999282639885222
recall 0.7834504293520687
f1 0.8376596277439278
auc 0.9253441733228273
ap 0.9355786680058894
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9128873771730914
recall 0.754372267332917
f1 0.82609439124487
auc 0.924005191652937
ap 0.9349484122419438
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9154716981132075
recall 0.7576514678326046
f1 0.8291182501708817
auc 0.9285348183774897
ap 0.9380950786144546
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9115950120975247
recall 0.7648344784509682
f1 0.831790778636325
auc 0.9263806515759007
ap 0.9374449766677393
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9149416635302974
recall 0.759212991880075
f1 0.8298344427376686
auc 0.9301985705568935
ap 0.9392304662211854
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9098482043687524
recall 0.7674890693316677
f1 0.8326274775537862
auc 0.9257880332053553
ap 0.9370174114662275
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9060680067631035
recall 0.7531230480949407
f1 0.8225462607657543
auc 0.9211133607937887
ap 0.9320727056376412
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9138317757009345
recall 0.7634291068082448
f1 0.8318870171856388
auc 0.9253186616071077
ap 0.9372438726834678
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9149295774647888
recall 0.7607745159275453
f1 0.8307613607298151
auc 0.9265169069846648
ap 0.9377725499219487
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9148336153412295
recall 0.7598376014990631
f1 0.830162927578265
auc 0.9247028178827956
ap 0.9364185447352382
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9157719363198815
recall 0.7724859462835728
f1 0.8380484499407082
auc 0.9259349442357427
ap 0.9387205463728354
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.100     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9976468679000324
recall 0.6740679824561403
f1 0.8045412904070147
auc 0.9908054160895662
ap 0.9918898936953997
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9974228879761617
recall 0.6790021929824561
f1 0.8079720781550705
auc 0.9905976448282164
ap 0.9918215166262436
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9974055456461813
recall 0.6744517543859649
f1 0.804736050238765
auc 0.989673330976839
ap 0.9914377806960382
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9976001919846412
recall 0.6837171052631579
f1 0.8113594222699326
auc 0.9899217487592336
ap 0.9915019817837447
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9978227562293364
recall 0.6783991228070175
f1 0.8076759896870206
auc 0.99021950113256
ap 0.991831337706732
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.997160704145372
recall 0.6739035087719298
f1 0.8042660385382928
auc 0.9895035732148354
ap 0.9912315064119195
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9976487757418518
recall 0.6746162280701754
f1 0.8049322954144045
auc 0.9898183545658279
ap 0.9918254723965534
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9969884421292529
recall 0.671546052631579
f1 0.8025289916792243
auc 0.9899561042820868
ap 0.99112880415499
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9985346792575708
recall 0.6724780701754386
f1 0.8036954527584851
auc 0.9900757504712989
ap 0.9919645012143089
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9987044534412955
recall 0.6762061403508772
f1 0.8064073226544622
auc 0.9906494636570867
ap 0.9923668689834675
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | pubmed   |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.8985995390888141
recall 0.7915365396627108
f1 0.8416770444167705
auc 0.9289410974792847
ap 0.938926745166234
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9016829052258636
recall 0.7948157401623985
f1 0.8448833928126815
auc 0.9324892244111953
ap 0.941441608571783
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.8984744871120462
recall 0.8001249219237976
f1 0.8464524655158172
auc 0.9299034561667228
ap 0.9403212400884533
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9053885826071492
recall 0.7949718925671455
f1 0.846595160888002
auc 0.9340234388563362
ap 0.9424324235702137
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.8983347940403155
recall 0.8002810743285447
f1 0.8464778264101082
auc 0.9299515649572545
ap 0.9404194027617314
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.8918108012707378
recall 0.7890381011867583
f1 0.8372825186412594
auc 0.9236259905095232
ap 0.9340576083395299
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.8965274105411599
recall 0.7941911305434104
f1 0.8422621511964892
auc 0.9275466374857064
ap 0.9389691616817193
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9016074898427839
recall 0.797001873828857
f1 0.8460837132200579
auc 0.9305672258047654
ap 0.941047977011142
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9000176959830118
recall 0.7941911305434104
f1 0.8437992534218167
auc 0.9284383081935439
ap 0.9395039887266543
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
is_supserved =  True
precision 0.9046706169397002
recall 0.8105871330418488
f1 0.8550485916652939
auc 0.9306657110581652
ap 0.9425988931202095
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 1        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 1        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 1        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.500    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 96646
len(negative_edge) 96646
len(positive_edge) 96646
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.100    |
+---------------+----------+
| Version       | 1        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 19329
len(negative_edge) 19329
len(positive_edge) 19329
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.8888321072459979
recall 0.859826514833614
f1 0.8740887482505427
auc 0.9405313295782884
ap 0.9406357334290137
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.8924461360211794
recall 0.8545552789961084
f1 0.8730897985552358
auc 0.9392189423077824
ap 0.9390307715950459
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.8877278684618134
recall 0.8565844461178527
f1 0.8718781357603204
auc 0.939421969074684
ap 0.9393259419601467
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.8878223461556795
recall 0.8565327109787714
f1 0.8718968972629793
auc 0.9387965566042524
ap 0.9385884171719603
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.8934629942771863
recall 0.8534745894241879
f1 0.8730111130710883
auc 0.9391928662336699
ap 0.9392018260877182
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.8887485176599587
recall 0.8573087380649909
f1 0.8727455730721065
auc 0.9397305032358504
ap 0.9397114314169431
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.8884339693585833
recall 0.8556877037071101
f1 0.8717534273851145
auc 0.9388646060695633
ap 0.938752626907883
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.8916527575871785
recall 0.8567683932790306
f1 0.8738625703564727
auc 0.9396205865646725
ap 0.9394332443136141
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.8926817259309964
recall 0.8546012657864028
f1 0.8732265311816273
auc 0.9396453072929806
ap 0.9395267315515955
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.8919366450683945
recall 0.8545955174376161
f1 0.8728669017123499
auc 0.93931335912578
ap 0.9390257351435485
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8416692855013256
recall 0.6362700486711378
f1 0.7246968057058807
auc 0.8826885443379529
ap 0.8634386629832692
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8424184276511517
recall 0.6364771598959571
f1 0.72510878089065
auc 0.8834450241663119
ap 0.864482723902111
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8409143961041574
recall 0.6363857872967721
f1 0.7244918480710684
auc 0.8826469706578446
ap 0.8637532077606714
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.843620867768595
recall 0.636733003173675
f1 0.7257200581809095
auc 0.8835289046387169
ap 0.8646529251294741
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8422721076363402
recall 0.6360690289529309
f1 0.7247896826498598
auc 0.8829420116152845
ap 0.8642124464265684
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8415913926693163
recall 0.6384873570780261
f1 0.726103883508597
auc 0.8832001525060071
ap 0.8641530062059081
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8414767959723746
recall 0.6353197736396143
f1 0.7240087884015314
auc 0.8822546197904718
ap 0.8628344433044133
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8418581844197394
recall 0.637951304496141
f1 0.7258563091723153
auc 0.8826520712551879
ap 0.8634718440275766
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8422707606195615
recall 0.6379817620292026
f1 0.7260293439719384
auc 0.8828155017470825
ap 0.8637981666981436
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8421693155807731
recall 0.6365198004422434
f1 0.7250441473915743
auc 0.8830324790211066
ap 0.8643502275782725
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | facebook |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 1        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9122743000123805
recall 0.8047918235486856
f1 0.8551690437650795
auc 0.9462601352414864
ap 0.9444569069696553
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9122258491629632
recall 0.8000034490092721
f1 0.8524370262613888
auc 0.9458702731946508
ap 0.9440544957556316
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9117708374050476
recall 0.8045101544581319
f1 0.8547888145458543
auc 0.9459132361234346
ap 0.9443408374711662
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9117202465499942
recall 0.8043606973896749
f1 0.8546822175598048
auc 0.9455166259467376
ap 0.9437113454621863
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9128140062654101
recall 0.8023085368727833
f1 0.8540013338799386
auc 0.9461187177921047
ap 0.9445135988731233
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.912799415837582
recall 0.8048090685950461
f1 0.8554094304174494
auc 0.9465317816064855
ap 0.9449524352893951
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9123232349635361
recall 0.8025327224754689
f1 0.8539134104608384
auc 0.9458593276959305
ap 0.9440826253938764
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9119873054846314
recall 0.8028086432172359
f1 0.8539223479058391
auc 0.9462075725441246
ap 0.9443504710490127
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9120854053560837
recall 0.804446922621477
f1 0.8548913242678592
auc 0.9463019339316274
ap 0.9445982708898464
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 173963
len(negative_edge) 173963
len(positive_edge) 173963
is_supserved =  True
precision 0.9113359216217625
recall 0.8041997436236441
f1 0.8544224749980914
auc 0.9459173515278576
ap 0.9439960835984539
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8056881960813449
recall 0.726661915291509
f1 0.7641372860510403
auc 0.87540213983256
ap 0.8576847948746218
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8067758420598994
recall 0.724133940047392
f1 0.7632242945651825
auc 0.8760757688183667
ap 0.8587355620488911
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8054215205292309
recall 0.7290315113637056
f1 0.7653250457225442
auc 0.875791378507523
ap 0.858440989902307
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8084758303747802
recall 0.7254923460219416
f1 0.7647394983883187
auc 0.8762067255238735
ap 0.8589523139892814
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8063385997186452
recall 0.7262416013352583
f1 0.7641970521025963
auc 0.8758570769479245
ap 0.8586539650106797
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8052476177694269
recall 0.7309686104664267
f1 0.7663123477327952
auc 0.8767201212767384
ap 0.8591563258067865
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.805449628127113
recall 0.7256568167004745
f1 0.7634740421004733
auc 0.8750900433579176
ap 0.8572160926919409
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.805753645034169
recall 0.7261319542162363
f1 0.7638735806013381
auc 0.8756719414260776
ap 0.8579641558746758
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.806910596700835
recall 0.7240730249812686
f1 0.7632507472557813
auc 0.8754280952211495
ap 0.8580545859219793
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
is_supserved =  True
precision 0.8063240303672651
recall 0.7252608687706731
f1 0.763647208984613
auc 0.875752941955361
ap 0.8586036465737451
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.100     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9987214319961643
recall 0.3425986842105263
f1 0.5101849206025227
auc 0.6845302130222761
ap 0.8143062303183766
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9979196671467435
recall 0.3418859649122807
f1 0.5092898852546041
auc 0.6817769815592297
ap 0.8121104289040427
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9990359897172236
recall 0.34089912280701756
f1 0.5083387835186397
auc 0.6864953489294783
ap 0.8154582180144478
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9988864142538976
recall 0.34424342105263156
f1 0.5120280518633288
auc 0.6819251175842567
ap 0.8132510619895679
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9987206141052295
recall 0.3423793859649123
f1 0.5099416159719103
auc 0.686044864766082
ap 0.8150098232631915
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9993510707332901
recall 0.33771929824561403
f1 0.504835272906081
auc 0.6804006881925208
ap 0.8113814792851619
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9985625299472928
recall 0.3427631578947368
f1 0.5103465164687155
auc 0.6847523847481917
ap 0.814352807597156
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9982503578813424
recall 0.34407894736842104
f1 0.5117625473967464
auc 0.6886971171418129
ap 0.8168061615690886
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9988448844884489
recall 0.3318530701754386
f1 0.49818930041152265
auc 0.679487620289416
ap 0.8109134554410948
graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
is_supserved =  True
precision 0.9988869454603275
recall 0.3444078947368421
f1 0.5122100370989441
auc 0.6814416199575831
ap 0.8125535230090961
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 1         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 1         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.900     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 164163
len(negative_edge) 164163
len(positive_edge) 164163
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.500     |
+---------------+-----------+
| Version       | 1         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.X_test, self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.500     |
+---------------+-----------+
| Version       | 1         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.X_test, self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.500     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.X_test, self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.500     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 91202
len(negative_edge) 91202
len(positive_edge) 91202
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.X_test, self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.100     |
+---------------+-----------+
| Version       | 1         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.X_test, self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.100     |
+---------------+-----------+
| Version       | 1         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.X_test, self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 0         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.100     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.X_test, self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+-----------+
|   Parameter   |   Value   |
+===============+===========+
| Graph input   | wikipedia |
+---------------+-----------+
| Graph type    | undirect  |
+---------------+-----------+
| Is supervised | 1         |
+---------------+-----------+
| Order         | 1         |
+---------------+-----------+
| Test percent  | 0.100     |
+---------------+-----------+
| Version       | 2         |
+---------------+-----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 18240
len(negative_edge) 18240
len(positive_edge) 18240
order 0
Traceback (most recent call last):
  File "main.py", line 72, in <module>
    main(args)
  File "main.py", line 61, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 104, in train_test_scores
    self.X_test = model.get_scores(self.X_test, self.test_edge)
TypeError: get_scores() missing 1 required positional argument: 'edges'
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 57636
len(negative_edge) 57636
len(positive_edge) 57636
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 32020
len(negative_edge) 32020
len(positive_edge) 32020
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
Traceback (most recent call last):
  File "main.py", line 75, in <module>
    main(args)
  File "main.py", line 62, in main
    if emb:
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 102, in train_test_scores
    model.get_scores_matrix()
  File "/home/fengxy/code/src/index.py", line 215, in get_scores_matrix
    model = Deep(dimensions=256)
NameError: name 'Deep' is not defined
Traceback (most recent call last):
  File "main.py", line 75, in <module>
    main(args)
  File "main.py", line 62, in main
    precision, recall, f1, auc, ap = Pred.predict(method=method, is_supervised=args.is_supervised, edge_feature=edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 102, in train_test_scores
    model.get_scores_matrix()
  File "/home/fengxy/code/src/index.py", line 215, in get_scores_matrix
    model = Deep(dimensions=256)
NameError: name 'Deep' is not defined
Traceback (most recent call last):
  File "main.py", line 75, in <module>
    tab_printer(args)
  File "main.py", line 62, in main
    if emb:
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 102, in train_test_scores
    model.get_scores_matrix()
  File "/home/fengxy/code/src/index.py", line 215, in get_scores_matrix
    model = Deep(dimensions=256)
NameError: name 'Deep' is not defined
Warning: can not import net
+---------------+----------+
|   Parameter   |  Value   |
+===============+==========+
| Graph input   | cora     |
+---------------+----------+
| Graph type    | undirect |
+---------------+----------+
| Is supervised | 0        |
+---------------+----------+
| Order         | 1        |
+---------------+----------+
| Test percent  | 0.900    |
+---------------+----------+
| Version       | 2        |
+---------------+----------+

 Link prediction experiments.

graph_type undirect
h1
type(G1) <class 'networkx.classes.graph.Graph'>
test_num 6404
len(negative_edge) 6404
len(positive_edge) 6404
X [[ 0.74999956  0.74986493  0.74949004 ... -0.02450303 -0.02637396
  -0.02824373]
 [ 0.83333293  0.83320878  0.83286307 ... -0.01061847 -0.01142373
  -0.01222727]
 [ 0.66666634  0.66656627  0.66628759 ...  0.01475065  0.01587321
   0.01699427]
 ...
 [ 0.97499958  0.97486948  0.97450718 ...  0.02238427  0.02409302
   0.02580062]
 [ 0.8571426   0.85706194  0.85683732 ... -0.02406919 -0.02590477
  -0.02773874]
 [ 0.92307664  0.92298798  0.92274108 ... -0.03573034 -0.0384406
  -0.04114523]]
Traceback (most recent call last):
  File "main.py", line 74, in <module>
    args = parameter_parser()
  File "main.py", line 61, in main
    Pred = Predictor(args.graph_input, graph, attribute, args.test_percent, args.order, args.version)
  File "/home/fengxy/code/src/predictor.py", line 111, in predict
    self.train_test_scores(method, edge_feature)
  File "/home/fengxy/code/src/predictor.py", line 102, in train_test_scores
    model.get_scores_matrix()
  File "/home/fengxy/code/src/index.py", line 221, in get_scores_matrix
    save_embedding(X, path_emb)
  File "/home/fengxy/code/src/utils.py", line 118, in save_embedding
    embedding.to_csv(output_path, index=None)
  File "/pub/data/fxy/anaconda3/envs/graph/lib/python3.8/site-packages/pandas/core/generic.py", line 3466, in to_csv
    return DataFrameRenderer(formatter).to_csv(
  File "/pub/data/fxy/anaconda3/envs/graph/lib/python3.8/site-packages/pandas/io/formats/format.py", line 1105, in to_csv
    csv_formatter.save()
  